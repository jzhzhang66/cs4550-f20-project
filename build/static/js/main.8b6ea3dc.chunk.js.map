{"version":3,"sources":["services/MealPlanService.js","actions/mealPlanActions.js","components/MealPlanTable.js","components/MealPlanRow.js","components/MealPlanCard.js","components/MealPlanGrid.js","containers/FavoriteMealPlans.js","services/RecipeService.js","actions/recipeActions.js","components/SearchRecipe.js","actions/recipeAndIngredientActions.js","components/RecipeTable.js","containers/RecipeSelector.js","services/IngredientService.js","actions/ingredientActions.js","components/SearchIngredient.js","components/IngredientTable.js","containers/IngredientSelector.js","reducers/recipeReducer.js","components/Ingredients.js","components/Instructions.js","containers/RecipeDetails.js","containers/IngredientDetails.js","services/FollowingService.js","actions/profileActions.js","components/MyRecipes.js","containers/OthersProfilePage.js","actions/homeActions.js","containers/HomePage.js","services/UserService.js","actions/userActions.js","containers/ProfilePage.js","reducers/profileReducer.js","reducers/homeReducer.js","reducers/userReducer.js","components/NavBar.js","containers/LoginPage.js","containers/Register.js","components/EditProfile.js","services/DailyPlanService.js","services/MealService.js","actions/mealActions.js","components/Meals.js","actions/dailyPlanActions.js","components/DailyPlans.js","components/RecipesAndIngredients.js","containers/MealPlanEditor.js","containers/MealPlanManager.js","reducers/dailyPlanReducer.js","reducers/mealPlanReducer.js","reducers/mealReducer.js","reducers/ingredientReducer.js","reducers/recipesAndIngredientsReducer.js","containers/Search.js","index.js"],"names":["url","fetch","then","response","json","mealPlan","id","method","creatorId","newMealPlan","body","JSON","stringify","headers","mealPlanId","FIND_ALL_MEAL_PLANS","FIND_MEAL_PLAN_BY_ID","FIND_MEAL_PLANS_BY_CREATOR","DELETE_MEAL_PLAN","CREATE_MEAL_PLAN","UPDATE_MEAL_PLAN","CHANGE_DISPLAY","ENTER_TITLE","UPDATE_TITLE","changeDisplay","dispatch","type","connect","state","console","log","userReducer","user","mealPlans","mealPlanReducer","className","cellspacing","width","scope","onClick","aria-hidden","class","map","MealPlanRow","props","editing","style","backgroundColor","this","color","changeColor","to","name","onChange","event","updateTitle","target","value","diet","time","updateMealPlan","setState","deleteMealPlan","React","Component","MealPlanService","status","newTitle","number","MealPlanCard","title","updateCourse","_id","lastUpdated","owner","deleteCourse","MealPlanGrid","MealPlanManager","isTable","createMealPlan","mealPlanService","actualMealPlan","prevState","filter","c","newMealPlans","enterTitle","placeholder","aria-label","aria-describedby","key","search","recipeId","numRecipes","FIND_RECIPES","UPDATE_KEYWORD","FIND_RECIPE_INFO_BY_ID","FIND_RECIPE_INSTRUCTIONS_BY_ID","findRecipeInfoById","RecipeService","recipe","findRecipeInstructionsById","instructions","recipes","recipeReducer","keyword","findRecipes","recipeName","updateKeyword","DELETE_RECIPE","DELETE_INGREDIENT","ADD_RECIPE_FOR_MEAL","ADD_INGREDIENT_FOR_MEAL","addRecipeForMeal","mealId","undefined","src","image","alt","RecipeSelector","match","params","ingredientId","FIND_INGREDIENTS","FIND_INGREDIENT_INFO_BY_ID","findIngredientInfoById","IngredientService","ingredient","ingredients","ingredientReducer","findIngredients","ingredientName","currIngredient","addIngredientForMeal","possibleUnits","unit","IngredientSelector","initialState","steps","action","results","recipeIngredients","extendedIngredients","measures","metric","amount","unitLong","recipeInstructions","RecipeDetails","prevProps","servings","readyInMinutes","healthScore","IngredientDetails","consistency","aisle","addFollowing","newFollowing","uid","UPDATE_FOLLOWERS_EXPANDED","UPDATE_FOLLOWING_EXPANDED","ADD_FOLLOWING","GET_CREATORS","GET_FOLLOWERS","updateFollowersExpanded","followersExpanded","updateFollowingExpanded","followingExpanded","created","MyRecipes","profileReducer","following","followers","followerId","userId","expanded","Date","length","follower","FIND_RANDOM_RECIPE","HomePage","popularUser","userFollowings","randomMealPlans","href","data-ride","role","data-slide","findRandomRecipes","randomRecipes","username","newUser","credentials","EDIT_USER","UPDATE_USER","GET_IS_USER","UPDATE_NEWUSER","UPDATE_VERIFYPASSWORD","UPDATE_USERNAME","CREATE_USER","WRONG_LOGIN","SIGN_IN","profile","userService","updateNewUser","ProfilePage","userType","history","push","getFollowers","getCreators","followingService","users","popularMealPlan","recentRecipes","homeReducer","password","tempUser","verifyPassword","isUsernameTaken","isWrong","NavBar","LoginPage","for","signIn","Register","updateUsername","updateVerifyPassword","selected","createUser2","disable","createUser","EditProfile","htmlFor","editUser","updateUser","dailyPlanUrl","dailyPlanId","dailyPlan","mealUrl","meal","DELETE_MEAL","CREATE_MEAL","UPDATE_MEAL","FIND_MEALS_FOR_DAILY_PLAN","FIND_MEAL","meals","mealReducer","deleteMeal","MealService","createMeal","actualMeal","updateMeal","DELETE_DAILY_PLAN","CREATE_DAILY_PLAN","UPDATE_DAILY_PLAN","FIND_DAILY_PLAN_FOR_MEAL_PLAN","FIND_DAILY_PLAN","dailyPlans","dailyPlanReducer","deleteDailyPlan","DailyPlanService","createDailyPlan","actualDailyPlan","updateDailyPlan","topics","recipesAndIngredientsReducer","lessonId","deleteIngredient","deleteRecipe","MealPlanEditor","topicId","findMealPlanById","findDailyPlansForMealPlan","findDailyPlan","findMealsForDailyPlan","findMeal","snapshot","findMealPlansByCreator","Search","rootReducer","combineReducers","store","createStore","ReactDOM","render","path","component","exact","FavoriteMealPlans","OthersProfilePage","document","getElementById"],"mappings":"yoBAEMA,G,MAAM,6BAkDG,EAhDiB,kBAC5BC,MAAM,GAAD,OAAID,EAAJ,eACAE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA8CpB,EAhCe,SAACC,GAAD,OAC1BJ,MAAM,GAAD,OAAID,EAAJ,sBAAqBK,EAASC,IAAM,CACrCC,OAAQ,WAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA4BpB,EA1Be,SAACI,EAAWC,GAEtC,OAAOR,MAAM,GAAD,OAAID,EAAJ,oBAAmBQ,EAAnB,aAAyC,CACjDD,OAAQ,OACRG,KAAMC,KAAKC,UAAUH,GACrBI,QAAS,CACL,eAAgB,sBAGnBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAiBpB,EAZe,SAACU,EAAYT,GAAb,OAC1BJ,MAAM,GAAD,OAAID,EAAJ,sBAAqBc,GAAc,CACpCP,OAAQ,MACRG,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACL,eAAgB,sBAGnBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAIpB,EA5CiB,SAACU,GAAD,OAC5Bb,MAAM,GAAD,OAAID,EAAJ,sBAAqBc,GAAc,CACpCP,OAAQ,QAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAwCpB,EAtCuB,SAACI,GAEnC,OAAOP,MAAM,GAAD,OAAID,EAAJ,oBAAmBQ,EAAnB,eACPN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WChBtBW,G,MAAsB,uBACtBC,EAAuB,uBACvBC,EAA6B,6BAC7BC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAc,cACdC,EAAe,eAgDfC,EAAgB,SAACC,GAC1B,OAAOA,EAAS,CACZC,KAAML,KCJCM,eAbe,SAACC,GAG3B,OAFAC,QAAQC,IAAIF,GAEJ,CACJpB,UAAWoB,EAAMG,YAAYC,KAAK1B,GAClC2B,UAAWL,EAAMM,gBAAgBD,cAIR,SAACR,GAAD,MAAe,CAC5CD,cAAe,kBAAMA,EAAcC,OAGxBE,EA3CO,SAAC,GAAD,IAAEM,EAAF,EAAEA,UAAWT,EAAb,EAAaA,cAAb,OACV,qBAAKW,UAAU,oBAAf,SACI,wBAAO7B,GAAG,UAAU6B,UAAU,oBAAoBC,YAAY,IAAIC,MAAM,OAAxE,UACI,gCACI,+BACI,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,MAA7C,mBACA,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,MAA7C,kBACA,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,MAA7C,0BACA,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,KAA7C,SACI,qBAAKE,QAASf,EAAd,SACI,mBAAGW,UAAU,iBAAiBK,cAAY,aAGlD,oBAAIL,UAAU,aAAaG,MAAM,MAAMD,MAAM,KAA7C,SAAkD,mBAAGI,MAAM,uBAAuBD,cAAY,WAC9F,oBAAIL,UAAU,aAAaG,MAAM,MAAMD,MAAM,YAIrD,gCAEQJ,EAAUS,KAAI,SAAArC,GAAQ,OAClB,cAAC,EAAD,CAEIA,SAAUA,GADLA,EAASC,iBCtB5CqC,E,kDAKF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IALVhB,MAAQ,CACJiB,SAAS,EACTxC,SAAU,EAAKuC,MAAMvC,UAEN,E,qDAIT,IAAD,OACL,OACI,qBAAI8B,UAAU,aAAaW,MAAO,CAAEC,gBAAiBC,KAAKpB,MAAMqB,OAASV,QAASS,KAAKE,YAAvF,UACI,qBAAIf,UAAU,aAAd,WAESa,KAAKpB,MAAMiB,SACZ,eAAC,IAAD,CAAMM,GAAE,gBAAWH,KAAKpB,MAAMvB,SAASC,IAAvC,UACI,mBAAGmC,MAAM,kBAAkBD,cAAY,SAD3C,IACwDQ,KAAKpB,MAAMvB,SAAS+C,QAI5EJ,KAAKpB,MAAMiB,SACX,uBACIQ,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAMW,YAAYD,EAAME,OAAOC,QACzDA,MAAOT,KAAKpB,MAAMvB,SAAS+C,UAGvC,oBAAIjB,UAAU,aAAd,SAA4Ba,KAAKJ,MAAMvC,SAASqD,OAChD,oBAAIvB,UAAU,aAAd,SAA4Ba,KAAKJ,MAAMvC,SAASsD,OAChD,oBAAIxB,UAAU,eAEVa,KAAKpB,MAAMiB,SACX,oBAAIV,UAAU,aAAd,SACI,wBAAQI,QAAS,kBAAM,EAAKK,MAAMgB,eAAe,EAAKvD,WAAtD,SACI,mBAAG8B,UAAU,cAAcK,cAAY,cAK9CQ,KAAKpB,MAAMiB,SACZ,oBAAIV,UAAU,aAAd,SACI,mBAAGA,UAAU,eAAeI,QAAS,kBAAM,EAAKsB,SAAS,CAAEhB,SAAS,KAASL,cAAY,YAI5FQ,KAAKpB,MAAMiB,SACZ,oBAAIV,UAAU,aAAd,SACI,mBAAGM,MAAM,cAAcF,QAAS,kBAAM,EAAKK,MAAMkB,eAAe,EAAKlB,MAAMvC,WAAWmC,cAAY,kB,GA9ChGuB,IAAMC,WAsEjBrC,eAhBe,SAACC,GAG3B,OAFAC,QAAQC,IAAIF,GAEJ,CACJpB,UAAWoB,EAAMG,YAAYC,KAAK1B,GAClC2B,UAAWL,EAAMM,gBAAgBD,cAIR,SAACR,GAAD,MAAe,CAC5CqC,eAAgB,SAACzD,GAAD,OFzCU,SAACoB,EAAUpB,GAAX,OAC1B4D,EAA+B5D,EAASC,IACnCJ,MAAK,SAAAgE,GAAM,OAAIzC,EAAS,CACrBC,KAAMR,EACNb,gBEqCsByD,CAAerC,EAAUpB,IACvDuD,eAAgB,SAAC9C,EAAYL,GAAb,OFnCU,SAACgB,EAAUX,EAAYT,GAAvB,OAC1B4D,EAA+BnD,EAAYT,GACtCH,MAAK,SAAAgE,GAAM,OAAIzC,EAAS,CACrBC,KAAMR,EACNb,gBE+BqCuD,CAAenC,EAAUX,EAAYL,IAClF8C,YAAa,SAACY,GAAD,OFRU,SAAC1C,EAAUpB,EAAU+D,GAC5C,OAAO3C,EAAS,CACZC,KAAMH,EACNlB,WACA+D,WEIuBb,CAAY9B,EAAU0C,IACjD3C,cAAe,kBAAMA,EAAcC,OAGxBE,CAEVgB,GC7EC0B,G,yDAKF,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IALVhB,MAAQ,CACJiB,SAAS,EACTxC,SAAU,EAAKuC,MAAMvC,UAEN,EAInBkD,YAAc,SAACD,GACX,IAAMa,EAAWb,EAAME,OAAOC,MACxBpD,EAAQ,eACP,EAAKuB,MAAMvB,UAElBA,EAASiE,MAAQH,EACjB,EAAKN,SAAS,CACVxD,SAAUA,KAXC,EAgBnBkE,aAAe,WACX,EAAKV,SAAS,CAAEhB,SAAS,IACzB,EAAKD,MAAM2B,aAAa,EAAK3C,MAAMvB,SAASmE,IAAK,EAAK5C,MAAMvB,WAlB7C,E,qDAoBT,IAAD,OACL,OACI,sBAAKoC,MAAM,qDAAX,UACI,sBAAKA,MAAM,yBAAX,WAESO,KAAKpB,MAAMiB,SACZ,cAAC,IAAD,CAAMM,GAAE,gBAAWH,KAAKpB,MAAMvB,SAASmE,KAAvC,SACI,oBAAI/B,MAAM,aAAV,SAAwBO,KAAKpB,MAAMvB,SAASiE,UAIhDtB,KAAKpB,MAAMiB,SACX,uBACIQ,SAAUL,KAAKO,YACfE,MAAOT,KAAKpB,MAAMvB,SAASiE,MAC3BnC,UAAU,iBAElB,mBAAGM,MAAM,YAAT,6FACA,mBAAGA,MAAM,YAAT,SAAqB,wBAAOA,MAAM,aAAb,2BAAyCO,KAAKJ,MAAMvC,SAASoE,YAAY,uBAAzE,UACbzB,KAAKJ,MAAMvC,SAASqE,cAEhC,sBAAKjC,MAAM,cAAX,UAEQO,KAAKpB,MAAMiB,SACX,oBAAIV,UAAU,aAAd,SACI,wBAAQI,QAASS,KAAKuB,aAAcpC,UAAU,4BAA9C,SACI,mBAAGA,UAAU,cAAcK,cAAY,cAK9CQ,KAAKpB,MAAMiB,SACZ,oBAAIV,UAAU,aAAd,SACI,wBAAQI,QAAS,kBAAM,EAAKsB,SAAS,CAAEhB,SAAS,KAASV,UAAU,4BAAnE,SACI,mBAAGA,UAAU,aAAaK,cAAY,cAK7CQ,KAAKpB,MAAMiB,SACZ,oBAAIV,UAAU,aAAd,SACI,wBAAQI,QAAS,kBAAM,EAAKK,MAAM+B,aAAa,EAAK/B,MAAMvC,WAAW8B,UAAU,4BAA/E,SACI,mBAAGA,UAAU,cAAcK,cAAY,uB,GAnE5CuB,IAAMC,YA8ElBK,IC7ETO,G,yDAIF,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IAJVhB,MAAQ,CACJK,UAAW,EAAKW,MAAMX,WAEP,E,qDAKT,IAAD,OACL,OAEI,cADA,CACA,OAAKE,UAAU,oBAAf,UACI,uBAAO7B,GAAG,UAAU6B,UAAU,oBAAoBC,YAAY,IAAIC,MAAM,OAAxE,SACI,gCACI,+BACI,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,MAA7C,8BACA,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,MAA7C,yBACA,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,QAC7C,oBAAIF,UAAU,aAAaG,MAAM,MAAMD,MAAM,KAA7C,SACI,qBAAKE,QAASS,KAAKJ,MAAMpB,cAAzB,SACI,mBAAGiB,MAAM,gBAAgBD,cAAY,aAG7C,oBAAIL,UAAU,aAAaG,MAAM,MAAMD,MAAM,KAA7C,SAAkD,mBAAGI,MAAM,uBAAuBD,cAAY,WAC9F,oBAAIL,UAAU,aAAaG,MAAM,MAAMD,MAAM,KAA7C,SAAkD,mBAAGI,MAAM,eAAeD,cAAY,kBAMlG,qBAAKL,UAAU,MAAf,SAEQa,KAAKJ,MAAMX,UAAUS,KAAI,SAAArC,GAAQ,OAC7B,cAAC,EAAD,CAEIA,SAAUA,EACVsE,aAAc,EAAK/B,MAAM+B,aACzBJ,aAAc,EAAK3B,MAAM2B,aACzBhB,YAAa,EAAKA,aAJblD,EAASmE,iB,GAnCnBT,IAAMC,YAiDlBY,IChDTC,G,kNACJjD,MAAQ,CACNK,UAAW,GACXqC,MAAO,GACPQ,SAAS,G,EAWXC,eAAiB,WACf,IAAMtE,EAAc,CAClB6D,MAAO,EAAK1C,MAAM0C,MAClBI,MAAO,KACPD,YAAa,SAEf5C,QAAQC,IAAIrB,GAEZuE,EAA+BvE,GAAaP,MAAK,SAAA+E,GAAc,OAC3D,EAAKpB,UAAS,SAAAqB,GAAS,MAAK,CAC1BjD,UAAU,GAAD,mBACJiD,EAAUjD,WADN,CACiBgD,IAE1BX,MAAO,W,EAIfR,eAAiB,SAACzD,GAChB2E,EAA+B3E,EAASmE,KAAKtE,MAAK,SAAAgE,GAAM,OACpD,EAAKL,UAAS,SAAAqB,GAAS,MAAK,CAC1BjD,UAAWiD,EAAUjD,UAAUkD,QAAO,SAAAC,GAAC,OAAIA,EAAEZ,MAAQnE,EAASmE,e,EAKtEjB,YAAc,SAAClD,EAAU+D,GACvBvC,QAAQC,IAAIzB,GACZ,IAAMgF,EAAY,eACb,EAAKzD,MAAMK,WAEhBJ,QAAQC,IAAIuD,GACZA,EAAajB,GAAU/D,EACvB,EAAKwD,SAAS,CACZ5B,UACAoD,K,EAIJzB,eAAiB,SAAC9C,EAAYT,GAC5B2E,EAA+BlE,EAAYT,GAC1CH,MAAK,SAAAgE,GACJ,EAAKL,UAAS,SAAAqB,GAAS,MAAK,CAC1BjD,UAAWiD,EAAUjD,UAAUS,KAAI,SAAA0C,GAAC,OAAIA,EAAEZ,MAAQ1D,EAAWT,EAAU+E,a,EAK7EE,WAAa,SAAChC,GACZ,IAAMa,EAAWb,EAAME,OAAOC,MAC9B,EAAKI,SAAS,CACZS,MAAOH,K,EAIX3C,cAAgB,WACd,EAAKqC,UAAS,SAAAqB,GAAS,MAAK,CAC1BJ,SAAUI,EAAUJ,a,kEAhEH,IAAD,OAClBE,IACC9E,MAAK,SAAA+B,GAAS,OAAI,EAAK4B,SAAS,CAC/B5B,UAAWA,OAEbJ,QAAQC,IAAIkB,KAAKpB,MAAMK,a,+BAgEvB,OACI,gCAEE,sBAAKQ,MAAM,gDAAX,UACE,oBAAGA,MAAM,gBAAT,cAA0B,mBAAGA,MAAM,aAAaD,cAAY,SAA5D,yBACA,sBAAKC,MAAM,mBAAX,UACE,uBAAOf,KAAK,OAAO+B,MAAOT,KAAKpB,MAAM0C,MAAOjB,SAAUL,KAAKsC,WAAY7C,MAAM,eAAe8C,YAAY,mBAAmBC,aAAW,uBAAuBC,mBAAiB,iBAC9K,qBAAKhD,MAAM,qBAAX,SACE,wBAAQA,MAAM,0BAA0BF,QAASS,KAAK+B,eAAgBrD,KAAK,SAA3E,SAAoF,mBAAGS,UAAU,oBACVK,cAAY,mBAKvGQ,KAAKpB,MAAMkD,SACX,cAAC,EAAD,CACI7C,UAAWe,KAAKpB,MAAMK,UACtB6B,eAAgBd,KAAKc,eACrBF,eAAgBZ,KAAKY,eACrBpC,cAAewB,KAAKxB,cACpB+B,YAAaP,KAAKO,eAGrBP,KAAKpB,MAAMkD,SACZ,cAAC,EAAD,CACI7C,UAAWe,KAAKpB,MAAMK,UACtB6B,eAAgBd,KAAKc,eACrBF,eAAgBZ,KAAKY,eACrBpC,cAAewB,KAAKxB,cACpB+B,YAAaP,KAAKO,qB,GAzGJQ,IAAMC,YAkHrBa,IC3HT7E,G,MAAM,uCAGN0F,EADO,mCAmDE,EAhDY,SAACC,GAC1B,OAAO1F,MAAM,GAAD,OAAID,EAAJ,kCAAiC0F,EAAjC,kBAA8CC,GAAU,CAClE,OAAU,MACV,QAAW,CACT,eAAgB,sBAIjBzF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAwChB,EA3BmB,SAACwF,GAAD,OAChC3F,MAAM,GAAD,OAAID,EAAJ,YAAW4F,EAAX,+BAA0CF,EAA1C,0BAAuE,CAC1EnF,OAAQ,QAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAuBhB,EArBkB,SAACyF,GAAD,OAC/B5F,MAAM,GAAD,OAAID,EAAJ,0BAAyB0F,EAAzB,mBAAuCG,GAAc,CACxD,OAAU,MACV,QAAW,CACT,eAAgB,sBAEjB3F,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAehB,EAb2B,SAACwF,GAEzC,OAAO3F,MAAM,GAAD,OAAID,EAAJ,YAAW4F,EAAX,wCAAmDF,GAAO,CACpEnF,OAAQ,MACR,QAAW,CACT,eAAgB,sBAGjBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC9ClB0F,EAAe,eACfC,EAAiB,iBACjBC,EAAyB,yBACzBC,EAAiC,iCAiBjCC,GAAqB,SAACzE,EAAUmE,GAAX,OAChCO,EAAiCP,GAC9B1F,MAAK,SAAAkG,GAAM,OACV3E,EAAS,CACPC,KAAMsE,EACNI,eAGKC,GAA6B,SAAC5E,EAAUmE,GAEnD,OAAOO,EAAyCP,GAC7C1F,MAAK,SAAAoG,GAAY,OAChB7E,EAAS,CACPC,KAAMuE,EACNK,aAAcA,EAAa,SCMpB3E,gBAVe,SAACC,GAAD,MAAY,CACtC2E,QAAS3E,EAAM4E,cAAcD,QAC7BE,QAAS7E,EAAM4E,cAAcC,YAGA,SAAChF,GAAD,MAAe,CAC5CiF,YAAa,SAACC,GAAD,OD/BU,SAAClF,EAAUkF,GAAX,OACzBR,EAA0BQ,GACvBzG,MAAK,SAAAqG,GAAO,OACX9E,EAAS,CACPC,KAAMoE,EACNS,eC0ByBG,CAAYjF,EAAUkF,IACnDC,cAAe,SAACH,GAAD,ODxBU,SAAChF,EAAUgF,GACtC,OAAOhF,EAAS,CACdC,KAAMqE,EACNU,YCqB4BG,CAAcnF,EAAUgF,OAGzC9E,EA9BM,SAAC,GAAD,IACf8E,EADe,EACfA,QACEC,GAFa,EACNH,QADM,EAEbG,aAAaE,EAFA,EAEAA,cAFA,OAIjB,gCACI,oBAAIzE,UAAU,wBAAd,4BACA,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,kCACboD,YAAY,WACZ9B,MAAOgD,EACPpD,SAAU,SAACC,GAAD,OAAWsD,EAActD,EAAME,OAAOC,UACpD,qBAAKtB,UAAU,wCAAf,SACI,wBAAQI,QAAS,kBAAMmE,EAAYD,IAC/BtE,UAAU,oBADd,+BCxBH0E,I,MAAgB,iBAChBC,GAAoB,oBACpBC,GAAsB,sBACtBC,GAA0B,0BAkB1BC,GAAmB,SAACxF,EAAUyF,EAAQd,GAC/C,OAAO3E,EAAS,CACZC,KAAMqF,GACNG,SACAd,YCuBOzE,gBARe,SAACC,GAAD,MAAY,CACtC2E,QAAS3E,EAAM4E,cAAcD,YAGA,SAAC9E,GAAD,MAAe,CAC5CwF,iBAAkB,SAACC,EAAQd,GAAT,OAAoBa,GAAiBxF,EAAUyF,EAAQd,OAG9DzE,EAvCK,SAAC,GAAD,QACd4E,eADc,MACJ,GADI,MACAW,cADA,WACSC,EADT,SAGhB,8BACI,oBAAIhF,UAAU,cAAd,SAEQoE,EAAQ7D,KAAI,SAAA0D,GAAM,OACd,qBAAIjE,UAAU,4BAAd,UACI,cAAC,IAAD,CAAMgB,GAAE,mBAAciD,EAAO9F,IAAM6B,UAAU,eAA7C,SACKiE,EAAO9B,QAEZ,qBAAK8C,IAAKhB,EAAOiB,MAAOC,IAAI,GAAGnF,UAAU,iBACxC+E,GACG,gCACI,uBACI/E,UAAU,eACVoD,YAAY,eACZlC,SAAU,SAACC,GAAD,OACNzB,QAAQC,IAAIwB,MACpB,wBAAQnB,UAAU,2CACdI,QAAS,kBAAM0E,GAAiBC,EAAQd,IAD5C,iCCpB1BmB,G,kDACJ,WAAY3E,GAAQ,uCACZA,G,qDAGN,OACI,sBAAKT,UAAU,YAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAa+E,OAAQlE,KAAKJ,MAAM4E,MAAMC,OAAOP,gB,GAR1BnD,IAAMC,WAsBpBrC,gBARe,SAACC,GAAD,MAAY,MAIT,SAACH,GAAD,MAAe,KAIjCE,CAEV4F,IChCCvH,GAAM,+CAGN0F,GADO,mCAsDE,GAnDgB,SAACC,GAE9B,OAAO1F,MAAM,GAAD,OAAID,GAAJ,2BAA0B0F,GAA1B,kBAAuCC,GAAU,CAC3D,OAAU,MACV,QAAW,CACT,eAAgB,sBAIjBzF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA0ChB,GAvCuB,SAACsH,GAEnC,OAAOzH,MAAM,GAAD,OAAID,GAAJ,YAAW0H,EAAX,+BAA8ChC,GAA9C,0BAA2E,CACnFnF,OAAQ,QAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCpBtBuH,GAAmB,mBACnB5B,GAAiB,iBACjB6B,GAA6B,6BAmB7BC,GAAyB,SAACpG,EAAUiG,GAAX,OACtCI,GAAyCJ,GACpCxH,MAAK,SAAA6H,GAAU,OACdtG,EAAS,CACPC,KAAMkG,GACNG,mBCgBOpG,gBAVe,SAACC,GAAD,MAAY,CACtCoG,YAAapG,EAAMqG,kBAAkBD,YACrCvB,QAAS7E,EAAMqG,kBAAkBxB,YAGJ,SAAChF,GAAD,MAAe,CAC5CyG,gBAAiB,SAACC,GAAD,ODjCU,SAAC1G,EAAU0G,GAAX,OAC3BL,GAAkCK,GACjCjI,MAAK,SAAA8H,GAAW,OACfvG,EAAS,CACPC,KAAMiG,GACNK,mBC4BiCE,CAAgBzG,EAAU0G,IAC/DvB,cAAe,SAACH,GAAD,ODzBU,SAAChF,EAAUgF,GACtC,OAAOhF,EAAS,CACdC,KAAMqE,GACNU,YCsB4BG,CAAcnF,EAAUgF,OAGzC9E,EAhCU,SAAC,GAGzB,IAFK8E,EAEN,EAFMA,QAEN,IAFeuB,mBAEf,MAF6B,GAE7B,EADQE,EACR,EADQA,gBAAiBtB,EACzB,EADyBA,cAErB,OADH/E,QAAQC,IAAIkG,GACF,gCACH,oBAAI7F,UAAU,wBAAd,gCACA,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,kCACboD,YAAY,WACZ9B,MAAOgD,EACPpD,SAAU,SAACC,GAAD,OAAWsD,EAActD,EAAME,OAAOC,UACpD,qBAAKtB,UAAU,wCAAf,SACI,wBAAQI,QAAS,kBAAM2F,EAAgBzB,IACnCtE,UAAU,oBADd,+BCuCDR,I,OAAAA,aAbe,SAACC,GAE3B,OADAC,QAAQC,IAAIF,GACJ,CACJoG,YAAapG,EAAMqG,kBAAkBD,YACrCI,eAAgBxG,EAAMqG,kBAAkBF,eAIf,SAACtG,GAAD,MAAe,CAC5C4G,qBAAsB,SAACnB,EAAQa,GAAT,ON9BU,SAACtG,EAAUyF,EAAQa,GACnD,OAAOtG,EAAS,CACZC,KAAMsF,GACNE,SACAa,eM0B0CM,CAAqB5G,EAAUyF,EAAQa,IACrFF,uBAAwB,SAACH,GAAD,OAAkBG,GAAuBpG,EAAUiG,OAGhE/F,EAjDS,SAAC,GAAD,IAAG0G,EAAH,EAAGA,qBAAH,IAAyBL,mBAAzB,MAAuC,GAAvC,MAA2Cd,cAA3C,WAAoDC,EAApD,EAAuFiB,GAAvF,EAA+DP,uBAA/D,EAAuFO,gBAAvF,OAEpB,8BACI,oBAAIjG,UAAU,cAAd,SAEQ6F,EAAYtF,KAAI,SAAAqF,GAAU,OACtB,qBAAI5F,UAAU,4BAAd,UACI,cAAC,IAAD,CAAMgB,GAAE,uBAAkB4E,EAAWzH,IAAM6B,UAAU,eAArD,SACK4F,EAAW3E,OAEf8D,GACG,wBAAQ/E,UAAU,2CACdI,QAAS,kBAAM8F,EAAqBnB,EAAQa,IADhD,iBAEJ,uBACI5F,UAAU,eACVoD,YAAY,eACZlC,SAAU,SAACC,GAAD,OACNzB,QAAQC,IAAIwB,MACpB,iCAKQ8E,EAAeE,cAAc5F,KAAI,SAAA6F,GAAI,OAAI,wBAAQ9E,MAAO8E,EAAf,SAAsBA,uBC7BzFC,G,kDACJ,WAAY5F,GAAQ,uCACZA,G,qDAIN,OACI,sBAAKT,UAAU,YAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAiB+E,OAAQlE,KAAKJ,MAAM4E,MAAMC,OAAOP,gB,GAT1BnD,IAAMC,WAsBxBrC,gBAPe,SAACC,GAAD,MAAY,MAGT,SAACH,GAAD,MAAe,KAIjCE,CAEV6G,ICvBCC,GAAe,CACjBlC,QAAS,GACTH,OAAQ,GACRK,QAAS,GACTH,aAAc,CAACoC,MAAO,KAkCXlC,GA/BO,WAAmC,IAAlC5E,EAAiC,uDAAzB6G,GAAcE,EAAW,uCACpD,OAAQA,EAAOjH,MACX,KAAKoE,EAGD,OADAjE,QAAQC,IAAI6G,EAAOpC,SACZ,2BACA3E,GADP,IAEI2E,QAASoC,EAAOpC,QAAQqC,UAEhC,KAAK7C,EACD,OAAO,2BACAnE,GADP,IAEI6E,QAASkC,EAAOlC,UAExB,KAAKT,EAED,OAAO,2BACApE,GADP,IAEIwE,OAAQuC,EAAOvC,SAEvB,KAAKH,EACD,OAAO,2BACArE,GADP,IAEI0E,aAAcqC,EAAOrC,eAG7B,QACI,OAAO1E,ICLJD,I,MAAAA,aATe,SAACC,GAAD,MAAY,CACtCwE,OAAQxE,EAAM4E,cAAcJ,OAC5ByC,kBAAmBjH,EAAM4E,cAAcJ,OAAO0C,wBAGjB,SAACrH,GAAD,MAAe,CAC5CyE,mBAAoB,SAACN,GAAD,OAAcM,GAAmBzE,EAAUmE,OAGpDjE,EA5BK,SAAC,GAAD,QACfyE,cADe,MACN,GADM,MACFyC,yBADE,MACkB,GADlB,SAGhB,sBAAK1G,UAAU,GAAf,UACI,6CAEIN,QAAQC,IAAIsE,GAIRyC,EAAkBnG,KAAI,SAAAqF,GAAU,OAC5B,qBAAI5F,UAAU,kBAAd,UACK4F,EAAW3E,KAAO,IADvB,WAEa2E,EAAWgB,SAASC,OAAOC,OAFxC,IAEiDlB,EAAWgB,SAASC,OAAOE,sBCsBjFvH,gBATe,SAACC,GAAD,MAAY,CACtCwE,OAAQxE,EAAM4E,cAAcJ,OAC5B+C,mBAAoBvH,EAAM4E,cAAcF,iBAGX,SAAC7E,GAAD,MAAe,CAC5C4E,2BAA4B,SAACT,GAAD,OAAcS,GAA2B5E,EAAUmE,OAGpEjE,EAnCM,SAAC,GACoC,EAApDyE,OAAqD,IAAD,IAAvC+C,0BAAuC,MAAlB,CAACT,MAAO,IAAU,EAEtD,OADI7G,QAAQC,IAAIqH,GACT,qBAAKhH,UAAU,QCDpBiH,G,kDACF,WAAYxG,GAAQ,uCACVA,G,gEAIN,IAAMgD,EAAW5C,KAAKJ,MAAM4E,MAAMC,OAAO7B,SACzC5C,KAAKJ,MAAMsD,mBAAmBN,GAC9B5C,KAAKJ,MAAMyD,2BAA2BT,GACtC/D,QAAQC,IAAI,a,yCAGGuH,GACf,GAAGA,EAAU7B,MAAMC,OAAO7B,WAAa5C,KAAKJ,MAAM4E,MAAMC,OAAO7B,SAAU,CACrE,IAAMA,EAAW5C,KAAKJ,MAAM4E,MAAMC,OAAO7B,SACzC5C,KAAKJ,MAAMsD,mBAAmBN,GAE9B5C,KAAKJ,MAAMyD,2BAA2BT,M,+BAM1C,OACI,sBAAKzD,UAAU,YAAf,UACI,oBAAIA,UAAU,eAAd,SAA8Ba,KAAKJ,MAAMwD,OAAO9B,QAChD,qBAAKnC,UAAU,eAAeiF,IAAKpE,KAAKJ,MAAMwD,OAAOiB,MAAOC,IAAI,KAChE,sBAAKnF,UAAU,cAAf,UACI,gDAAmBa,KAAKJ,MAAMwD,OAAOkD,YACrC,kDAAqBtG,KAAKJ,MAAMwD,OAAOmD,eAAvC,cACA,gDAAmBvG,KAAKJ,MAAMwD,OAAOoD,YAArC,UAEJ,sBAAKrH,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,GAAD,MAEJ,qBAAKA,UAAU,QAAf,SACI,cAAC,GAAD,CAAuBgH,mBAAoB,CAACT,MAAO,kB,GArC/C3E,IAAMC,WAsDnBrC,gBATe,SAACC,GAAD,MAAY,CACtCwE,OAAQxE,EAAM4E,cAAcJ,WAGC,SAAC3E,GAAD,MAAe,CAC5CyE,mBAAoB,SAACN,GAAD,OAAcM,GAAmBzE,EAAUmE,IAC/DS,2BAA4B,SAACT,GAAD,OAAcS,GAA2B5E,EAAUmE,OAGpEjE,CAEVyH,ICxDCK,I,yDACF,WAAY7G,GAAQ,uCACVA,G,gEAKN,IAAM8E,EAAe1E,KAAKJ,MAAM4E,MAAMC,OAAOC,aAC7C1E,KAAKJ,MAAMiF,uBAAuBH,K,+BAIlC,OACI,sBAAKvF,UAAU,YAAf,UACI,oBAAIA,UAAU,oBAAd,SAAmCa,KAAKJ,MAAMmF,WAAW3E,OACzD,wBAAOjB,UAAU,QAAjB,UACI,kCACI,gDACA,6CACA,0CAEJ,gCACI,+BACI,6BACI,+BACKN,QAAQC,IAAIkB,KAAKJ,MAAMmF,YACvB/E,KAAKJ,MAAMmF,WAAWO,cAAc5F,KAAI,SAAA6F,GAAI,OAAI,6BAAKA,YAG9D,6BAAKvF,KAAKJ,MAAMmF,WAAW2B,cAC3B,6BAAK1G,KAAKJ,MAAMmF,WAAW4B,uB,GA9BvB5F,IAAMC,YA+CvBrC,gBARe,SAACC,GAAD,MAAY,CACtCmG,WAAYnG,EAAMqG,kBAAkBF,eAGP,SAACtG,GAAD,MAAe,CAC5CoG,uBAAwB,SAACH,GAAD,OAAkBG,GAAuBpG,EAAUiG,OAGhE/F,CAEV8H,IC7DCzJ,I,OAAM,6BA0CC4J,GAAe,SAACC,GACzB5J,MAAM,GAAD,OAAID,GAAJ,eAAsB,CACvBO,OAAQ,OACRG,KAAMC,KAAKC,UAAUiJ,GACrBhJ,QAAS,CACL,eAAgB,sBAErBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlB,GA9C4B,SAAC0J,GAAD,OACvC7J,MAAM,GAAD,OAAID,GAAJ,qBAAoB8J,EAApB,oBAA2C,CAC5CvJ,OAAQ,QAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA0CpB,GAxC2B,SAAC0J,GAEvC,OAAO7J,MAAM,GAAD,OAAID,GAAJ,oBAAmB8J,EAAnB,oBAA0C,CAClDvJ,OAAQ,QAEPL,MAAK,SAAAC,GACF,OAAOA,EAASC,WCff2J,GAA4B,4BAC5BC,GAA4B,4BAC5BC,GAAgB,gBAChBC,GAAe,eACfC,GAAgB,gBAEhBC,GAA0B,SAAC3I,EAAU4I,GAC9C5I,EAAS,CACLC,KAAMqI,GACNM,uBAIKC,GAA0B,SAAC7I,EAAU8I,GAC9C9I,EAAS,CACLC,KAAMsI,GACNO,uBCjBFhE,I,OAAU,CACZ,CAAEjG,GAAI,IAAKgE,MAAO,WAAYX,KAAM,SAAU2F,SAAU,EAAGkB,QAAS,YACpE,CAAElK,GAAI,IAAKgE,MAAO,iBAAkBX,KAAM,SAAU2F,SAAU,EAAGkB,QAAS,YAC1E,CAAElK,GAAI,IAAKgE,MAAO,kBAAmBX,KAAM,SAAU2F,SAAU,EAAGkB,QAAS,YAC3E,CAAElK,GAAI,IAAKgE,MAAO,cAAeX,KAAM,SAAU2F,SAAU,EAAGkB,QAAS,YACvE,CAAElK,GAAI,IAAKgE,MAAO,kBAAmBX,KAAM,SAAU2F,SAAU,EAAGkB,QAAS,cAwBhEC,GAtBG,kBAEV,wBAAOtI,UAAU,sBAAjB,UACI,gCACI,+BACI,uCACA,sCACA,0CACA,8CAGR,gCACKoE,GAAQ7D,KAAI,SAAA0D,GAAM,OACnB,+BACI,6BAAKA,EAAO9B,QACZ,6BAAK8B,EAAOzC,OACZ,6BAAKyC,EAAOkD,WACZ,6BAAKlD,EAAOoE,sB,mBC2CjB7I,gBAde,SAACC,GAAD,MAAY,CACtC2I,kBAAmB3I,EAAM8I,eAAeH,kBACxCF,kBAAmBzI,EAAM8I,eAAeL,kBACxCM,UAAW/I,EAAM8I,eAAeC,UAChCC,UAAWhJ,EAAM8I,eAAeE,UAChCC,WAAYjJ,EAAMG,YAAYC,KAAK8I,WAGN,SAACrJ,GAAD,MAAe,CAC5C2I,wBAAyB,SAACW,GAAD,OAAcX,GAAwB3I,EAAUsJ,IACzET,wBAAyB,SAACS,GAAD,OAAcT,GAAwB7I,EAAUsJ,IACzEnB,aAAc,SAACC,GAAD,OAAkBD,GAAanI,OAGlCE,EAzDW,SAAC,GAAD,IAAGyI,EAAH,EAAGA,wBAAyBE,EAA5B,EAA4BA,wBAAyBC,EAArD,EAAqDA,kBAAmBF,EAAxE,EAAwEA,kBAC9FO,EADsB,EACtBA,UAAWD,EADW,EACXA,UADW,OAEtB,sBAAKxI,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,qBACA,oBAAIA,UAAU,cAAd,SAA4B,wBACjBI,QAAS,kBAAMqH,GAAa,CAACiB,WAAY,GAAKA,WAAYrK,UAAW,GAAKoC,MAAM4E,MAAMC,OAAOqD,OAAQnH,KAAM,IAAIqH,QAC/G7I,UAAU,wCAFO,sBAG5B,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,eACI,gCACI,oBAAIA,UAAU,SAAd,SAAwByI,EAAUK,SAClC,+BAAI,mBAAG9I,UAAU,cAAb,wBACEkI,GAAqB,wBAAQ9H,QAAS,kBAAM6H,GAAwB,IAAOjI,UAAU,4BAAhE,oBACtBkI,GAAqB,wBAAQ9H,QAAS,kBAAM6H,GAAwB,IAAQjI,UAAU,4BAAjE,yBAEzBkI,GACG,6BAEQO,EAAUlI,KAAI,SAAAwI,GAAQ,OAAI,6BAAKA,EAAS9H,eAIxD,gCACI,oBAAIjB,UAAU,qBAAd,SAAoCwI,EAAUM,SAC9C,+BAAI,mBAAG9I,UAAU,cAAb,wBACEoI,GAAqB,wBAAQhI,QAAS,kBAAM+H,GAAwB,IAAOnI,UAAU,4BAAhE,oBACtBoI,GAAqB,wBAAQhI,QAAS,kBAAM+H,GAAwB,IAAQnI,UAAU,4BAAjE,yBAEzBoI,GACG,6BAEQI,EAAUjI,KAAI,SAAAiI,GAAS,OAAI,6BAAKA,EAAUvH,kBAK9D,sBAAKjB,UAAU,QAAf,UACI,oBAAIA,UAAU,iBAAd,4BACA,cAAC,GAAD,gBCjDHgJ,GAAqB,qBCK5BC,I,mNACJC,YAAc,G,EACdC,eAAiB,G,EACjBC,gBAAkB,G,oGAOhB,OACI,sBAAKpJ,UAAU,YAAf,UACE,oBAAIA,UAAU,iBAAd,oCACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKiF,IAAI,gCAAgCjF,UAAU,6BACnD,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,mBAAGA,UAAU,YAAb,mCAEA,mBAAGqJ,KAAK,IAAIrJ,UAAU,4BAAtB,+BAMR,gCACE,oBAAIA,UAAU,iBAAd,2DACA,sBAAK7B,GAAG,0BAA0B6B,UAAU,iBACvCsJ,YAAU,WADf,UAEE,sBAAKtJ,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,gBAAgBiF,IAAI,gCAAgCE,IAAI,kBAEzE,qBAAKnF,UAAU,gBAAf,SACE,qBAAKA,UAAU,gBAAgBiF,IAAI,gCAAgCE,IAAI,mBAEzE,qBAAKnF,UAAU,gBAAf,SACE,qBAAKA,UAAU,gBAAgBiF,IAAI,gCAAgCE,IAAI,qBAG3E,oBAAGnF,UAAU,wBACVuJ,KAAK,SACLC,aAAW,OAFd,UAGE,sBAAMxJ,UAAU,6BACVK,cAAY,SAClB,sBAAML,UAAU,UAAhB,yBAEF,oBAAGA,UAAU,wBACVqJ,KAAK,2BAA2BE,KAAK,SACrCC,aAAW,OAFd,UAGE,sBAAMxJ,UAAU,6BACVK,cAAY,SAClB,sBAAML,UAAU,UAAhB,2BAKN,gCACE,oBAAIA,UAAU,iBAAd,wDACA,sBAAK7B,GAAG,0BAA0B6B,UAAU,iBACvCsJ,YAAU,WADf,UAEE,sBAAKtJ,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,gBAAgBiF,IAAI,gCAAgCE,IAAI,kBAEzE,qBAAKnF,UAAU,gBAAf,SACE,qBAAKA,UAAU,gBAAgBiF,IAAI,gCAAgCE,IAAI,mBAEzE,qBAAKnF,UAAU,gBAAf,SACE,qBAAKA,UAAU,gBAAgBiF,IAAI,gCAAgCE,IAAI,qBAG3E,oBAAGnF,UAAU,wBACVuJ,KAAK,SACLC,aAAW,OAFd,UAGE,sBAAMxJ,UAAU,6BACVK,cAAY,SAClB,sBAAML,UAAU,UAAhB,yBAEF,oBAAGA,UAAU,wBACVqJ,KAAK,2BAA2BE,KAAK,SACrCC,aAAW,OAFd,UAGE,sBAAMxJ,UAAU,6BACVK,cAAY,SAClB,sBAAML,UAAU,UAAhB,2BAKN,gCACE,oBAAIA,UAAU,iBAAd,6BACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKiF,IAAI,gCAAgCjF,UAAU,6BACnD,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,oBACA,mBAAGA,UAAU,YAAb,gCAEA,mBAAGqJ,KAAK,IAAIrJ,UAAU,4BAAtB,6BAIN,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKiF,IAAI,gCAAgCjF,UAAU,6BACnD,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,oBACA,mBAAGA,UAAU,YAAb,gCAEA,mBAAGqJ,KAAK,IAAIrJ,UAAU,4BAAtB,6BAIN,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKiF,IAAI,gCAAgCjF,UAAU,6BACnD,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,oBACA,mBAAGA,UAAU,YAAb,gCAEA,mBAAGqJ,KAAK,IAAIrJ,UAAU,4BAAtB,6BAIN,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKiF,IAAI,gCAAgCjF,UAAU,6BACnD,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,oBACA,mBAAGA,UAAU,YAAb,gCAEA,mBAAGqJ,KAAK,IAAIrJ,UAAU,4BAAtB,0C,GAtIG4B,IAAMC,YAiKdrC,gBARe,SAACC,GAAD,MAAY,MAIT,SAACH,GAAD,MAAe,CAC9CmK,kBAAmB,SAAC/F,GAAD,ODjKY,SAACpE,EAAUoE,GAAX,OAC7BM,EAAgCN,GAC/B3F,MAAK,SAAA2L,GAAa,OACfpK,EAAS,CACPC,KAAMyJ,GACNU,qBC4J2BD,CAAkBnK,EAAUoE,OAGlDlE,CAEdyJ,ICzKKpL,GAAM,4BAmEG,GA1DU,SAAC8L,GAEtB,OAAO7L,MAAM,GAAD,OAAID,GAAJ,oBAAmB8L,IAAY5L,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAwD1D,GArDW,SAAC0K,EAAQiB,GAE/B,OAAO9L,MAAM,GAAD,OAAID,GAAJ,kBAAiB8K,GAAU,CACnCvK,OAAQ,MACRG,KAAMC,KAAKC,UAAUmL,GACrBlL,QAAS,CACL,eAAgB,sBAGnBX,MAAK,SAAAC,GAEF,OAAOA,EAASC,WA0Cb,GAhCQ,SAAC4B,GAEpB,OAAO/B,MAAM,GAAD,OAAID,GAAJ,UAAiB,CACzBO,OAAQ,OACRG,KAAMC,KAAKC,UAAUoB,GACrBnB,QAAS,CACL,eAAgB,oBAEpBmL,YAAa,YACd9L,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAuBlB,GARQ,WAEnB,OAAOH,MAAM,GAAD,OAAID,GAAJ,YAAmB,CAC3BO,OAAQ,OACRyL,YAAa,YACd9L,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlB,GApBO,SAAC4B,GAEnB,OAAO/B,MAAM,GAAD,OAAID,GAAJ,iBAAwB,CAChCO,OAAQ,OACRG,KAAMC,KAAKC,UAAUoB,GACrBnB,QAAS,CACL,eAAgB,oBAEpBmL,YAAa,YACd9L,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCtDpB6L,GAAY,YACZC,GAAc,cACdC,GAAc,cACdC,GAAiB,iBACjBC,GAAwB,wBACxBC,GAAkB,kBAClBC,GAAc,cACdC,GAAc,cACdC,GAAU,UAiCVC,GAAU,SAACjL,GAEtB,OAAOkL,KAAsBzM,MAAK,SAAAgE,GAEhC,OAAOzC,EAAS,CACdC,KAAM+K,GACNzK,KAAMkC,QAgDC0I,GAAgB,SAACnL,EAAUsK,GAEtC,OAAOtK,EAAS,CACdC,KAAM0K,GACNL,aCzFEc,G,kDAEF,WAAYjK,GAAQ,IAAD,8BACf,cAAMA,IACDhB,MAAQ,CACT8K,QAAS,CACL5B,OAAQ,GACRgB,SAAU,GACVgB,SAAU,YAEdlC,UAAW,GACXD,UAAW,IATA,E,gEAaE,IAAD,OAEhB3H,KAAKJ,MAAM8J,UAAUxM,MAAK,WAEC,KAAvB,EAAK0C,MAAMZ,KAAK1B,GAChB,EAAKsC,MAAMmK,QAAQC,KAAK,UACY,YAA7B,EAAKpK,MAAMZ,KAAK8K,SACvB,EAAKlK,MAAMqK,aAAa,EAAKrK,MAAMZ,KAAK1B,IAExC,EAAKsC,MAAMsK,YAAY,EAAKtK,MAAMZ,KAAK1B,S,+BAOrC,IAAD,OACL,OACI,sBAAK6B,UAAU,YAAf,UACI,oBAAIA,UAAU,SAAd,wBACA,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACkC,YAA7Ba,KAAKJ,MAAMZ,KAAK8K,UACb,gCACI,oBAAI3K,UAAU,SAAd,SAAwBa,KAAKJ,MAAMgI,UAAUK,SAC7C,+BAAI,mBAAG9I,UAAU,cAAb,wBACEa,KAAKJ,MAAMyH,mBAAqB,wBAC9B9H,QAAS,kBAAM,EAAKK,MAAMwH,yBAAwB,IAClDjI,UAAU,4BAFoB,oBAGjCa,KAAKJ,MAAMyH,mBAAqB,wBAC7B9H,QAAS,kBAAM,EAAKK,MAAMwH,yBAAwB,IAClDjI,UAAU,4BAFmB,yBAIpCa,KAAKJ,MAAMyH,mBACR,6BAEQrH,KAAKJ,MAAMgI,UAAUlI,KAAI,SAAAwI,GAAQ,OAAI,6BAAKA,EAASY,mBAKzC,aAA7B9I,KAAKJ,MAAMZ,KAAK8K,UACb,gCACI,oBAAI3K,UAAU,qBAAd,SAAoCa,KAAKJ,MAAM+H,UAAUM,SACzD,+BAAI,mBAAG9I,UAAU,cAAb,wBACEa,KAAKJ,MAAM2H,mBAAqB,wBAAQhI,QAAS,kBAAM,EAAKK,MAAM0H,yBAAwB,IAAOnI,UAAU,4BAA3E,oBACjCa,KAAKJ,MAAM2H,mBAAqB,wBAAQhI,QAAS,kBAAM,EAAKK,MAAM0H,yBAAwB,IAAQnI,UAAU,4BAA5E,yBAEpCa,KAAKJ,MAAM2H,mBACR,6BAEQvH,KAAKJ,MAAM+H,UAAUjI,KAAI,SAAAiI,GAAS,OAAI,6BAAKA,EAAUmB,sBAM/C,YAA7B9I,KAAKJ,MAAMZ,KAAK8K,UACb,gCACI,qBAAK3K,UAAU,QAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,aAAT,SACI,wBAAQhB,UAAU,qCAAlB,kCAGR,qBAAKA,UAAU,QAAf,SACI,wBAAQA,UAAU,kCAAlB,gCAIkB,aAA7Ba,KAAKJ,MAAMZ,KAAK8K,UACb,qBAAK3K,UAAU,QAAf,SACI,wBAAQA,UAAU,uCAAlB,mCAGR,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAAMgB,GAAI,eAAV,SACI,wBAAQhB,UAAU,iCAAlB,wC,GA3FF6B,aAuHXrC,gBAlBe,SAACC,GAAD,MAAY,CACtC2I,kBAAmB3I,EAAM8I,eAAeH,kBACxCF,kBAAmBzI,EAAM8I,eAAeL,kBACxCM,UAAW/I,EAAM8I,eAAeC,UAChCC,UAAWhJ,EAAM8I,eAAeE,UAChC5I,KAAMJ,EAAMG,YAAYC,SAGK,SAACP,GAAD,MAAe,CAC5C2I,wBAAyB,SAACW,GAAD,OAAcX,GAAwB3I,EAC3DsJ,IACJT,wBAAyB,SAACS,GAAD,OAAcT,GAAwB7I,EAC3DsJ,IACJ2B,QAAS,kBAAMA,GAAQjL,IACvBwL,aAAc,SAACnC,GAAD,OPxGU,SAACrJ,EAAUqJ,GAEnC,OAAOqC,GAA4CrC,GAAQ5K,MAAK,SAAAgE,GAE5D,OAAOzC,EAAS,CACZC,KAAMyI,GACNiD,MAAOlJ,OOkGW+I,CAAaxL,EAAUqJ,IACjDoC,YAAa,SAACpC,GAAD,OP/FU,SAACrJ,EAAUqJ,GAElC,OAAOqC,GAA6CrC,GAAQ5K,MAAK,SAAAgE,GAAM,OACnEzC,EAAS,CACLC,KAAMwI,GACNkD,MAAOlJ,OO0FUgJ,CAAYzL,EAAUqJ,OAGpCnJ,CAEVkL,IC7HCpE,GAAe,CACjB4B,mBAAmB,EACnBE,mBAAmB,EACnBK,UAAW,GAEXD,UAAW,IAuCAD,GAlCQ,WAAmC,IAAlC9I,EAAiC,uDAAzB6G,GAAcE,EAAW,uCACrD,OAAQA,EAAOjH,MACX,KAAKqI,GACD,OAAO,2BACAnI,GADP,IAEIyI,kBAAmB1B,EAAO0B,oBAElC,KAAKL,GACD,OAAO,2BACApI,GADP,IAEI2I,kBAAmB5B,EAAO4B,oBAElC,KAAKN,GACD,OAAO,2BACArI,GADP,IAEIgJ,UAAWjC,EAAOkB,eAE1B,KAAKM,GAED,OAAO,2BACAvI,GADP,IAEIgJ,UAAWjC,EAAOyE,QAE1B,KAAKlD,GAED,OAAO,2BACAtI,GADP,IAEI+I,UAAWhC,EAAOyE,QAE1B,QACI,OAAOxL,IC5Cb6G,GAAe,CACnB4E,gBAAiB,GACjB/B,eAAgB,GAChBgC,cAAe,GACfzB,cAAe,IAeF0B,GAZK,WAAmC,IAAlC3L,EAAiC,uDAAzB6G,GAAcE,EAAW,uCACpD,OAAOA,EAAOjH,MACZ,KAAKyJ,GACH,OAAO,2BACFvJ,GADL,IAEEiK,cAAelD,EAAOkD,cAActF,UAExC,QACE,OAAO3E,ICNP6G,GAAe,CACnBsD,QAAS,CACPD,SAAU,GACV0B,SAAU,GACVV,SAAU,YAEZ9K,KAAM,CACJ1B,GAAI,IAENmN,SAAU,GAGVC,eAAgB,GAChBC,iBAAiB,EACjBC,SAAS,GA8DI7L,GA3DK,WAAmC,IAAlCH,EAAiC,uDAAzB6G,GAAcE,EAAW,uCACpD,OAAQA,EAAOjH,MACb,KAAKuK,GACH,OAAO,2BACFrK,GADL,IAEE6L,SAAU9E,EAAO8E,WAErB,KAAKvB,GACH,OAAO,2BACFtK,GADL,IAEEI,KAAM2G,EAAO8E,WAGjB,KAAKtB,GACH,OAAO,eACFvK,GAEP,KAAKwK,GACH,OAAO,2BACFxK,GADL,IAEEmK,QAASpD,EAAOoD,UAEpB,KAAKO,GAEH,OAAO,2BACF1K,GADL,IAEEmK,QAASpD,EAAOoD,QAChB4B,gBAAiBhF,EAAOgF,kBAE5B,KAAKtB,GACH,OAAO,2BACFzK,GADL,IAEE8L,eAAgB/E,EAAO+E,iBAE3B,KAAKnB,GACH,OAAO,2BACF3K,GADL,IAEEI,KAAM2G,EAAOoD,QACb0B,SAAU9E,EAAOoD,UAErB,KAAKS,GAEH,OAAO,2BACF5K,GADL,IAEEgM,SAAS,IAEb,KAAKnB,GAEH,OAAO,2BACF7K,GADL,IAEEgM,SAAS,EACT5L,KAAM2G,EAAO3G,KACbyL,SAAU9E,EAAO3G,OAErB,QACE,OAAOJ,I,UCjEEiM,I,OAhBA,SAAC,GAAD,uBACX,sBAAK1L,UAAU,yCAAf,UACI,cAAC,IAAD,CAAMgB,GAAG,IAAIhB,UAAU,4CAAvB,kBAGA,cAAC,IAAD,CAAMgB,GAAG,WAAWhB,UAAU,4CAA9B,qBAGA,cAAC,IAAD,CAAMgB,GAAG,SAAShB,UAAU,iCAA5B,mBAGA,cAAC,IAAD,CAAMgB,GAAG,UAAUhB,UAAU,iCAA7B,yBCRF2L,I,yDACF,WAAYlL,GAAQ,uCACVA,G,qDAMA,IAAD,OACL,OACI,sBAAKH,MAAM,YAAX,UACI,oBAAIN,UAAU,iBAAd,qBACA,iCAEI,sBAAKM,MAAM,iBAAX,UACI,uBAAOsL,IAAI,WAAWtL,MAAM,0BAA5B,sBAGA,qBAAKA,MAAM,YAAX,SACI,uBAAOA,MAAM,wCACTnC,GAAG,WACHiF,YAAY,QACZ9B,MAAOT,KAAKJ,MAAMmJ,QAAQD,SAC1BzI,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAMgK,cAAX,2BAA8B,EAAKhK,MAAMmJ,SAAzC,IAAkDD,SAAUxI,EAAME,OAAOC,iBAI1G,sBAAKhB,MAAM,iBAAX,UACI,uBAAOsL,IAAI,WAAWtL,MAAM,0BAA5B,uBAEA,qBAAKA,MAAM,YAAX,SACI,uBAAOf,KAAK,WAAWe,MAAM,wCACzBnC,GAAG,WACHiF,YAAY,YACZ9B,MAAOT,KAAKJ,MAAMmJ,QAAQyB,SAC1BnK,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAMgK,cAAX,2BAA8B,EAAKhK,MAAMmJ,SAAzC,IAAkDyB,SAAUlK,EAAME,OAAOC,iBAG1G,sBAAKhB,MAAM,iBAAX,UACI,uBAAOA,MAAM,4BACb,sBAAKA,MAAM,YAAX,UAEI,wBAAQf,KAAK,SACTe,MAAM,sCACNF,QAAS,kBAAM,EAAKK,MAAMoL,OAAX,eAAuB,EAAKpL,MAAMmJ,SAAW,EAAKnJ,MAAMmK,UAF3E,qBAII/J,KAAKJ,MAAMgL,SAAW,mBAAGnL,MAAM,oCAAT,wCAE1B,sBAAKA,MAAM,MAAX,UAEI,qBAAKA,MAAM,QAAX,SACI,mBAAG+I,KAAK,IAAR,gCAGJ,qBAAK/I,MAAM,QAAX,SACI,cAAC,IAAD,CAAMU,GAAG,YACLV,MAAM,cADV,0C,GAvDZsB,IAAMC,YA+EfrC,gBAVe,SAACC,GAAD,MAAY,CACtCmK,QAASnK,EAAMG,YAAYgK,QAC3B6B,QAAShM,EAAMG,YAAY6L,YAGE,SAACnM,GAAD,MAAe,CAC5CmL,cAAe,SAACb,GAAD,OAAaa,GAAcnL,EAAUsK,IACpDiC,OAAQ,SAACjC,EAASgB,GAAV,ON5BU,SAACtL,EAAUO,EAAM+K,GAErC,OAAOJ,GAAmB3K,GACvB9B,MAAK,SAAAgE,GAEmB,OAApBA,EAAO4H,SACRrK,EAAS,CACPC,KAAM8K,MAGR/K,EAAS,CACPC,KAAM+K,GACNzK,KAAMkC,IAER6I,EAAQC,KAAK,gBMcagB,CAAOvM,EAAUsK,EAASgB,OAG7CpL,CAEVmM,IC3ECG,G,kDACF,WAAYrL,GAAQ,uCACVA,G,qDAGA,IAAD,OACL,OACI,sBAAKT,UAAU,YAAf,UACI,yCAEA,sBAAKA,UAAU,iBAAf,UACI,uBAAO4L,IAAI,cAAc5L,UAAU,0BAAnC,sBAGA,qBAAKM,MAAM,YAAX,SACI,uBAAON,UAAU,wCACb7B,GAAG,cACHmD,MAAOT,KAAKJ,MAAMmJ,QAAQD,SAC1BzI,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAMsL,eAAX,2BAA+B,EAAKtL,MAAMmJ,SAA1C,IAAmDD,SAAUxI,EAAME,OAAOC,UAC/F8B,YAAY,YAEpB,uBAAOpD,UAAU,aAGba,KAAKJ,MAAM+K,iBAAmB,mBAAGlL,MAAM,iCAAT,+BAItC,sBAAKN,UAAU,iBAAf,UACI,uBAAO4L,IAAI,cAAc5L,UAAU,0BAAnC,uBAEA,qBAAKA,UAAU,YAAf,SACI,uBAAOT,KAAK,WACRS,UAAU,eACV7B,GAAG,cACHmD,MAAOT,KAAKJ,MAAMmJ,QAAQyB,SAC1BnK,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAMgK,cAAX,2BAA8B,EAAKhK,MAAMmJ,SAAzC,IAAkDyB,SAAUlK,EAAME,OAAOC,UAC9F8B,YAAY,mBAIxB,sBAAKpD,UAAU,iBAAf,UACI,uBAAO4L,IAAI,oBACP5L,UAAU,0BADd,8BAGA,qBAAKA,UAAU,YAAf,SACI,uBAAOT,KAAK,WACRS,UAAU,eACV7B,GAAG,oBACHiF,YAAY,YACZ9B,MAAOT,KAAKJ,MAAM8K,eAClBrK,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAMuL,qBAAqB7K,EAAME,OAAOC,YAE1E,uBAAOtB,UAAU,aAGba,KAAKJ,MAAM8K,iBAAmB1K,KAAKJ,MAAMmJ,QAAQyB,UAC9C,mBAAG/K,MAAM,iCAAT,uCAGX,sBAAKN,UAAU,iBAAf,UACI,uBAAO4L,IAAI,eACP5L,UAAU,0BADd,kBAEA,qBAAKA,UAAU,YAAf,SACI,yBACI7B,GAAG,eACHmC,MAAM,cACN+C,aAAW,yBACXnC,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAMgK,cAAX,2BAA8B,EAAKhK,MAAMmJ,SAAzC,IAAkDe,SAAUxJ,EAAME,OAAOC,UAJlG,UAKI,wBAAQA,MAAM,UAAd,qBACA,wBAAQ2K,UAAQ,EAAC3K,MAAM,WAAvB,8BAIZ,sBAAKtB,UAAU,iBAAf,UACI,uBAAOA,UAAU,4BACjB,sBAAKA,UAAU,YAAf,YAOUa,KAAKJ,MAAM+K,iBACuB,KAAhC3K,KAAKJ,MAAMmJ,QAAQD,UACa,KAAhC9I,KAAKJ,MAAMmJ,QAAQyB,UACnBxK,KAAKJ,MAAMmJ,QAAQyB,WAAaxK,KAAKJ,MAAM8K,iBAC/C,wBAAQhM,KAAK,SACTS,UAAU,sCACVI,QAAS,kBAAM,EAAKK,MAAMyL,YAAX,eAA4B,EAAKzL,MAAMmJ,SAAW,EAAKnJ,MAAMmK,UAFhF,sBAQC/J,KAAKJ,MAAM+K,iBACwB,KAAhC3K,KAAKJ,MAAMmJ,QAAQD,UACa,KAAhC9I,KAAKJ,MAAMmJ,QAAQyB,UACnBxK,KAAKJ,MAAMmJ,QAAQyB,WAAaxK,KAAKJ,MAAM8K,iBAC3C,wBACAhM,KAAK,SACLS,UAAU,sCACVmM,SAAO,EAHP,mCAaR,qBAAKnM,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,SAAT,oC,GAlHTY,IAAMC,WA0IdrC,gBAde,SAACC,GAAD,MAAY,CACtCmK,QAASnK,EAAMG,YAAYgK,QAC3B2B,eAAgB9L,EAAMG,YAAY2L,eAClCC,gBAAiB/L,EAAMG,YAAY4L,oBAGN,SAAClM,GAAD,MAAe,CAC5CmL,cAAe,SAACb,GAAD,OAAaa,GAAcnL,EAAUsK,IACpDmC,eAAgB,SAACnC,GAAD,OPnEU,SAACtK,EAAUsK,GAEvC,MAAwB,IAApBA,EAAQD,SACHrK,EAAS,CACdC,KAAM4K,GACNP,UACA4B,iBAAiB,IAIZhB,GAAsBZ,EAAQD,UAAU5L,MAAK,SAAAgE,GAAM,OACxDzC,EAAS,CACPC,KAAM4K,GACNP,UACA4B,gBAAiBzJ,OOqDQgK,CAAezM,EAAUsK,IACtDoC,qBAAsB,SAACT,GAAD,OPzCU,SAACjM,EAAUiM,GAE7CjM,EAAS,CACPC,KAAM2K,GACNqB,mBOqC0CS,CAAqB1M,EAAUiM,IACzEa,WAAY,SAACvM,GAAD,OPlCU,SAACP,EAAUsK,GAEnC,OAAOY,GAAoBZ,GACxB7L,MAAK,SAAAgE,GAAM,OACVzC,EAAS,CACPC,KAAM6K,GACNR,QAAS7H,OO4BSqK,CAAW9M,EAAUO,IAC3CqM,YAAa,SAACtC,EAASgB,GAAV,OPzBU,SAACtL,EAAUsK,EAASgB,GAE7C,OAAOJ,GAAoBZ,GACxB7L,MAAK,SAAAgE,GACJzC,EAAS,CACPC,KAAM6K,GACNR,QAAS7H,IAEX6I,EAAQC,KAAK,eOiBoBqB,CAAY5M,EAAUsK,EAASgB,OAGvDpL,CAEVsM,IChJCO,G,kDACF,WAAY5L,GAAQ,uCACVA,G,gEAGW,IAAD,OAEhBI,KAAKJ,MAAM8J,UAAUxM,MAAK,WAEK,KAAvB,EAAK0C,MAAMZ,KAAK1B,IAChB,EAAKsC,MAAMmK,QAAQC,KAAK,e,+BAQ1B,IAAD,OACL,OACI,sBAAK7K,UAAU,YAAf,UACI,oBAAIA,UAAU,iBAAd,0BAEI,sBAAKA,UAAU,iBAAf,UACI,uBAAOsM,QAAQ,WAAWtM,UAAU,0BAApC,sBAGA,qBAAKA,UAAU,YAAf,SACI,uBAAOA,UAAU,eACb7B,GAAG,WACHmD,MAAOT,KAAKJ,MAAM6K,SAAS3B,SAC3BzI,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAM8L,SAAX,2BAAyB,EAAK9L,MAAM6K,UAApC,IAA8C3B,SAAUxI,EAAME,OAAOC,iBAItG,sBAAKtB,UAAU,iBAAf,UACI,uBAAOsM,QAAQ,WAAWtM,UAAU,0BAApC,uBAEA,qBAAKA,UAAU,WAAf,SACI,uBAAOT,KAAK,WACRS,UAAU,wCACV7B,GAAG,WACHiF,YAAY,YACZ9B,MAAOT,KAAKJ,MAAM6K,SAASD,SAC3BnK,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAM8L,SAAX,2BAAyB,EAAK9L,MAAM6K,UAApC,IAA8CD,SAAUlK,EAAME,OAAOC,cAElG,qBAAKtB,UAAU,SAAf,SACI,wBAAQA,UAAU,4BACdI,QAAS,kBAAM,EAAKK,MAAM+L,WAAW,EAAK/L,MAAM6K,WADpD,gC,GA/CF1J,IAAMC,WAuEjBrC,gBAZe,SAACC,GAAD,MAAY,CACtC6L,SAAU7L,EAAMG,YAAY0L,SAC5BzL,KAAMJ,EAAMG,YAAYC,SAGK,SAACP,GAAD,MAAe,CAC5CkN,WAAY,SAAC5C,GAAD,OR1CU,SAACtK,EAAUsK,GAEnC,OAAOY,GAAuBZ,EAAQzL,GAAIyL,GAAS7L,MAAK,SAAAgE,GAEtD,OAAOzC,EAAS,CACdC,KAAMwK,GACNuB,SAAUvJ,OQoCayK,CAAWlN,EAAUsK,IAC9C2C,SAAU,SAAC3C,GAAD,ORnDU,SAACtK,EAAUgM,GAEjC,OAAOhM,EAAS,CACdC,KAAMuK,GACNwB,SAAUA,IQ+CaiB,CAASjN,EAAUsK,IAC1CW,QAAS,kBAAMA,GAAQjL,OAIZE,CAEV6M,IChFCxO,I,cAAM,6BACN4O,GAAe,uCA+CN,GA7Cc,SAACC,GAAD,OACzB5O,MAAM,GAAD,OAAI2O,GAAJ,YAAoBC,IACpB3O,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA2CpB,GAxC0B,SAACU,GAEtC,OAAOb,MAAM,GAAD,OAAID,GAAJ,sBAAqBc,EAArB,eAA8C,CACtDP,OAAQ,QAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAmCpB,GAhCgB,SAACyO,GAE5B,OAAO5O,MAAM,GAAD,OAAI2O,GAAJ,YAAoBC,GAAe,CAC3CtO,OAAQ,WAEPL,MAAK,SAAAC,GAAQ,OAAI0B,QAAQC,IAAI3B,OA2BvB,GAxBgB,SAACW,EAAYgO,GAExC,OAAO7O,MAAM,GAAD,OAAID,GAAJ,sBAAqBc,EAArB,eAA8C,CACtDP,OAAQ,OACRG,KAAMC,KAAKC,UAAUkO,GACrBjO,QAAS,CACL,eAAgB,sBAGnBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAepB,GAXgB,SAACyO,EAAaC,GAAd,OAC3B7O,MAAM,GAAD,OAAI2O,GAAJ,YAAoBC,GAAe,CACpCtO,OAAQ,MACRG,KAAMC,KAAKC,UAAUkO,GACrBjO,QAAS,CACL,eAAgB,sBAGnBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC/C7BJ,I,OAAM,oEACN+O,GAAU,mEAwCD,GAtCS,SAAC7H,GAAD,OACpBjH,MAAM,GAAD,OAAI8O,GAAJ,YAAe7H,IAAUhH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAqC7C,GAlCsB,SAACyO,GAAD,OACjC5O,MAAM,GAAD,OAAID,GAAJ,YAAW6O,EAAX,UAAgC,CACjCtO,OAAQ,QAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA8BpB,GA5BW,SAAC8G,GAAD,OACtBjH,MAAM,GAAD,OAAI8O,GAAJ,YAAe7H,GAAU,CAC1B3G,OAAQ,WAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAwBpB,GAtBW,SAACyO,EAAaG,GAAd,OAEtB/O,MAAM,GAAD,OAAID,GAAJ,YAAW6O,EAAX,UAAgC,CACjCtO,OAAQ,OACRG,KAAMC,KAAKC,UAAUoO,GACrBnO,QAAS,CACL,eAAgB,sBAGnBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAapB,GAXW,SAAC8G,EAAQ8H,GAAT,OACtB/O,MAAM,GAAD,OAAI8O,GAAJ,YAAe7H,GAAU,CAC1B3G,OAAQ,MACRG,KAAMC,KAAKC,UAAUoO,GACrBnO,QAAS,CACL,eAAgB,sBAGnBX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCpCtB6O,GAAc,cACdC,GAAc,cACdC,GAAc,cACdC,GAA4B,4BAC5BC,GAAY,YCuDV1N,gBAZe,SAACC,GAAD,MAAY,CACtC0N,MAAO1N,EAAM2N,YAAYD,MACzBT,YAAajN,EAAM2N,YAAYV,YAC/BxO,SAAUuB,EAAMM,gBAAgB7B,aAGH,SAACoB,GAAD,MAAe,CAC5C+N,WAAY,SAACR,GAAD,OD9CU,SAACvN,EAAUuN,GAAX,OACtBS,GAAuBT,EAAKxK,KACvBtE,MAAK,SAAAgE,GAAM,OACRzC,EAAS,CACLC,KAAMuN,GACND,YCyCUQ,CAAW/N,EAAUuN,IAC3CU,WAAY,SAACb,EAAaG,GAAd,ODvCU,SAACvN,EAAUoN,EAAaG,GAG1CS,GAAuBZ,EAAaG,GACnC9O,MAAK,SAAAyP,GAAU,OACZlO,EAAS,CACLC,KAAMwN,GACNF,KAAMW,OCgCiBD,CAAWjO,EAAUoN,EAAaG,IACrEY,WAAY,SAACZ,GAAD,OD7BU,SAACvN,EAAUuN,GAAX,OACtBS,GAAuBT,EAAKxK,IAAKwK,GAC5B9O,MAAK,SAAAgE,GAAM,OACRzC,EAAS,CACLC,KAAMyN,GACNH,YCwBUY,CAAWnO,EAAUuN,OAGhCrN,EAnDD,SAAC,GAAD,QAAG2N,aAAH,MAAW,GAAX,EAAeT,EAAf,EAAeA,YAAaxO,EAA5B,EAA4BA,SAAUmP,EAAtC,EAAsCA,WAAYE,EAAlD,EAAkDA,WAAYE,EAA9D,EAA8DA,WAA9D,OAEd,sBAAKzN,UAAU,kBAAf,UACA,uCACA,oBAAIA,UAAU,eAAd,SAEQmN,EAAM5M,KAAI,SAAAsM,GAAI,OACV,qBAAI7M,UAAU,WAAd,UACI,wBAAQT,KAAK,SAASS,UAAU,iCAAiCI,QAAS,kBAAMiN,EAAWR,IAA3F,SACI,mBAAG7M,UAAU,kBAEhB6M,EAAKnM,SACF,iCACI,wBAAQnB,KAAK,SAASS,UAAU,mCAAmCI,QAAS,kBACxEqN,EAAW,2BAAKZ,GAAN,IAAYnM,SAAS,MADnC,gBAKA,uBACAV,UAAU,eACNkB,SAAU,SAACC,GAAD,OACNsM,EAAW,2BAAKZ,GAAN,IAAY1K,MAAOhB,EAAME,OAAOC,UAC9CA,MAAOuL,EAAK1K,YAGnB0K,EAAKnM,SACN,kCACI,wBAAQnB,KAAK,SAASS,UAAU,iCAAiCI,QAAS,kBAAMqN,EAAW,2BAAKZ,GAAN,IAAYnM,SAAS,MAA/G,SACI,mBAAGV,UAAU,iBAEjB,cAAC,IAAD,CAAMA,UAAU,OAAOgB,GAAE,gBAAW9C,EAASmE,IAApB,uBAAsCqK,EAAtC,kBAA2DG,EAAKxK,IAAhE,0BAAzB,SAAuHwK,EAAK1K,aAvB1G0K,EAAKxK,UA4B/C,wBAAQ9C,KAAK,SAASS,UAAU,mCAAmCI,QAAS,kBACxEmN,EAAWb,EAAa,CAAEvK,MAAO,cADrC,+BC3CauL,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAgC,gCAChCC,GAAkB,kBC+DhBtO,I,OAAAA,aAXe,SAACC,GAAD,MAAY,CACxCsO,WAAYtO,EAAMuO,iBAAiBD,WACnC7P,SAAUuB,EAAMM,gBAAgB7B,aAGD,SAACoB,GAAD,MAAe,CAC9C2O,gBAAiB,SAACtB,GAAD,ODhDY,SAACrN,EAAUqN,GAAX,OAC3BuB,GAAiCvB,EAAUxO,IACtCJ,MAAK,SAAAgE,GAAM,OACRzC,EAAS,CACLC,KAAMmO,GACNf,iBC2CkBsB,CAAgB3O,EAAUqN,IAC1DwB,gBAAiB,SAACjQ,EAAUyO,GAAX,ODzCY,SAACrN,EAAUpB,EAAUyO,GAArB,OAC3BuB,GAAiChQ,EAASC,GAAIwO,GACzC5O,MAAK,SAAAqQ,GAAe,OACjB9O,EAAS,CACLC,KAAMoO,GACNhB,UAAWyB,OCoCiBD,CAAgB7O,EAAUpB,EAAUyO,IAC9E0B,gBAAiB,SAAC1B,GAAD,ODlCY,SAACrN,EAAUqN,GAAX,OAC3BuB,GAAiCvB,EAAUxO,GAAIwO,GAC1C5O,MAAK,SAAAgE,GAAM,OACRzC,EAAS,CACLC,KAAMqO,GACNjB,iBC6BkB0B,CAAgB/O,EAAUqN,OAG7CnN,EA3DI,SAAC,GAAD,IACftB,EADe,EACfA,SADe,IACL6P,kBADK,MACQ,GADR,EAEjBE,EAFiB,EAEjBA,gBAAiBE,EAFA,EAEAA,gBAAiBE,EAFjB,EAEiBA,gBAFjB,OAGjB,gCACA,oBAAIrO,UAAU,qBAAd,yBACA,sBAAKA,UAAU,UAAf,UACA,oBAAIA,UAAU,aAAd,SAEQ+N,EAAWxN,KAAI,SAAAoM,GAAS,OACpB,qBAAI3M,UAAU,kBAAd,UACI,wBAAQT,KAAK,SAASS,UAAU,gCAAgCI,QAAS,kBAAM6N,EAAgBtB,IAA/F,SACI,mBAAG3M,UAAU,kBAEhB2M,EAAUjM,SACP,iCACI,wBAAQnB,KAAK,SAASS,UAAU,mCAAmCI,QAAS,kBACxEiO,EAAgB,2BAAK1B,GAAN,IAAiBjM,SAAS,MAD7C,gBAKA,uBACAV,UAAU,eACNkB,SAAU,SAACC,GAAD,OACNkN,EAAgB,2BAAK1B,GAAN,IAAiBxK,MAAOhB,EAAME,OAAOC,UACxDA,MAAOqL,EAAU1L,WAIxB0L,EAAUjM,SACX,kCACI,wBAAQnB,KAAK,SAASS,UAAU,iCAAiCI,QAAS,kBAAMiO,EAAgB,2BAAK1B,GAAN,IAAiBjM,SAAS,MAAzH,SACA,mBAAGV,UAAU,iBAEb,cAAC,IAAD,CAAMA,UAAU,OAAOgB,GAAE,gBAAW9C,EAASC,GAApB,uBAAqCwO,EAAUxO,IAAxE,SAA+EwO,EAAU1L,YAxBhE0L,EAAUtK,UAgC3D,wBAAQ9C,KAAK,SAASS,UAAU,0CAA0CI,QAAS,kBAAM+N,EAAgBjQ,EAAU,CAAE+C,KAAM,oBAA3H,yCCaazB,I,OAAAA,aAde,SAACC,GAAD,MAAY,CACxC6O,OAAQ7O,EAAM8O,6BAA6BD,OAC3CE,SAAU/O,EAAM8O,6BAA6BC,SAC7C9B,YAAajN,EAAM2N,YAAYV,YAC/BxO,SAAUuB,EAAMM,gBAAgB7B,SAChCkG,QAAS3E,EAAM8O,6BAA6BnK,QAC5CyB,YAAapG,EAAM8O,6BAA6B1I,gBAGjB,SAACvG,GAAD,MAAe,CAC9CmP,iBAAkB,SAAClJ,GAAD,OnC9CY,SAACjG,EAAUiG,GACvC,OAAOjG,EAAS,CACZC,KAAMoF,GACNY,iBmC2C8BkJ,CAAiBnP,EAAUiG,IAC/DmJ,aAAc,SAACjL,GAAD,OnCtDY,SAACnE,EAAUmE,GACnC,OAAOnE,EAAS,CACZC,KAAMmF,GACNjB,amCmDsBiL,CAAapP,EAAUmE,OAGtCjE,EArDe,SAAC,GAAD,EAC1BtB,SAD0B,EAChBwO,YADgB,EACH8B,SADG,IACOpK,EADP,EACOA,QAASyB,EADhB,EACgBA,YAAa4I,EAD7B,EAC6BA,iBAAkBC,EAD/C,EAC+CA,aAD/C,OAE1B,sBAAK1O,UAAU,0BAAf,UACE,sBAAKA,UAAU,QAAf,UACA,yCACA,6BAEEoE,EAAQ7D,KAAI,SAAA0D,GAAM,OAAI,+BAAqBA,EAAO9B,MAClD,wBAAQnC,UAAU,gCAAgCI,QAAS,kBAAMsO,EAAazK,EAAO9F,KAArF,SACA,mBAAG6B,UAAU,qBAFkBiE,EAAO9F,SAOxC,cAAC,IAAD,CAAM6C,GAAG,uCAAT,SACA,wBAAQhB,UAAU,4BAAlB,iCAKA,sBAAKA,UAAU,QAAf,UACA,6CACA,6BAEE6F,EAAYtF,KAAI,SAAAqF,GAAU,OAAI,+BAAyBA,EAAWzD,MAC1D,wBAAQnC,UAAU,gCAAgCI,QAAS,kBAAMqO,EAAiB7I,EAAWzH,KAA7F,SACR,mBAAG6B,UAAU,qBAF0B4F,EAAWzH,SAOpD,cAAC,IAAD,CAAM6C,GAAG,2CAAT,SACA,wBAAQhB,UAAU,4BAAlB,4CCzBA2O,G,kLAEEjP,QAAQC,IAAIkB,KAAKJ,OACjB,IAAM9B,EAAakC,KAAKJ,MAAM4E,MAAMC,OAAO3G,WAErC+N,EAAc7L,KAAKJ,MAAM4E,MAAMC,OAAOoH,YACtC3H,EAASlE,KAAKJ,MAAM4E,MAAMC,OAAOP,OACvBlE,KAAKJ,MAAM4E,MAAMC,OAAOsJ,QACxC/N,KAAKJ,MAAMoO,iBAAiBlQ,GAC5BkC,KAAKJ,MAAMqO,0BAA0BnQ,GACjC+N,IACA7L,KAAKJ,MAAMsO,cAAcrC,GACzB7L,KAAKJ,MAAMuO,sBAAsBtC,IAEjC3H,GACAlE,KAAKJ,MAAMwO,SAASlK,K,yCAQTmC,EAAWnE,EAAWmM,GACrC,IAAMxC,EAAc7L,KAAKJ,MAAM4E,MAAMC,OAAOoH,YAExCA,IADwBxF,EAAU7B,MAAMC,OAAOoH,aAE/C7L,KAAKJ,MAAMuO,sBAAsBtC,GAEtB7L,KAAKJ,MAAM4E,MAAMC,OAAOP,OAChBmC,EAAU7B,MAAMC,OAAOP,S,+BAa9C,OACI,sBAAK/E,UAAU,QAAf,UACI,6BACA,mBAAGA,UAAU,gBAAgBqJ,KAAK,IAAlC,gCAEA,sBAAKrJ,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACA,cAAC,GAAD,MAEA,sBAAKA,UAAU,QAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,iB,GAtDK4B,IAAMC,WA4EpBrC,gBAde,SAACC,GAAD,MAAY,MAIT,SAACH,GAAD,MAAe,CAC5CwP,0BAA2B,SAACnQ,GAAD,OH7CU,SAACW,EAAUX,GAAX,OACrCuP,GAA2CvP,GACtCZ,MAAK,SAAAgQ,GAAU,OAAIzO,EAAS,CACzBC,KAAMsO,GACNE,kBGyCmCe,CAA0BxP,EAAUX,IAC/EkQ,iBAAkB,SAAClQ,GAAD,O7CpEU,SAACW,EAAUX,GAAX,OAC5BmD,EAAiCnD,GAC5BZ,MAAK,SAAAG,GAAQ,OAAIoB,EAAS,CACvBC,KAAMV,EACNX,gB6CgE0B2Q,CAAiBvP,EAAUX,IAC7DoQ,cAAe,SAACrC,GAAD,OH/EU,SAACpN,EAAUoN,GAAX,OACzBwB,GAA+BxB,GAC1B3O,MAAK,SAAA4O,GAAS,OACXrN,EAAS,CACLC,KAAMuO,GACNpB,mBG0EoBqC,CAAczP,EAAUoN,IACxDsC,sBAAuB,SAACtC,GAAD,OLnDU,SAACpN,EAAUoN,GAE5CY,GAAkCZ,GAC7B3O,MAAK,SAAAoP,GAAK,OAAI7N,EAAS,CACpBC,KAAM0N,GACNE,QACAT,mBK6CgCsC,CAAsB1P,EAAUoN,IACxEuC,SAAU,SAAClK,GAAD,OL1CU,SAACzF,EAAUyF,GAAX,OACpBuI,GAAqBvI,GAChBhH,MAAK,SAAA8O,GAAI,OAAIvN,EAAS,CACnBC,KAAM2N,GACNnI,cKsCckK,CAAS3P,EAAUyF,OAK9BvF,CAEVmP,ICjFCjM,G,kLAIE7B,KAAKJ,MAAM8J,UACX1J,KAAKJ,MAAM0O,uBAAuBtO,KAAKJ,MAAMpC,a,+BAIvC,IAAD,OACL,OACI,gCAEI,sBAAKiC,MAAM,gDAAX,UACI,oBAAGA,MAAM,gBAAT,cAA0B,mBAAGA,MAAM,aAAaD,cAAY,SAA5D,yBACA,sBAAKC,MAAM,mBAAX,UACI,uBAAOf,KAAK,OAAO+B,MAAOT,KAAKJ,MAAM0B,MAAOjB,SAAU,SAACC,GAAD,OAAW,EAAKV,MAAM0C,WAAWhC,EAAME,OAAOC,QAAQhB,MAAM,eAAe8C,YAAY,sBAAsBC,aAAW,uBAAuBC,mBAAiB,iBACtN,qBAAKhD,MAAM,qBAAX,SACI,wBAAQA,MAAM,0BAA0BF,QAAS,kBAAM,EAAKK,MAAMmC,eAAe,EAAKnC,MAAMpC,UAAW,CACnG4C,KAAM,EAAKR,MAAM0B,MACjBZ,KAAM,QACNC,KAAM,IAAIqH,QACVtJ,KAAK,SAJT,SAIkB,mBAAGS,UAAU,oBAC3BK,cAAY,mBAI5B,cAAC,EAAD,W,GA3BcuB,IAAMC,WAoErBrC,gBApBe,SAACC,GAG3B,OAFAC,QAAQC,IAAIF,GAEJ,CACJpB,UAAWoB,EAAMG,YAAYC,KAAK1B,GAClC2B,UAAWL,EAAMM,gBAAgBD,UACjCqC,MAAO1C,EAAMM,gBAAgBoC,UAIJ,SAAC7C,GAE9B,MAAQ,CACJiL,QAAS,kBAAMA,GAAQjL,IACvB6P,uBAAwB,SAAC9Q,GAAD,O9CpDM,SAACiB,EAAUjB,GAE7C,OAAOyD,EAAuCzD,GAC7CN,MAAK,SAAA+B,GAAS,OAAIR,EAAS,CACxBC,KAAMT,EACNgB,iB8C+CuCqP,CAAuB7P,EAAUjB,IACxEuE,eAAgB,SAACvE,EAAWC,GAAZ,O9C7BM,SAACgB,EAAUjB,EAAWC,GAAtB,OAC1BwD,EAA+BzD,EAAWC,GACrCP,MAAK,SAAAgE,GAAM,OAAIzC,EAAS,CACrBC,KAAMP,EACNX,YACAC,mB8CwBwCsE,CAAetD,EAAUjB,EAAWC,IAChF6E,WAAY,SAACnB,GAAD,O9ChBM,SAAC1C,EAAU0C,GACjC,OAAO1C,EAAS,CACZC,KAAMJ,EACN6C,a8Ca0BmB,CAAW7D,EAAU0C,OAIxCxC,CAEVkD,IC5EC4D,GAAe,CACjByH,WAAY,GACZrB,YAAY,IAqCDsB,GAjCU,WAAiC,IAAhCvO,EAA+B,uDAAzB6G,GAAcE,EAAW,uCACrD,OAAQA,EAAOjH,MACX,KAAKoO,GACD,OAAO,2BACAlO,GADP,IAEIsO,WAAW,GAAD,mBAAMtO,EAAMsO,YAAZ,CAAwBvH,EAAOmG,cAEjD,KAAKkB,GACD,OAAO,2BACApO,GADP,IAEIsO,WAAYvH,EAAOuH,aAE3B,KAAKD,GACD,OAAO,2BACArO,GADP,IAEIiN,YAAalG,EAAOmG,YAE5B,KAAKiB,GACD,OAAO,2BACAnO,GADP,IAEIsO,WAAYtO,EAAMsO,WAAWxN,KAAI,SAAAoM,GAAS,OAC1CA,EAAUtK,MAAQmE,EAAOmG,UAAUtK,IAAMmE,EAAOmG,UAAYA,OAEpE,KAAKe,GACD,OAAO,2BACAjO,GADP,IAEIsO,WAAYtO,EAAMsO,WAAW/K,QAAO,SAAA2J,GAAS,OAAIA,EAAUxO,KAAOqI,EAAOmG,UAAUxO,QAE3F,QACI,OAAOsB,IChCb6G,GAAe,CACjBxG,UAAW,GACX5B,SAAU,GACViE,MAAO,GACPQ,SAAS,GA+DE5C,GA5DS,WAAmC,IAAlCN,EAAiC,uDAAzB6G,GAAcE,EAAW,uCACtD,OAAQA,EAAOjH,MACX,KAAKX,EACD,OAAO,2BACAa,GADP,IAEIK,UAAW0G,EAAO1G,YAE1B,KAAKd,EACD,OAAO,2BACAS,GADP,IAEIK,UAAU,GAAD,mBAAML,EAAMK,WAAZ,CAAuB0G,EAAOlI,cACvC6D,MAAO,KAEf,KAAKrD,EACD,OAAO,2BACAW,GADP,IAEIK,UAAW0G,EAAO1G,YAE1B,KAAKjB,EACD,OAAO,2BACAY,GADP,IAEIvB,SAAUsI,EAAOtI,WAEzB,KAAKe,EACD,OAAO,2BACAQ,GADP,IAEIK,UAAWL,EAAMK,UAAUS,KAAI,SAAArC,GAAQ,OACnCA,EAASmE,MAAQmE,EAAO7H,WAAa6H,EAAOtI,SAAWA,OAEnE,KAAKa,EACD,OAAO,2BACAU,GADP,IAEIK,UAAWL,EAAMK,UAAUkD,QAAO,SAAA9E,GAAQ,OAAIA,EAASmE,MAAQmE,EAAO7H,gBAE9E,KAAKO,EACD,OAAO,2BACAO,GADP,IAEIkD,SAAUlD,EAAMkD,UAExB,KAAKxD,EACD,OAAO,2BACAM,GADP,IAEI0C,MAAOqE,EAAOxE,WAEtB,KAAK5C,EACD,IAAM8D,EAAY,eACXzD,EAAMK,WAGb,OADAoD,EAAasD,EAAOvE,QAAUuE,EAAOtI,SAC9B,2BACAuB,GADP,IAEIK,UAAWoD,IAGnB,QACI,OAAOzD,ICjEb6G,GAAe,CACjB6G,MAAO,GACPpI,OAAQ,IAqCGqI,GAjCK,WAAiC,IAAhC3N,EAA+B,uDAAzB6G,GAAcE,EAAW,uCAChD,OAAQA,EAAOjH,MACX,KAAKwN,GACD,OAAO,2BACAtN,GADP,IAEI0N,MAAM,GAAD,mBAAM1N,EAAM0N,OAAZ,CAAmB3G,EAAOqG,SAEvC,KAAKI,GACD,OAAO,2BACAxN,GADP,IAEI0N,MAAO3G,EAAO2G,MACdT,YAAalG,EAAOkG,cAE5B,KAAKQ,GACD,OAAO,2BACAzN,GADP,IAEIsF,OAAQyB,EAAOzB,SAEvB,KAAKiI,GACD,OAAO,2BACAvN,GADP,IAEI0N,MAAO1N,EAAM0N,MAAM5M,KAAI,SAAAsM,GAAI,OAAIA,EAAKxK,MAAQmE,EAAOqG,KAAKxK,IAAMmE,EAAOqG,KAAOA,OAEpF,KAAKC,GACD,OAAO,2BACArN,GADP,IAEI0N,MAAO1N,EAAM0N,MAAMnK,QAAO,SAAA6J,GAAI,OAAIA,EAAKxK,MAAQmE,EAAOqG,KAAKxK,SAEnE,QACI,OAAO5C,ICpCb6G,GAAe,CACjBT,YAAa,GACbD,WAAY,CACRO,cAAe,IAEnB7B,QAAS,IA6BEwB,GA1BW,WAAmC,IAAlCrG,EAAiC,uDAAzB6G,GAAcE,EAAW,uCACxD,OAAQA,EAAOjH,MACX,KAAKiG,GAGD,OADA9F,QAAQC,IAAI6G,EAAOX,YAAYY,SACxB,2BACAhH,GADP,IAEIoG,YAAaW,EAAOX,YAAYY,UAExC,KAAK7C,GACD,OAAO,2BACAnE,GADP,IAEI6E,QAASkC,EAAOlC,UAExB,KAAKmB,GAED,OAAO,2BACAhG,GADP,IAEImG,WAAYY,EAAOZ,aAG3B,QACI,OAAOnG,IC5Bb6G,GAAe,CAEjBlC,QAAS,CACL,CAACjG,GAAI,MAAO4G,OAAQ,2BAA4B5C,MAAO,kBACvD,CAAChE,GAAI,MAAO4G,OAAQ,2BAA4B5C,MAAO,iBACvD,CAAChE,GAAI,MAAO4G,OAAQ,2BAA4B5C,MAAO,sBAE3D0D,YAAa,CACT,CAAC1H,GAAI,MAAO4G,OAAQ,2BAA4B5C,MAAO,gBACvD,CAAChE,GAAI,MAAO4G,OAAQ,2BAA4B5C,MAAO,aACvD,CAAChE,GAAI,MAAO4G,OAAQ,2BAA4B5C,MAAO,YAiChDoM,GA5BsB,WAAiC,IAAhC9O,EAA+B,uDAAzB6G,GAAcE,EAAW,uCACjE,OAAQA,EAAOjH,MACX,KAAKoF,GAED,OAAO,2BACAlF,GADP,IAEIoG,YAAapG,EAAMoG,YAAY7C,QAAO,SAAA4C,GAAU,OAAIA,EAAWzH,KAAOqI,EAAOjB,kBAErF,KAAKb,GACD,OAAO,2BACAjF,GADP,IAEI2E,QAAS3E,EAAM2E,QAAQpB,QAAO,SAAAiB,GAAM,OAAIA,EAAO9F,KAAOqI,EAAO/C,cAErE,KAAKmB,GACD,OAAO,2BACAnF,GADP,IAEI2E,QAAQ,GAAD,mBAAM3E,EAAM2E,SAAZ,CAAqBoC,EAAOvC,WAE3C,KAAKY,GACD,OAAO,2BACApF,GADP,IAEIoG,YAAY,GAAD,mBAAMpG,EAAMoG,aAAZ,CAAyBW,EAAOZ,eAEnD,QACI,OAAOnG,ICbJ2P,I,8KA9BP,OACI,gCACI,sBAAKpP,UAAU,MAAf,UACA,qBAAKA,UAAU,UACf,qBAAKA,UAAU,QAAf,SACA,oBAAIA,UAAU,SAAd,yBAGA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,kBAAT,SACI,wBAAQhB,UAAU,2CAAlB,SACA,+CAIR,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,sBAAT,SACA,wBAAQhB,UAAU,+CAAlB,SACI,6D,GAtBP6B,cC+BfwN,GAAcC,YAAgB,CAClCjL,iBAAekE,kBAAgB6C,eAAaxL,eAAaG,mBAAiBqN,eAC1EY,oBAAkBO,gCAA8BzI,uBAG5CyJ,GAAQC,YAAYH,IAE1BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,IAAIC,UAAWlE,KAC3B,cAAC,IAAD,CAAOmE,OAAK,EAACF,KAAK,IAAIC,UAAW3G,KACjC,cAAC,IAAD,CAAO0G,KAAK,WAAWE,OAAK,EAACD,UAAWlF,KACxC,cAAC,IAAD,CAAOiF,KAAK,qBAAqBE,OAAK,EAACD,UAAWE,IAClD,cAAC,IAAD,CAAOH,KAAK,mBAAmBE,OAAK,EAACD,UAAWG,KAChD,cAAC,IAAD,CAAOJ,KAAK,UAAUE,OAAK,EAACD,UAAWR,KACvC,cAAC,IAAD,CAAOO,KAAK,kBAAkBE,OAAK,EAACD,UAAWxK,KAC/C,cAAC,IAAD,CAAOuK,KAAK,sBAAsBE,OAAK,EAACD,UAAWvJ,KACnD,cAAC,IAAD,CAAOsJ,KAAK,qBAAqBE,OAAK,EAACD,UAAW3I,KAClD,cAAC,IAAD,CAAO0I,KAAK,6BAA6BE,OAAK,EAACD,UAAWtI,KAC1D,cAAC,IAAD,CAAOqI,KAAK,SAASE,OAAK,EAACD,UAAWjE,KACtC,cAAC,IAAD,CAAOgE,KAAK,YAAYE,OAAK,EAACD,UAAW9D,KACzC,cAAC,IAAD,CAAO6D,KAAK,eAAeE,OAAK,EAACD,UAAWvD,KAC5C,cAAC,IAAD,CAAOsD,KAAK,aAAaE,OAAK,EAACD,UAAWlN,KAC1C,cAAC,IAAD,CAAOiN,KAAM,CAAC,oBACd,4CACA,0DACA,iFACEE,OAAK,EACLD,UAAWjB,KACb,cAAC,IAAD,CAAOgB,KAAK,mGACZE,OAAK,EAACD,UAAWvJ,KACjB,cAAC,IAAD,CAAOsJ,KAAK,+FACZE,OAAK,EAACD,UAAWxK,UAIrB4K,SAASC,eAAe,U","file":"static/js/main.8b6ea3dc.chunk.js","sourcesContent":["// const url2 = 'https://wbdv-generic-server.herokuapp.com/api/jannunzi/courses'\r\n// const url = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/courses2'\r\nconst url = 'http://localhost:8080/api'\r\n\r\nexport const findAllMealPlans = () =>\r\n    fetch(`${url}/mealplans`)\r\n        .then(response => response.json())\r\n\r\nexport const findMealPlanById = (mealPlanId) =>\r\n    fetch(`${url}/mealplans/${mealPlanId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findMealPlansByCreator = (creatorId) => {\r\n    debugger\r\n    return fetch(`${url}/creator/${creatorId}/mealplans`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const deleteMealPlan = (mealPlan) =>\r\n    fetch(`${url}/mealplans/${mealPlan.id}`, { \r\n        method: \"DELETE\" \r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const createMealPlan = (creatorId, newMealPlan) => {\r\n    debugger\r\n    return fetch(`${url}/creator/${creatorId}/mealplan`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newMealPlan),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\n\r\nexport const updateMealPlan = (mealPlanId, mealPlan) =>\r\n    fetch(`${url}/mealplans/${mealPlanId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(mealPlan),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\n\r\nexport default {\r\n    findAllMealPlans,\r\n    deleteMealPlan,\r\n    createMealPlan,\r\n    updateMealPlan,\r\n    findMealPlanById,\r\n    findMealPlansByCreator\r\n}\r\n","import MealPlanService from \"../services/MealPlanService\"\r\nexport const FIND_ALL_MEAL_PLANS = \"FIND_ALL_MEAL_PLANS\";\r\nexport const FIND_MEAL_PLAN_BY_ID = \"FIND_MEAL_PLAN_BY_ID\";\r\nexport const FIND_MEAL_PLANS_BY_CREATOR = \"FIND_MEAL_PLANS_BY_CREATOR\";\r\nexport const DELETE_MEAL_PLAN = \"DELETE_MEAL_PLAN\";\r\nexport const CREATE_MEAL_PLAN = \"CREATE_MEAL_PLAN\";\r\nexport const UPDATE_MEAL_PLAN = \"UPDATE_MEAL_PLAN\";\r\nexport const CHANGE_DISPLAY = \"CHANGE_DISPLAY\";\r\nexport const ENTER_TITLE = \"ENTER_TITLE\";\r\nexport const UPDATE_TITLE = \"UPDATE_TITLE\";\r\n\r\nexport const findAllMealPlans = (dispatch) =>\r\n    MealPlanService.findAllMealPlans()\r\n        .then(mealPlans => dispatch({\r\n            type: FIND_ALL_MEAL_PLANS,\r\n            mealPlans\r\n        }))\r\n\r\nexport const findMealPlanById = (dispatch, mealPlanId) =>\r\n    MealPlanService.findMealPlanById(mealPlanId)\r\n        .then(mealPlan => dispatch({\r\n            type: FIND_MEAL_PLAN_BY_ID,\r\n            mealPlan\r\n        }))\r\n\r\nexport const findMealPlansByCreator = (dispatch, creatorId) => {\r\n    debugger\r\n    return MealPlanService.findMealPlansByCreator(creatorId)\r\n    .then(mealPlans => dispatch({\r\n        type: FIND_MEAL_PLANS_BY_CREATOR,\r\n        mealPlans\r\n    }))\r\n}\r\n\r\n\r\nexport const deleteMealPlan = (dispatch, mealPlan) =>\r\n    MealPlanService.deleteMealPlan(mealPlan.id)\r\n        .then(status => dispatch({\r\n            type: DELETE_MEAL_PLAN,\r\n            mealPlan\r\n        }))\r\n\r\nexport const updateMealPlan = (dispatch, mealPlanId, mealPlan) =>\r\n    MealPlanService.updateMealPlan(mealPlanId, mealPlan)\r\n        .then(status => dispatch({\r\n            type: DELETE_MEAL_PLAN,\r\n            mealPlan\r\n        }))\r\n\r\nexport const createMealPlan = (dispatch, creatorId, newMealPlan) =>\r\n    MealPlanService.createMealPlan(creatorId, newMealPlan)\r\n        .then(status => dispatch({\r\n            type: CREATE_MEAL_PLAN,\r\n            creatorId,\r\n            newMealPlan\r\n        }))\r\n\r\nexport const changeDisplay = (dispatch) => {\r\n    return dispatch({\r\n        type: CHANGE_DISPLAY\r\n    })\r\n}\r\n\r\nexport const enterTitle = (dispatch, newTitle) => {\r\n    return dispatch({\r\n        type: ENTER_TITLE,\r\n        newTitle\r\n    })\r\n}\r\n\r\nexport const updateTitle = (dispatch, mealPlan, number) => {\r\n    return dispatch({\r\n        type: UPDATE_TITLE,\r\n        mealPlan, \r\n        number\r\n    })\r\n}\r\n","import React from \"react\";\r\nimport MealPlanRow from \"./MealPlanRow\";\r\nimport mealPlanService from \"../services/MealPlanService\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport {\r\n    deleteMealPlan,\r\n    updateMealPlan, \r\n    updateTitle, \r\n    changeDisplay\r\n} from \"../actions/mealPlanActions\"\r\nimport { connect } from 'react-redux';\r\n\r\nconst MealPlanTable = ({mealPlans, changeDisplay}) => \r\n            <div className=\"container content\">\r\n                <table id=\"courses\" className=\"table table-hover\" cellspacing=\"0\" width=\"100%\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"45%\">Title</th>\r\n                            <th className=\"priority-3\" scope=\"col\" width=\"15%\">Diet</th>\r\n                            <th className=\"priority-2\" scope=\"col\" width=\"25%\">Time Created</th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\">\r\n                                <div onClick={changeDisplay}>\r\n                                    <i className=\"fa fa-th-large\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\"><i class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i></th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"5%\"></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {\r\n                            mealPlans.map(mealPlan =>\r\n                                <MealPlanRow\r\n                                    key={mealPlan.id}\r\n                                    mealPlan={mealPlan} />\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    console.log(state)\r\n    debugger\r\n    return ({\r\n        creatorId: state.userReducer.user.id,\r\n        mealPlans: state.mealPlanReducer.mealPlans\r\n    })\r\n}\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    changeDisplay: () => changeDisplay(dispatch)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (MealPlanTable)\r\n\r\n","import React from \"react\";\r\nimport mealPlanService from \"../services/MealPlanService\";\r\nimport MealPlanTable from \"./MealPlanTable\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n    deleteMealPlan,\r\n    updateMealPlan, \r\n    updateTitle, \r\n    changeDisplay\r\n} from \"../actions/mealPlanActions\"\r\nimport { connect } from 'react-redux';\r\n\r\nclass MealPlanRow extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        mealPlan: this.props.mealPlan\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr className=\"course-row\" style={{ backgroundColor: this.state.color }} onClick={this.changeColor}>\r\n                <td className=\"priority-1\">\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/edit/${this.state.mealPlan.id}`}>\r\n                            <i class=\"fa fa-file-text\" aria-hidden=\"true\"></i> {this.state.mealPlan.name}\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            onChange={(event) => this.props.updateTitle(event.target.value)}\r\n                            value={this.state.mealPlan.name} />\r\n                    }\r\n                </td>\r\n                <td className=\"priority-3\">{this.props.mealPlan.diet}</td>\r\n                <td className=\"priority-2\">{this.props.mealPlan.time}</td>\r\n                <td className=\"priority-2\"></td>\r\n                {\r\n                    this.state.editing &&\r\n                    <td className=\"priority-1\">\r\n                        <button onClick={() => this.props.updateMealPlan(this.mealPlan)}>\r\n                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </td>\r\n                }\r\n                {\r\n                    !this.state.editing &&\r\n                    <td className=\"priority-1\">\r\n                        <i className=\"fa fa-pencil\" onClick={() => this.setState({ editing: true })} aria-hidden=\"true\"></i>\r\n                    </td>\r\n                }\r\n                {\r\n                    !this.state.editing &&\r\n                    <td className=\"priority-1\">\r\n                        <i class=\"fa fa-trash\" onClick={() => this.props.deleteMealPlan(this.props.mealPlan)} aria-hidden=\"true\"></i>\r\n                    </td>\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    console.log(state)\r\n    debugger\r\n    return ({\r\n        creatorId: state.userReducer.user.id,\r\n        mealPlans: state.mealPlanReducer.mealPlans\r\n    })\r\n}\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteMealPlan: (mealPlan) => deleteMealPlan(dispatch, mealPlan),\r\n    updateMealPlan: (mealPlanId, newMealPlan) => updateMealPlan(dispatch, mealPlanId, newMealPlan),\r\n    updateTitle: (newTitle) => updateTitle(dispatch, newTitle),\r\n    changeDisplay: () => changeDisplay(dispatch)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (MealPlanRow)\r\n\r\n","import React from \"react\";\r\nimport MealPlanService from \"../services/MealPlanService\";\r\nimport MeanPlanTable from \"./MealPlanTable\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport \"../css/MealPlanCard.css\"\r\n\r\n\r\nclass MealPlanCard extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        mealPlan: this.props.mealPlan\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    updateTitle = (event) => {\r\n        const newTitle = event.target.value\r\n        const mealPlan = {\r\n            ...this.state.mealPlan\r\n        }\r\n        mealPlan.title = newTitle\r\n        this.setState({\r\n            mealPlan: mealPlan\r\n        })\r\n        // this.props.updateTitle(course)\r\n    }\r\n\r\n    updateCourse = () => {\r\n        this.setState({ editing: false })\r\n        this.props.updateCourse(this.state.mealPlan._id, this.state.mealPlan)\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"card col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                <div class=\"card-body card-styling\">\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/edit/${this.state.mealPlan._id}`}>\r\n                            <h5 class=\"card-title\">{this.state.mealPlan.title}</h5>\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            onChange={this.updateTitle}\r\n                            value={this.state.mealPlan.title}\r\n                            className=\"form-control\"/>\r\n                    }\r\n                    <p class=\"card-text\">Meal Plan Description. This meal plan is a great meal plan and has cool things.</p>\r\n                    <p class=\"card-text\"><small class=\"text-muted\">Last Updated: {this.props.mealPlan.lastUpdated}<br/>\r\n                    Owner: {this.props.mealPlan.owner}</small></p>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    {\r\n                        this.state.editing &&\r\n                        <td className=\"priority-1\">\r\n                            <button onClick={this.updateCourse} className=\"btn btn-outline-secondary\">\r\n                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n                    }\r\n                    {\r\n                        !this.state.editing &&\r\n                        <td className=\"priority-1\">\r\n                            <button onClick={() => this.setState({ editing: true })} className=\"btn btn-outline-secondary\">\r\n                                <i className=\"fa fa-edit\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n                    }\r\n                    {\r\n                        !this.state.editing &&\r\n                        <td className=\"priority-1\">\r\n                            <button onClick={() => this.props.deleteCourse(this.props.mealPlan)} className=\"btn btn-outline-secondary\">\r\n                                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MealPlanCard","import React from \"react\";\r\nimport mealPlanService from \"../services/MealPlanService\";\r\nimport MealPlanTable from \"./MealPlanTable\";\r\nimport MealPlanCard from \"./MealPlanCard\"\r\nimport \"../css/MealPlanGrid.css\"\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\n\r\n\r\nclass MealPlanGrid extends React.Component {\r\n    state = {\r\n        mealPlans: this.props.mealPlans\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        // console.log(props.courses)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div class=\"card-columns card-deck\">\r\n            <div className=\"container content\">\r\n                <table id=\"courses\" className=\"table table-hover\" cellspacing=\"0\" width=\"100%\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"45%\">Recent documents</th>\r\n                            <th className=\"priority-3\" scope=\"col\" width=\"20%\">Owned by me</th>\r\n                            <th className=\"priority-2\" scope=\"col\" width=\"15%\"></th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\">\r\n                                <div onClick={this.props.changeDisplay}>\r\n                                    <i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\"><i class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i></th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\"><i class=\"fa fa-folder\" aria-hidden=\"true\"></i></th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                {/* \r\n                <div class=\"card-columns\"> */}\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.mealPlans.map(mealPlan =>\r\n                            <MealPlanCard\r\n                                key={mealPlan._id}\r\n                                mealPlan={mealPlan}\r\n                                deleteCourse={this.props.deleteCourse}\r\n                                updateCourse={this.props.updateCourse}\r\n                                updateTitle={this.updateTitle} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MealPlanGrid","import React from \"react\";\r\nimport \"../css/MealPlanManager.css\"\r\nimport MealPlanRow from \"../components/MealPlanRow\";\r\nimport MealPlanTable from \"../components/MealPlanTable\";\r\nimport MealPlanGrid from \"../components/MealPlanGrid\";\r\nimport mealPlanService from \"../services/MealPlanService\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport \"../App.css\";\r\n\r\nclass MealPlanManager extends React.Component {\r\n  state = {\r\n    mealPlans: [],\r\n    title: \"\",\r\n    isTable: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    mealPlanService.findAllMealPlans()\r\n    .then(mealPlans => this.setState({\r\n      mealPlans: mealPlans\r\n    }))\r\n    console.log(this.state.mealPlans)\r\n  }\r\n\r\n  createMealPlan = () => {\r\n    const newMealPlan = {\r\n      title: this.state.title,\r\n      owner: 'me',\r\n      lastUpdated: 'today'\r\n    }\r\n    console.log(newMealPlan)\r\n\r\n    mealPlanService.createMealPlan(newMealPlan).then(actualMealPlan =>\r\n        this.setState(prevState => ({\r\n          mealPlans: [\r\n            ...prevState.mealPlans, actualMealPlan\r\n          ],\r\n          title: \"\"\r\n        })))\r\n  }\r\n\r\n  deleteMealPlan = (mealPlan) => {\r\n    mealPlanService.deleteMealPlan(mealPlan._id).then(status =>\r\n        this.setState(prevState => ({\r\n          mealPlans: prevState.mealPlans.filter(c => c._id !== mealPlan._id)\r\n        }))\r\n    )\r\n  }\r\n\r\n  updateTitle = (mealPlan, number) => {\r\n    console.log(mealPlan)\r\n    const newMealPlans = {\r\n      ...this.state.mealPlans\r\n    }\r\n    console.log(newMealPlans)\r\n    newMealPlans[number] = mealPlan\r\n    this.setState({\r\n      mealPlans:\r\n      newMealPlans\r\n    })\r\n  }\r\n\r\n  updateMealPlan = (mealPlanId, mealPlan) => {\r\n    mealPlanService.updateMealPlan(mealPlanId, mealPlan)\r\n    .then(status => {\r\n      this.setState(prevState => ({\r\n        mealPlans: prevState.mealPlans.map(c => c._id === mealPlanId?mealPlan: c)\r\n      }))\r\n    })\r\n  }\r\n\r\n  enterTitle = (event) => {\r\n    const newTitle = event.target.value\r\n    this.setState({\r\n      title: newTitle\r\n    })\r\n  }\r\n\r\n  changeDisplay = () => {\r\n    this.setState(prevState => ({\r\n      isTable: !prevState.isTable\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          {/* navbar */}\r\n          <nav class=\"navbar sticky-top navbar-dark manager-nav-bar\">\r\n            <a class=\"navbar-brand \"> <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>  Meal Plan Manager</a>\r\n            <div class=\"input-group mb-3\">\r\n              <input type=\"text\" value={this.state.title} onChange={this.enterTitle} class=\"form-control\" placeholder=\"New Course Title\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-success\" onClick={this.createMealPlan} type=\"button\"><i className=\"fa fa-plus-circle\"\r\n                                                                                                       aria-hidden=\"true\"></i></button>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n          {\r\n            this.state.isTable &&\r\n            <MealPlanTable\r\n                mealPlans={this.state.mealPlans}\r\n                deleteMealPlan={this.deleteMealPlan}\r\n                updateMealPlan={this.updateMealPlan}\r\n                changeDisplay={this.changeDisplay}\r\n                updateTitle={this.updateTitle}/>\r\n          }\r\n          {\r\n            !this.state.isTable &&\r\n            <MealPlanGrid\r\n                mealPlans={this.state.mealPlans}\r\n                deleteMealPlan={this.deleteMealPlan}\r\n                updateMealPlan={this.updateMealPlan}\r\n                changeDisplay={this.changeDisplay}\r\n                updateTitle={this.updateTitle}/>\r\n          }\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default MealPlanManager\r\n","const url = \"https://api.spoonacular.com/recipes\"\r\nconst key1 = \"faa54ae99c9a46efbb6498e0a9965093\"\r\nconst key2 = \"b8915584174a4f338d7d9f2080152bd9\"\r\nconst key = key2\r\n\r\nexport const findRecipes = (search) => {\r\n  return fetch(`${url}/complexSearch/?apiKey=${key}&query=${search}`, {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n  )\r\n    .then(response => response.json())\r\n}\r\n\r\nexport const findRecipesWithCuisine = (search, cuisine) =>\r\n  fetch(`${url}/complexSearch/?apiKey=${key}&query=${search}&cuisine=${cuisine}`, {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n  )\r\n    .then(response => response.json())\r\n\r\nexport const findRecipeInfoById = (recipeId) =>\r\n  fetch(`${url}/${recipeId}/information?apiKey=${key}&includeNutrition=true`, {\r\n    method: \"GET\"\r\n  })\r\n    .then(response => response.json())\r\n\r\nexport const findRandomRecipes = (numRecipes) =>\r\n  fetch(`${url}/random?apiKey=${key}&number=${numRecipes}`, {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }).then(response => response.json())\r\n\r\nexport const findRecipeInstructionsById = (recipeId) =>{\r\n  debugger\r\n  return fetch(`${url}/${recipeId}/analyzedInstructions?apiKey=${key}`, {\r\n    method: \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n  }\r\n\r\n\r\n\r\nexport default {\r\n  findRecipes,\r\n  findRecipesWithCuisine,\r\n  findRecipeInfoById,\r\n  findRandomRecipes,\r\n  findRecipeInstructionsById\r\n}\r\n","import RecipeService from \"../services/RecipeService\"\r\n\r\nexport const FIND_RECIPES = \"FIND_RECIPES\"\r\nexport const UPDATE_KEYWORD = \"UPDATE_KEYWORD\"\r\nexport const FIND_RECIPE_INFO_BY_ID = \"FIND_RECIPE_INFO_BY_ID\"\r\nexport const FIND_RECIPE_INSTRUCTIONS_BY_ID = \"FIND_RECIPE_INSTRUCTIONS_BY_ID\"\r\n\r\nexport const findRecipes = (dispatch, recipeName) =>\r\n  RecipeService.findRecipes(recipeName)\r\n    .then(recipes =>\r\n      dispatch({\r\n        type: FIND_RECIPES,\r\n        recipes\r\n      }))\r\n\r\nexport const updateKeyword = (dispatch, keyword) => {\r\n  return dispatch({\r\n    type: UPDATE_KEYWORD,\r\n    keyword\r\n  })\r\n}\r\n\r\nexport const findRecipeInfoById = (dispatch, recipeId) =>\r\n  RecipeService.findRecipeInfoById(recipeId)\r\n    .then(recipe =>\r\n      dispatch({\r\n        type: FIND_RECIPE_INFO_BY_ID,\r\n        recipe\r\n      }))\r\n\r\nexport const findRecipeInstructionsById = (dispatch, recipeId) => {\r\n  debugger\r\n  return RecipeService.findRecipeInstructionsById(recipeId)\r\n    .then(instructions =>\r\n      dispatch({\r\n        type: FIND_RECIPE_INSTRUCTIONS_BY_ID,\r\n        instructions: instructions[0]\r\n      }))\r\n    }\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../css/SearchRecipe.css\"\r\n\r\nimport {\r\n    findRecipes,\r\n    updateKeyword\r\n} from \"../actions/recipeActions\"\r\n\r\nconst SearchRecipe = (\r\n    { keyword, recipes = [],\r\n        findRecipes, updateKeyword }) =>\r\n\r\n    <div>\r\n        <h1 className=\"search-recipes-header\">Search Recipes</h1>\r\n        <div className=\"search-bar\">\r\n            <input className=\"form-control mx-auto search-fld\"\r\n                placeholder=\"keywords\"\r\n                value={keyword}\r\n                onChange={(event) => updateKeyword(event.target.value)} />\r\n            <div className=\"input-group-append mx-auto search-btn\">\r\n                <button onClick={() => findRecipes(keyword)}\r\n                    className=\"btn btn-secondary\">\r\n                    Search\r\n            </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    recipes: state.recipeReducer.recipes,\r\n    keyword: state.recipeReducer.keyword\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findRecipes: (recipeName) => findRecipes(dispatch, recipeName),\r\n    updateKeyword: (keyword) => updateKeyword(dispatch, keyword)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (SearchRecipe)\r\n\r\n","export const DELETE_RECIPE = \"DELETE_RECIPE\"\r\nexport const DELETE_INGREDIENT = \"DELETE_INGREDIENT\"\r\nexport const ADD_RECIPE_FOR_MEAL = \"ADD_RECIPE_FOR_MEAL\"\r\nexport const ADD_INGREDIENT_FOR_MEAL = \"ADD_INGREDIENT_FOR_MEAL\"\r\nexport const FIND_RECIPES_FOR_MEAL = \"FIND_RECIPES_FOR_MEAL\"\r\nexport const FIND_INGREDIENTS_FOR_MEAL = \"FIND_INGREDIENTS_FOR_MEAL\"\r\n\r\nexport const deleteRecipe = (dispatch, recipeId) => {\r\n    return dispatch({\r\n        type: DELETE_RECIPE,\r\n        recipeId\r\n    })\r\n}\r\n\r\nexport const deleteIngredient = (dispatch, ingredientId) => {\r\n    return dispatch({\r\n        type: DELETE_INGREDIENT,\r\n        ingredientId\r\n    })\r\n}\r\n\r\nexport const addRecipeForMeal = (dispatch, mealId, recipe) => {\r\n    return dispatch({\r\n        type: ADD_RECIPE_FOR_MEAL,\r\n        mealId,\r\n        recipe\r\n    })\r\n}\r\n\r\nexport const addIngredientForMeal = (dispatch, mealId, ingredient) => {\r\n    return dispatch({\r\n        type: ADD_INGREDIENT_FOR_MEAL,\r\n        mealId,\r\n        ingredient\r\n    })\r\n}\r\n\r\nexport const findRecipesForMeal = (dispatch, mealId) => {\r\n    return dispatch({\r\n        type: FIND_RECIPES_FOR_MEAL,\r\n        mealId\r\n    })\r\n}\r\n\r\nexport const findIngredientsForMeal = (dispatch, mealId) => {\r\n        return dispatch({\r\n            type: FIND_INGREDIENTS_FOR_MEAL,\r\n            mealId\r\n        })\r\n    }","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport '../css/RecipeTable.css';\r\nimport '../App.css';\r\nimport {\r\n    addRecipeForMeal\r\n} from '../actions/recipeAndIngredientActions';\r\n\r\nconst RecipeTable = (\r\n    { recipes = [], mealId = undefined }) =>\r\n\r\n    <div>\r\n        <ul className=\"recipe-list\">\r\n            {\r\n                recipes.map(recipe =>\r\n                    <li className=\"list-group-item list-item\">\r\n                        <Link to={`/recipes/${recipe.id}`} className=\"recipe-title\">\r\n                            {recipe.title}\r\n                        </Link>\r\n                        <img src={recipe.image} alt=\"\" className=\"recipe-image\" />\r\n                        {mealId &&\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"serving size\"\r\n                                    onChange={(event) =>\r\n                                        console.log(event)} />\r\n                                <button className=\"btn btn-outline-secondary add-ingredient\"\r\n                                    onClick={() => addRecipeForMeal(mealId, recipe)}>Add</button>\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                )\r\n\r\n            }\r\n        </ul>\r\n    </div>\r\n\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    recipes: state.recipeReducer.recipes,\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    addRecipeForMeal: (mealId, recipe) => addRecipeForMeal(dispatch, mealId, recipe)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (RecipeTable)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport SearchRecipe from \"../components/SearchRecipe\";\r\nimport RecipeTable from '../components/RecipeTable';\r\n\r\n// put the router in here\r\nclass RecipeSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n          <SearchRecipe/>\r\n          <RecipeTable mealId={this.props.match.params.mealId}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (RecipeSelector)\r\n","const url = \"https://api.spoonacular.com/food/ingredients\"\r\nconst key1 = \"faa54ae99c9a46efbb6498e0a9965093\"\r\nconst key2 = \"b8915584174a4f338d7d9f2080152bd9\"\r\nconst key = key2\r\n\r\nexport const findIngredients = (search) => {\r\ndebugger\r\n  return fetch(`${url}/search/?apiKey=${key}&query=${search}`, {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n  )\r\n    .then(response => response.json())\r\n}\r\n\r\nexport const findIngredientInfoById = (ingredientId) => {\r\n    debugger\r\n    return fetch(`${url}/${ingredientId}/information?apiKey=${key}&includeNutrition=true`, {\r\n        method: \"GET\"\r\n      })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const findRecipesWithCuisine = (search, cuisine) =>\r\n  fetch(`${url}/complexSearch/?apiKey=${key}&query=${search}&cuisine=${cuisine}`, {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n  )\r\n    .then(response => response.json())\r\n\r\nexport const findRandomRecipes = (numRecipes) =>\r\n  fetch(`${url}/random?apiKey=${key}&number=${numRecipes}`, {\r\n    \"method\": \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }).then(response => response.json())\r\n\r\nexport const findRecipeInstructionsById = (recipeId) =>{\r\n  debugger\r\n  return fetch(`${url}/${recipeId}/analyzedInstructions?apiKey=${key}`, {\r\n    method: \"GET\",\r\n    \"headers\": {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n  }\r\n\r\n\r\n\r\nexport default {\r\n  findIngredients,\r\n  findRecipesWithCuisine,\r\n  findIngredientInfoById,\r\n  findRandomRecipes,\r\n  findRecipeInstructionsById\r\n}\r\n","import IngredientService from \"../services/IngredientService\"\r\n\r\nexport const FIND_INGREDIENTS = \"FIND_INGREDIENTS\"\r\nexport const UPDATE_KEYWORD = \"UPDATE_KEYWORD\"\r\nexport const FIND_INGREDIENT_INFO_BY_ID = \"FIND_INGREDIENT_INFO_BY_ID\"\r\n\r\n\r\nexport const findIngredients = (dispatch, ingredientName) => \r\n    IngredientService.findIngredients(ingredientName)\r\n    .then(ingredients =>\r\n      dispatch({\r\n        type: FIND_INGREDIENTS,\r\n        ingredients\r\n      }))\r\n\r\n\r\nexport const updateKeyword = (dispatch, keyword) => {\r\n  return dispatch({\r\n    type: UPDATE_KEYWORD,\r\n    keyword\r\n  })\r\n}\r\n\r\nexport const findIngredientInfoById = (dispatch, ingredientId) =>\r\nIngredientService.findIngredientInfoById(ingredientId)\r\n    .then(ingredient =>\r\n      dispatch({\r\n        type: FIND_INGREDIENT_INFO_BY_ID,\r\n        ingredient\r\n      }))\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../css/SearchRecipe.css\"\r\n\r\nimport {\r\n    findIngredients,\r\n    updateKeyword\r\n} from \"../actions/ingredientActions\"\r\n\r\nconst SearchIngredient = (\r\n    { keyword, ingredients = [],\r\n        findIngredients, updateKeyword }) =>\r\n{console.log(ingredients)\r\n    return <div>\r\n        <h1 className=\"search-recipes-header\">Search Ingredients</h1>\r\n        <div className=\"search-bar\">\r\n            <input className=\"form-control mx-auto search-fld\"\r\n                placeholder=\"keywords\"\r\n                value={keyword}\r\n                onChange={(event) => updateKeyword(event.target.value)} />\r\n            <div className=\"input-group-append mx-auto search-btn\">\r\n                <button onClick={() => findIngredients(keyword)}\r\n                    className=\"btn btn-secondary\">\r\n                    Search\r\n            </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    ingredients: state.ingredientReducer.ingredients,\r\n    keyword: state.ingredientReducer.keyword\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findIngredients: (ingredientName) => findIngredients(dispatch, ingredientName),\r\n    updateKeyword: (keyword) => updateKeyword(dispatch, keyword)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (SearchIngredient)\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport '../css/RecipeTable.css';\r\nimport '../App.css';\r\nimport '../css/IngredientTable.css';\r\nimport {\r\n    addIngredientForMeal\r\n} from '../actions/recipeAndIngredientActions';\r\n\r\nimport {\r\n    findIngredientInfoById\r\n} from '../actions/ingredientActions';\r\n\r\nconst IngredientTable = ({ addIngredientForMeal, ingredients = [], mealId = undefined, findIngredientInfoById, currIngredient }) =>\r\n\r\n    <div>\r\n        <ul className=\"recipe-list\">\r\n            {\r\n                ingredients.map(ingredient =>\r\n                    <li className=\"list-group-item list-item\">\r\n                        <Link to={`/ingredients/${ingredient.id}`} className=\"recipe-title\">\r\n                            {ingredient.name}\r\n                        </Link>\r\n                        {mealId &&\r\n                            <button className=\"btn btn-outline-secondary add-ingredient\"\r\n                                onClick={() => addIngredientForMeal(mealId, ingredient)}>Add</button>}\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"serving size\"\r\n                            onChange={(event) =>\r\n                                console.log(event)} />\r\n                        <select>\r\n                            {  \r\n                            //    findIngredientInfoById(ingredient.id)\r\n                            }\r\n                            {\r\n                                currIngredient.possibleUnits.map(unit => <option value={unit}>{unit}</option>)\r\n                            }\r\n                        </select>\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    console.log(state)\r\n    return ({\r\n        ingredients: state.ingredientReducer.ingredients,\r\n        currIngredient: state.ingredientReducer.ingredient\r\n    })\r\n}\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    addIngredientForMeal: (mealId, ingredient) => addIngredientForMeal(dispatch, mealId, ingredient),\r\n    findIngredientInfoById: (ingredientId) => findIngredientInfoById(dispatch, ingredientId)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (IngredientTable)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport SearchIngredient from \"../components/SearchIngredient\";\r\nimport IngredientTable from '../components/IngredientTable';\r\n\r\n// put the router in here\r\nclass IngredientSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n          <SearchIngredient/>\r\n          <IngredientTable mealId={this.props.match.params.mealId}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (IngredientSelector)\r\n","import {\r\n    FIND_RECIPES,\r\n    UPDATE_KEYWORD,\r\n    FIND_RECIPE_INFO_BY_ID,\r\n    FIND_RECIPE_INSTRUCTIONS_BY_ID\r\n} from \"../actions/recipeActions\"\r\n\r\n\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    recipe: {},\r\n    keyword: \"\",\r\n    instructions: {steps: []}\r\n}\r\n\r\nconst recipeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_RECIPES:\r\n            debugger\r\n            console.log(action.recipes)\r\n            return {\r\n                ...state,\r\n                recipes: action.recipes.results\r\n            }\r\n        case UPDATE_KEYWORD:\r\n            return {\r\n                ...state,\r\n                keyword: action.keyword\r\n            }\r\n        case FIND_RECIPE_INFO_BY_ID:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                recipe: action.recipe\r\n            }\r\n        case FIND_RECIPE_INSTRUCTIONS_BY_ID:\r\n            return {\r\n                ...state,\r\n                instructions: action.instructions\r\n            }\r\n            debugger\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default recipeReducer","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport {\r\n    findRecipeInfoById\r\n} from \"../actions/recipeActions\"\r\n\r\nconst Ingredients = (\r\n    {recipe = {}, recipeIngredients = []}) =>\r\n\r\n    <div className=\"\">\r\n        <h2>Ingredients</h2>\r\n        {\r\n            console.log(recipe)\r\n        }\r\n\r\n            {\r\n                recipeIngredients.map(ingredient =>\r\n                    <li className=\"list-group-item\">\r\n                        {ingredient.name + \" \"}\r\n                        Amount: {ingredient.measures.metric.amount} {ingredient.measures.metric.unitLong}\r\n                    </li>\r\n                )\r\n            }\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    recipe: state.recipeReducer.recipe,\r\n    recipeIngredients: state.recipeReducer.recipe.extendedIngredients\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findRecipeInfoById: (recipeId) => findRecipeInfoById(dispatch, recipeId)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (Ingredients)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nimport {\r\n    findRecipeInstructionsById\r\n} from \"../actions/recipeActions\"\r\n\r\n// put the router in here\r\nconst Instructions = (\r\n    { recipe = {}, recipeInstructions = {steps: []} }) => {\r\n        console.log(recipeInstructions)\r\n    return <div className=\"\">\r\n        {/* <h2>Instructions</h2> */}\r\n\r\n        {/* {\r\n            recipeInstructions.steps.map(step =>\r\n                <li className=\"list-group-item\">\r\n                    {step.number + \": \" + step.step}\r\n                    <br/>\r\n                    Ingredients: {step.ingredients.map(ingredient =>\r\n                        <li>\r\n                            {ingredient.name}\r\n                        </li>)}\r\n                    Equipment: {step.equipment.map(equip =>\r\n                        <li>\r\n                            {equip.name}\r\n                        </li>\r\n                    )}\r\n                </li>\r\n            )\r\n        } */}\r\n    </div>\r\n    }\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    recipe: state.recipeReducer.recipe,\r\n    recipeInstructions: state.recipeReducer.instructions\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findRecipeInstructionsById: (recipeId) => findRecipeInstructionsById(dispatch, recipeId)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (Instructions)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport '../css/RecipeDetails.css';\r\nimport IngredientsComponent from \"../components/Ingredients\";\r\nimport InstructionsComponent from \"../components/Instructions\";\r\nimport {\r\n    findRecipeInfoById,\r\n    findRecipeInstructionsById\r\n} from \"../actions/recipeActions\"\r\n\r\n// put the router in here\r\nclass RecipeDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const recipeId = this.props.match.params.recipeId\r\n        this.props.findRecipeInfoById(recipeId)\r\n        this.props.findRecipeInstructionsById(recipeId)\r\n        console.log(\"updated\")\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.match.params.recipeId !== this.props.match.params.recipeId) {\r\n            const recipeId = this.props.match.params.recipeId\r\n            this.props.findRecipeInfoById(recipeId)\r\n            debugger\r\n            this.props.findRecipeInstructionsById(recipeId)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"title-header\">{this.props.recipe.title}</h1>\r\n                <img className=\"recipe-image\" src={this.props.recipe.image} alt=\"\" />\r\n                <div className=\"recipe-info\">\r\n                    <h3>Serving Size: {this.props.recipe.servings}</h3>\r\n                    <h3>Estimated Time: {this.props.recipe.readyInMinutes} minutes</h3>\r\n                    <h3>Health Score: {this.props.recipe.healthScore} </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <IngredientsComponent />\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <InstructionsComponent recipeInstructions={{steps: []}}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    recipe: state.recipeReducer.recipe\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findRecipeInfoById: (recipeId) => findRecipeInfoById(dispatch, recipeId),\r\n    findRecipeInstructionsById: (recipeId) => findRecipeInstructionsById(dispatch, recipeId)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (RecipeDetails)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport '../css/RecipeDetails.css';\r\nimport IngredientsComponent from \"../components/Ingredients\";\r\nimport InstructionsComponent from \"../components/Instructions\";\r\nimport {\r\n    findIngredientInfoById,\r\n} from \"../actions/ingredientActions\"\r\nimport \"../css/IngredientDetails.css\";\r\n\r\n// put the router in here\r\nclass IngredientDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        const ingredientId = this.props.match.params.ingredientId\r\n        this.props.findIngredientInfoById(ingredientId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"ingredient-header\">{this.props.ingredient.name}</h1>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <td>Possible Units</td>\r\n                        <td>Consistency</td>\r\n                        <td>Aisle</td>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <ul>\r\n                                    {console.log(this.props.ingredient)}\r\n                                    {this.props.ingredient.possibleUnits.map(unit => <li>{unit}</li>)}\r\n                                </ul>\r\n                            </td>\r\n                            <td>{this.props.ingredient.consistency}</td>\r\n                            <td>{this.props.ingredient.aisle}</td>                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    ingredient: state.ingredientReducer.ingredient\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findIngredientInfoById: (ingredientId) => findIngredientInfoById(dispatch, ingredientId),\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (IngredientDetails)\r\n","const url = \"http://localhost:8080/api\"\r\n\r\n\r\n\r\n\r\n\r\nexport const getUserFollowingsByFollower = (uid) =>\r\n    fetch(`${url}/follower/${uid}/followings/user`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const getUserFollowingsByCreator = (uid) => {\r\n    debugger\r\n    return fetch(`${url}/creator/${uid}/followings/user`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {debugger \r\n            return response.json()})\r\n}\r\n\r\nexport const getFollowingsByFollower = (uid) => {\r\n    fetch(`${url}/follower/${uid}/followings`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const getFollowingById = (fid) => {\r\n    fetch(`${url}/followings/${fid}`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const getAllRecentFollowing = (uid) => {\r\n    fetch(`${url}/users/${uid}/recentfollowers`)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const deleteFollowing = (fid) => {\r\n    fetch(`${url}/followings/${fid}`, {\r\n        method: 'DELETE'\r\n    }).then(response => response.json())\r\n}\r\n\r\nexport const addFollowing = (newFollowing) => {\r\n    fetch(`${url}/followings`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFollowing),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    }).then(response => response.json())\r\n}\r\n\r\nexport default {\r\n    getFollowingById,\r\n    getAllRecentFollowing,\r\n    deleteFollowing,\r\n    addFollowing,\r\n    getFollowingsByFollower,\r\n    getUserFollowingsByFollower,\r\n    getUserFollowingsByCreator\r\n}\r\n","import followingService from \"../services/FollowingService\"\r\n\r\n\r\nexport const UPDATE_FOLLOWERS_EXPANDED = \"UPDATE_FOLLOWERS_EXPANDED\";\r\nexport const UPDATE_FOLLOWING_EXPANDED = \"UPDATE_FOLLOWING_EXPANDED\";\r\nexport const ADD_FOLLOWING = \"ADD_FOLLOWING\";\r\nexport const GET_CREATORS = \"GET_CREATORS\";\r\nexport const GET_FOLLOWERS = \"GET_FOLLOWERS\";\r\n\r\nexport const updateFollowersExpanded = (dispatch, followersExpanded) => {\r\n    dispatch({\r\n        type: UPDATE_FOLLOWERS_EXPANDED,\r\n        followersExpanded\r\n    })\r\n}\r\n\r\nexport const updateFollowingExpanded = (dispatch, followingExpanded) => {\r\n    dispatch({\r\n        type: UPDATE_FOLLOWING_EXPANDED,\r\n        followingExpanded\r\n    })\r\n}\r\n\r\nexport const getFollowers = (dispatch, userId) => {\r\n    debugger\r\n    return followingService.getUserFollowingsByCreator(userId).then(status => {\r\n        debugger\r\n        return dispatch({\r\n            type: GET_FOLLOWERS,\r\n            users: status\r\n        })})\r\n}\r\n\r\nexport const getCreators = (dispatch, userId) => {\r\n    debugger\r\n    return followingService.getUserFollowingsByFollower(userId).then(status =>\r\n        dispatch({\r\n            type: GET_CREATORS,\r\n            users: status\r\n        }))\r\n}\r\n\r\nexport const addFollowing = (dispatch, newFollowing) => {\r\n    dispatch({\r\n        type: ADD_FOLLOWING,\r\n        newFollowing\r\n    })\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/MyRecipes.css';\r\nconst recipes = [\r\n    { id: 123, title: 'tiramusu', time: '1 hour', servings: 2, created: '11/11/19' },\r\n    { id: 234, title: 'chocolate cake', time: '1 hour', servings: 2, created: '11/11/19' },\r\n    { id: 345, title: 'chicken pot pie', time: '1 hour', servings: 2, created: '11/11/19' },\r\n    { id: 456, title: 'tomato soup', time: '1 hour', servings: 2, created: '11/11/19' },\r\n    { id: 567, title: 'stir fried rice', time: '1 hour', servings: 2, created: '11/11/19' }\r\n]\r\nconst MyRecipes = () =>\r\n\r\n        <table className=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Time</th>\r\n                    <th>Servings</th>\r\n                    <th>Created</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {recipes.map(recipe => \r\n                <tr>\r\n                    <td>{recipe.title}</td>\r\n                    <td>{recipe.time}</td>\r\n                    <td>{recipe.servings}</td>\r\n                    <td>{recipe.created}</td>\r\n                </tr>)}\r\n            </tbody>\r\n        </table>\r\n\r\nexport default MyRecipes\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../css/ProfilePage.css';\r\nimport {\r\n    updateFollowersExpanded,\r\n    updateFollowingExpanded\r\n} from \"../actions/profileActions\"\r\nimport MyRecipes from '../components/MyRecipes';\r\nimport FollowingService, {addFollowing} from \"../services/FollowingService\";\r\nimport FavoriteRecipes from '../components/FavoriteRecipes';\r\n\r\n\r\nconst OthersProfilePage = ({ updateFollowersExpanded, updateFollowingExpanded, followingExpanded, followersExpanded,\r\n    followers, following }) =>\r\n    <div className=\"container\">\r\n        <h1 className=\"header name\">Bohn Bu</h1>\r\n        <h1 className=\"text-center\"><\r\n            button onClick={() => addFollowing({followerId: this.followerId, creatorId: this.props.match.params.userId, time: new Date()})}\r\n                   className=\"btn btn-outline-success follow-button\">Follow</button></h1>\r\n        <div className=\"row\">\r\n            <div className=\"col-3\">ow\r\n                <div>\r\n                    <h1 className=\"length\">{followers.length}</h1>\r\n                    <h3><b className=\"btn-padding\">Followers</b>\r\n                        {!followersExpanded && <button onClick={() => updateFollowersExpanded(true)} className=\"btn btn-outline-secondary\">expand</button>}\r\n                        {followersExpanded && <button onClick={() => updateFollowersExpanded(false)} className=\"btn btn-outline-secondary\">contract</button>}\r\n                    </h3>\r\n                    {followersExpanded &&\r\n                        <ul>\r\n                            {\r\n                                followers.map(follower => <li>{follower.name}</li>)\r\n                            }\r\n                        </ul>}\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"length padding-top\">{following.length}</h1>\r\n                    <h3><b className=\"btn-padding\">Following</b>\r\n                        {!followingExpanded && <button onClick={() => updateFollowingExpanded(true)} className=\"btn btn-outline-secondary\">expand</button>}\r\n                        {followingExpanded && <button onClick={() => updateFollowingExpanded(false)} className=\"btn btn-outline-secondary\">contract</button>}\r\n                    </h3>\r\n                    {followingExpanded &&\r\n                        <ul>\r\n                            {\r\n                                following.map(following => <li>{following.name}</li>)\r\n                            }\r\n                        </ul>}\r\n                </div>\r\n            </div>\r\n            <div className=\"col-7\">\r\n                <h3 className=\"header-padding\">Bohn's Recipes</h3>\r\n                <MyRecipes />\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    followingExpanded: state.profileReducer.followingExpanded,\r\n    followersExpanded: state.profileReducer.followersExpanded,\r\n    following: state.profileReducer.following,\r\n    followers: state.profileReducer.followers,\r\n    followerId: state.userReducer.user.userId,\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    updateFollowersExpanded: (expanded) => updateFollowersExpanded(dispatch, expanded),\r\n    updateFollowingExpanded: (expanded) => updateFollowingExpanded(dispatch, expanded),\r\n    addFollowing: (newFollowing) => addFollowing(dispatch, newFollowing)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (OthersProfilePage)\r\n","import RecipeService from \"../services/RecipeService\";\r\nexport const FIND_RANDOM_RECIPE = \"FIND_RANDOM_RECIPE\";\r\n\r\nexport const findRandomRecipes = (dispatch, numRecipes) =>\r\n    RecipeService.findRandomRecipes(numRecipes)\r\n    .then(randomRecipes =>\r\n        dispatch({\r\n          type: FIND_RANDOM_RECIPE,\r\n          randomRecipes\r\n        }))\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {findRandomRecipes} from \"../actions/homeActions\";\r\nimport '../css/HomePage.css';\r\n\r\nclass HomePage extends React.Component {\r\n  popularUser = []; // the most followed user from our database's meal plan - need a function to retrieve the user's meal plan\r\n  userFollowings = []; // the user's followings\r\n  randomMealPlans = []; // random meal plans\r\n\r\n  componentDidMount() {\r\n    // this.props.findRandomRecipes(4)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n        <div className=\"container\">\r\n          <h3 className=\"header-styling\">Most Popular Meal Plan</h3>\r\n          <div className=\"card-deck\">\r\n            <div className=\"sm-col-6\">\r\n              <div className=\"card\">\r\n                <img src=\"https://picsum.photos/300/200\" className=\"card-img-top img-styling\"></img>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Meal Plan</h5>\r\n                  <p className=\"card-text\">\r\n                    Meal plan description</p>\r\n                  <a href=\"#\" className=\"btn btn-outline-secondary\">more...</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"header-styling\">Your Recently Favorited Meal Plans (follower)</h3>\r\n            <div id=\"carouselExampleControls\" className=\"carousel slide\"\r\n                 data-ride=\"carousel\">\r\n              <div className=\"carousel-inner\">\r\n                <div className=\"carousel-item active\">\r\n                  <img className=\"d-block w-100\" src=\"https://picsum.photos/300/200\" alt=\"First slide\"></img>\r\n                </div>\r\n                <div className=\"carousel-item\">\r\n                  <img className=\"d-block w-100\" src=\"https://picsum.photos/300/200\" alt=\"Second slide\"></img>\r\n                </div>\r\n                <div className=\"carousel-item\">\r\n                  <img className=\"d-block w-100\" src=\"https://picsum.photos/300/200\" alt=\"Third slide\"></img>\r\n                </div>\r\n              </div>\r\n              <a className=\"carousel-control-prev\"\r\n                 role=\"button\"\r\n                 data-slide=\"prev\">\r\n                <span className=\"carousel-control-prev-icon\"\r\n                      aria-hidden=\"true\"></span>\r\n                <span className=\"sr-only\">Previous</span>\r\n              </a>\r\n              <a className=\"carousel-control-next\"\r\n                 href=\"#carouselExampleControls\" role=\"button\"\r\n                 data-slide=\"next\">\r\n                <span className=\"carousel-control-next-icon\"\r\n                      aria-hidden=\"true\"></span>\r\n                <span className=\"sr-only\">Next</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"header-styling\">Your Recently Created Meal Plans (creator)</h3>\r\n            <div id=\"carouselExampleControls\" className=\"carousel slide\"\r\n                 data-ride=\"carousel\">\r\n              <div className=\"carousel-inner\">\r\n                <div className=\"carousel-item active\">\r\n                  <img className=\"d-block w-100\" src=\"https://picsum.photos/300/200\" alt=\"First slide\"></img>\r\n                </div>\r\n                <div className=\"carousel-item\">\r\n                  <img className=\"d-block w-100\" src=\"https://picsum.photos/300/200\" alt=\"Second slide\"></img>\r\n                </div>\r\n                <div className=\"carousel-item\">\r\n                  <img className=\"d-block w-100\" src=\"https://picsum.photos/300/200\" alt=\"Third slide\"></img>\r\n                </div>\r\n              </div>\r\n              <a className=\"carousel-control-prev\"\r\n                 role=\"button\"\r\n                 data-slide=\"prev\">\r\n                <span className=\"carousel-control-prev-icon\"\r\n                      aria-hidden=\"true\"></span>\r\n                <span className=\"sr-only\">Previous</span>\r\n              </a>\r\n              <a className=\"carousel-control-next\"\r\n                 href=\"#carouselExampleControls\" role=\"button\"\r\n                 data-slide=\"next\">\r\n                <span className=\"carousel-control-next-icon\"\r\n                      aria-hidden=\"true\"></span>\r\n                <span className=\"sr-only\">Next</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"header-styling\">More Meal Plans</h3>\r\n            <div className=\"card-deck\">\r\n              <div className=\"col-xs-12 col-sm-3\">\r\n                <div className=\"card\">\r\n                  <img src=\"https://picsum.photos/300/200\" className=\"card-img-top img-styling\"></img>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Recipe</h5>\r\n                    <p className=\"card-text\">\r\n                      Recipe description</p>\r\n                    <a href=\"#\" className=\"btn btn-outline-secondary\">more...</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-12 col-sm-3\">\r\n                <div className=\"card\">\r\n                  <img src=\"https://picsum.photos/300/200\" className=\"card-img-top img-styling\"></img>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Recipe</h5>\r\n                    <p className=\"card-text\">\r\n                      Recipe description</p>\r\n                    <a href=\"#\" className=\"btn btn-outline-secondary\">more...</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-12 col-sm-3\">\r\n                <div className=\"card\">\r\n                  <img src=\"https://picsum.photos/300/200\" className=\"card-img-top img-styling\"></img>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Recipe</h5>\r\n                    <p className=\"card-text\">\r\n                      Recipe description</p>\r\n                    <a href=\"#\" className=\"btn btn-outline-secondary\">more...</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-12 col-sm-3\">\r\n                <div className=\"card\">\r\n                  <img src=\"https://picsum.photos/300/200\" className=\"card-img-top img-styling\"></img>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Recipe</h5>\r\n                    <p className=\"card-text\">\r\n                      Recipe description</p>\r\n                    <a href=\"#\" className=\"btn btn-outline-secondary\">more...</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/*{console.log(this.randomRecipes)}*/}\r\n          {/*<ul>*/}\r\n          {/*  {this.randomRecipes.map(recipe => <li>{recipe.title}</li>)}*/}\r\n          {/*</ul>*/}\r\n          {/*<SearchRecipeComponent/>*/}\r\n          {/*<RecipeTableComponent/>*/}\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  // randomRecipes: state.homeReducer.randomRecipes\r\n});\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n  findRandomRecipes: (numRecipes) => findRandomRecipes(dispatch, numRecipes)\r\n});\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(HomePage)\r\n","const url = \"http://localhost:8080/api\"\r\n\r\n// function verifies user exists, returns boolean\r\nexport const getIsUserAndPass = (user) => {\r\n    return fetch(`${url}/is/users/password`)\r\n        .then(response => response.json())\r\n}\r\n\r\n// function determines if user already exists in database, returns boolean (true if it exists)\r\nexport const getIsUser = (username) => {\r\n    debugger\r\n    return fetch(`${url}/is/user/${username}`).then(response => response.json())\r\n}\r\n\r\nexport const updateUser = (userId, newUser) => {\r\n    debugger\r\n    return fetch(`${url}/users/${userId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newUser),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => {\r\n            debugger \r\n            return response.json()})\r\n}\r\n\r\nexport const deleteUser = (userId) => {\r\n    return fetch(`${url}/${userId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const addUser = (user) => {\r\n    debugger\r\n    return fetch(`${url}/users`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        credentials: \"include\"\r\n    }).then(response => response.json());\r\n}\r\n\r\nexport const signIn = (user) => {\r\n    debugger\r\n    return fetch(`${url}/users/signin`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        credentials: \"include\"\r\n    }).then(response => response.json());\r\n}\r\n\r\nexport const profile = () => {\r\n    debugger\r\n    return fetch(`${url}/profile`, {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    }).then(response => response.json());\r\n}\r\n\r\nexport default {\r\n    getIsUserAndPass,\r\n    getIsUser,\r\n    updateUser,\r\n    deleteUser,\r\n    addUser,\r\n    profile,\r\n    signIn\r\n}\r\n","import userService from \"../services/UserService\"\r\n\r\nexport const EDIT_USER = \"EDIT_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const GET_IS_USER = \"GET_IS_USER\";\r\nexport const UPDATE_NEWUSER = \"UPDATE_NEWUSER\"\r\nexport const UPDATE_VERIFYPASSWORD = \"UPDATE_VERIFYPASSWORD\"\r\nexport const UPDATE_USERNAME = \"UPDATE_USERNAME\"\r\nexport const CREATE_USER = \"CREATE_USER\"\r\nexport const WRONG_LOGIN = \"WRONG_LOGIN\"\r\nexport const SIGN_IN = \"SIGN_IN\"\r\n\r\n\r\n//not mine\r\nexport const getIsUser = (dispatch, username) => {\r\n  userService.getIsUser(username).then(status => dispatch({\r\n    type: GET_IS_USER,\r\n    username\r\n  }))\r\n}\r\n\r\n\r\n//------- Functions for Edit Profile -------\r\n\r\nexport const editUser = (dispatch, tempUser) => {\r\n  debugger\r\n  return dispatch({\r\n    type: EDIT_USER,\r\n    tempUser: tempUser\r\n  })\r\n}\r\n\r\nexport const updateUser = (dispatch, newUser) => {\r\n  debugger\r\n  return userService.updateUser(newUser.id, newUser).then(status => {\r\n    debugger\r\n    return dispatch({\r\n      type: UPDATE_USER,\r\n      tempUser: status\r\n    })})\r\n}\r\n\r\n//-------Functions for relogging in\r\nexport const profile = (dispatch) => {\r\n  debugger\r\n  return userService.profile().then(status => {\r\n    debugger\r\n    return dispatch({\r\n      type: SIGN_IN,\r\n      user: status,\r\n    })})\r\n}\r\n\r\n//------- Functions for Login ----------\r\n\r\nexport const signIn = (dispatch, user, history) => {\r\n  debugger\r\n  return userService.signIn(user)\r\n    .then(status => {\r\n      debugger\r\n      if(status.username === null) {\r\n        dispatch({\r\n          type: WRONG_LOGIN\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: SIGN_IN,\r\n          user: status\r\n        })\r\n        history.push('/profile')\r\n      }\r\n    })\r\n}\r\n\r\n\r\n\r\n//------- Functions for Registration -----\r\n\r\nexport const updateUsername = (dispatch, newUser) => {\r\n  debugger\r\n  if (newUser.username == \"\") {\r\n    return dispatch({\r\n      type: UPDATE_USERNAME,\r\n      newUser,\r\n      isUsernameTaken: false\r\n    })\r\n  }\r\n  else {\r\n    return userService.getIsUser(newUser.username).then(status =>\r\n      dispatch({\r\n        type: UPDATE_USERNAME,\r\n        newUser,\r\n        isUsernameTaken: status\r\n      }))\r\n  }\r\n}\r\n\r\nexport const updateNewUser = (dispatch, newUser) => {\r\n  debugger\r\n  return dispatch({\r\n    type: UPDATE_NEWUSER,\r\n    newUser\r\n  })\r\n}\r\n\r\nexport const updateVerifyPassword = (dispatch, verifyPassword) => {\r\n  debugger\r\n  dispatch({\r\n    type: UPDATE_VERIFYPASSWORD,\r\n    verifyPassword\r\n  })\r\n}\r\n\r\nexport const createUser = (dispatch, newUser) => {\r\n  debugger\r\n  return userService.addUser(newUser)\r\n    .then(status =>\r\n      dispatch({\r\n        type: CREATE_USER,\r\n        newUser: status\r\n      }))\r\n}\r\n\r\nexport const createUser2 = (dispatch, newUser, history) => {\r\n  debugger\r\n  return userService.addUser(newUser)\r\n    .then(status => {\r\n      dispatch({\r\n        type: CREATE_USER,\r\n        newUser: status\r\n      })\r\n      history.push('/profile')\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../css/ProfilePage.css';\r\nimport {\r\n    updateFollowersExpanded,\r\n    updateFollowingExpanded,\r\n    getFollowers,\r\n    getCreators\r\n} from \"../actions/profileActions\"\r\nimport { Link } from 'react-router-dom';\r\nimport { profile } from \"../actions/userActions\";\r\n\r\nclass ProfilePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profile: {\r\n                userId: '',\r\n                username: '',\r\n                userType: 'follower'\r\n            },\r\n            followers: [],\r\n            following: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        this.props.profile().then(() => {\r\n        debugger\r\n        if (this.props.user.id === \"\") {\r\n            this.props.history.push('/login')\r\n        } else if (this.props.user.userType === \"creator\") {\r\n            this.props.getFollowers(this.props.user.id)\r\n        } else {\r\n            this.props.getCreators(this.props.user.id)\r\n        }\r\n    })\r\n    }\r\n\r\n    //TODO: redirect to login if not signed in\r\n    // need create new profile component at /profile/:userId for someone to see another person's profile\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"header\">My Profile</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        {this.props.user.userType === \"creator\" &&\r\n                            <div>\r\n                                <h1 className=\"length\">{this.props.followers.length}</h1>\r\n                                <h3><b className=\"btn-padding\">Followers</b>\r\n                                    {!this.props.followersExpanded && <button\r\n                                        onClick={() => this.props.updateFollowersExpanded(true)}\r\n                                        className=\"btn btn-outline-secondary\">expand</button>}\r\n                                    {this.props.followersExpanded && <button\r\n                                        onClick={() => this.props.updateFollowersExpanded(false)}\r\n                                        className=\"btn btn-outline-secondary\">contract</button>}\r\n                                </h3>\r\n                                {this.props.followersExpanded &&\r\n                                    <ul>\r\n                                        {\r\n                                            this.props.followers.map(follower => <li>{follower.username}</li>)\r\n                                        }\r\n                                    </ul>}\r\n                            </div>\r\n                        }\r\n                        {this.props.user.userType === \"follower\" &&\r\n                            <div>\r\n                                <h1 className=\"length padding-top\">{this.props.following.length}</h1>\r\n                                <h3><b className=\"btn-padding\">Following</b>\r\n                                    {!this.props.followingExpanded && <button onClick={() => this.props.updateFollowingExpanded(true)} className=\"btn btn-outline-secondary\">expand</button>}\r\n                                    {this.props.followingExpanded && <button onClick={() => this.props.updateFollowingExpanded(false)} className=\"btn btn-outline-secondary\">contract</button>}\r\n                                </h3>\r\n                                {this.props.followingExpanded &&\r\n                                    <ul>\r\n                                        {\r\n                                            this.props.following.map(following => <li>{following.username}</li>)\r\n                                        }\r\n                                    </ul>}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {this.props.user.userType === \"creator\" &&\r\n                        <div>\r\n                            <div className=\"col-4\">\r\n                                <Link to=\"/mealplans\">\r\n                                    <button className=\"btn btn-secondary create-meal-plan\">Create Meal Plan</button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"col-5\">\r\n                                <button className=\"btn btn-secondary my-meal-plans\">My Meal Plans</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {this.props.user.userType === \"follower\" &&\r\n                        <div className=\"col-4\">\r\n                            <button className=\"btn btn-secondary favorite-meal-plan\">Favorite Meal Plans</button>\r\n                        </div>\r\n                    }\r\n                    <div className=\"col-3\">\r\n                        <Link to={'/editprofile'}>\r\n                            <button className=\"btn btn-secondary edit-profile\">Edit Profile</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    followingExpanded: state.profileReducer.followingExpanded,\r\n    followersExpanded: state.profileReducer.followersExpanded,\r\n    following: state.profileReducer.following,\r\n    followers: state.profileReducer.followers,\r\n    user: state.userReducer.user\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    updateFollowersExpanded: (expanded) => updateFollowersExpanded(dispatch,\r\n        expanded),\r\n    updateFollowingExpanded: (expanded) => updateFollowingExpanded(dispatch,\r\n        expanded),\r\n    profile: () => profile(dispatch),\r\n    getFollowers: (userId) => getFollowers(dispatch, userId),\r\n    getCreators: (userId) => getCreators(dispatch, userId)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (ProfilePage)\r\n","import {\r\n    UPDATE_FOLLOWERS_EXPANDED,\r\n    UPDATE_FOLLOWING_EXPANDED,\r\n    ADD_FOLLOWING,\r\n    GET_FOLLOWERS,\r\n    GET_CREATORS\r\n} from \"../actions/profileActions\";\r\n\r\nconst initialState = {\r\n    followersExpanded: false,\r\n    followingExpanded: false,\r\n    followers: [\r\n    ],\r\n    following: [\r\n    ]\r\n\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_FOLLOWERS_EXPANDED:\r\n            return {\r\n                ...state,\r\n                followersExpanded: action.followersExpanded\r\n            }\r\n        case UPDATE_FOLLOWING_EXPANDED:\r\n            return {\r\n                ...state,\r\n                followingExpanded: action.followingExpanded\r\n            }\r\n        case ADD_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followers: action.newFollowing\r\n            }\r\n        case GET_FOLLOWERS:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                followers: action.users\r\n            }\r\n        case GET_CREATORS:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                following: action.users\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n","import {\r\n  FIND_RANDOM_RECIPE\r\n} from \"../actions/homeActions\";\r\n\r\nconst initialState = {\r\n  popularMealPlan: [], // the most liked recipe from our database\r\n  userFollowings: [], // the user's liked recipes\r\n  recentRecipes: [], // most recent recipes from our database\r\n  randomRecipes: [] // rando\r\n}\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FIND_RANDOM_RECIPE:\r\n      return {\r\n        ...state,\r\n        randomRecipes: action.randomRecipes.recipes,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default homeReducer\r\n","import {\r\n  EDIT_USER,\r\n  UPDATE_USER,\r\n  GET_IS_USER,\r\n  UPDATE_NEWUSER,\r\n  UPDATE_VERIFYPASSWORD,\r\n  UPDATE_USERNAME,\r\n  CREATE_USER,\r\n  WRONG_LOGIN,\r\n  SIGN_IN,\r\n\r\n} from \"../actions/userActions\";\r\n\r\nconst initialState = {\r\n  newUser: {\r\n    username: \"\",\r\n    password: \"\",\r\n    userType: \"follower\"\r\n  },\r\n  user: {\r\n    id: \"\"\r\n  },\r\n  tempUser: {\r\n\r\n  },\r\n  verifyPassword: \"\",\r\n  isUsernameTaken: false,\r\n  isWrong: false\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case EDIT_USER:\r\n      return {\r\n        ...state,\r\n        tempUser: action.tempUser\r\n      }\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.tempUser,\r\n      }\r\n    //not me\r\n    case GET_IS_USER:\r\n      return {\r\n        ...state\r\n      }\r\n    case UPDATE_NEWUSER:\r\n      return {\r\n        ...state,\r\n        newUser: action.newUser\r\n      }\r\n    case UPDATE_USERNAME:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        newUser: action.newUser,\r\n        isUsernameTaken: action.isUsernameTaken\r\n      }\r\n    case UPDATE_VERIFYPASSWORD:\r\n      return {\r\n        ...state,\r\n        verifyPassword: action.verifyPassword\r\n      }\r\n    case CREATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.newUser,\r\n        tempUser: action.newUser\r\n      }\r\n    case WRONG_LOGIN:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        isWrong: true\r\n      }\r\n    case SIGN_IN:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        isWrong: false,\r\n        user: action.user,\r\n        tempUser: action.user\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/NavBar.css';\r\n\r\nconst NavBar = ({}) =>\r\n    <nav className=\"navbar sticky-top bg-light nav-styling\">\r\n        <Link to=\"/\" className=\"nav-link nav-item navbar-nav text-styling\">\r\n            Home\r\n        </Link>\r\n        <Link to=\"/profile\" className=\"nav-link nav-item navbar-nav text-styling\">\r\n            Profile\r\n        </Link>\r\n        <Link to=\"/login\" className=\"nav-link nav-item text-styling\">\r\n            Login\r\n        </Link>\r\n        <Link to=\"/search\" className=\"nav-link nav-item text-styling\">\r\n            Search\r\n        </Link>\r\n    </nav>\r\n\r\nexport default NavBar\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { updateNewUser, signIn } from \"../actions/userActions\";\r\nimport '../css/Register.css'\r\n\r\n// put the router in here\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    // validation checks: does username already exist? is username/password input non-empty?\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <h1 className=\"header-styling\">Sign In</h1>\r\n                <form>\r\n                    {/* Username */}\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"username\" class=\"col-sm-2 col-form-label\">\r\n                            Username\r\n                </label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input class=\"form-control wbdv-field wbdv-username\"\r\n                                id=\"username\"\r\n                                placeholder=\"Alice\"\r\n                                value={this.props.newUser.username}\r\n                                onChange={(event) => this.props.updateNewUser({ ...this.props.newUser, username: event.target.value })} />\r\n                        </div>\r\n                    </div>\r\n                    {/* Password */}\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"password\" class=\"col-sm-2 col-form-label\">\r\n                            Password </label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input type=\"password\" class=\"form-control wbdv-field wbdv-password\"\r\n                                id=\"password\"\r\n                                placeholder=\"123qwe#$%\"\r\n                                value={this.props.newUser.password}\r\n                                onChange={(event) => this.props.updateNewUser({ ...this.props.newUser, password: event.target.value })} />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label class=\"col-sm-2 col-form-label\"></label>\r\n                        <div class=\"col-sm-10\">\r\n                            {/* Sign In */}\r\n                            <button type=\"button\"\r\n                                class=\"btn btn-outline-secondary btn-block\"\r\n                                onClick={() => this.props.signIn({ ...this.props.newUser }, this.props.history)}>Sign in</button>\r\n                            {\r\n                                this.props.isWrong && <p class=\"text-center errortext text-danger\">Wrong username or password</p>\r\n                            }\r\n                            <div class=\"row\">\r\n                                {/* Forgot Password */}\r\n                                <div class=\"col-6\">\r\n                                    <a href=\"#\">Forgot Password?</a>\r\n                                </div>\r\n                                {/* Sign Up */}\r\n                                <div class=\"col-6\">\r\n                                    <Link to=\"/register\"\r\n                                        class=\"float-right\">\r\n                                        Sign up\r\n                            </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    newUser: state.userReducer.newUser,\r\n    isWrong: state.userReducer.isWrong\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    updateNewUser: (newUser) => updateNewUser(dispatch, newUser),\r\n    signIn: (newUser, history) => signIn(dispatch, newUser, history),\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (LoginPage)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport {\r\n    updateNewUser,\r\n    updateVerifyPassword,\r\n    createUser2,\r\n    updateUsername,\r\n    createUser\r\n} from \"../actions/userActions\";\r\nimport '../css/Register.css'\r\n\r\n// put the router in here\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Sign Up</h1>\r\n                {/* Username */}\r\n                <div className=\"form-group row\">\r\n                    <label for=\"usernameFld\" className=\"col-sm-2 col-form-label\">\r\n                        Username\r\n              </label>\r\n                    <div class=\"col-sm-10\">\r\n                        <input className=\"form-control wbdv-field wbdv-username\"\r\n                            id=\"usernameFld\"\r\n                            value={this.props.newUser.username}\r\n                            onChange={(event) => this.props.updateUsername({ ...this.props.newUser, username: event.target.value })}\r\n                            placeholder=\"Alice\" />\r\n                    </div>\r\n                    <label className=\"col-sm-2\">\r\n                    </label>\r\n                    {\r\n                        this.props.isUsernameTaken && <p class=\"col-sm-4 errortext text-danger\">Username Taken</p>\r\n                    }\r\n                </div>\r\n                {/* Password */}\r\n                <div className=\"form-group row\">\r\n                    <label for=\"passwordFld\" className=\"col-sm-2 col-form-label\">\r\n                        Password </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"passwordFld\"\r\n                            value={this.props.newUser.password}\r\n                            onChange={(event) => this.props.updateNewUser({ ...this.props.newUser, password: event.target.value })}\r\n                            placeholder=\"123qwe#$%\" />\r\n                    </div>\r\n                </div>\r\n                {/* Verify Password */}\r\n                <div className=\"form-group row\">\r\n                    <label for=\"verifyPasswordFld\"\r\n                        className=\"col-sm-2 col-form-label\">\r\n                        Verify Password </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"verifyPasswordFld\"\r\n                            placeholder=\"123qwe#$%\"\r\n                            value={this.props.verifyPassword}\r\n                            onChange={(event) => this.props.updateVerifyPassword(event.target.value)} />\r\n                    </div>\r\n                    <label className=\"col-sm-2\">\r\n                    </label>\r\n                    {\r\n                        this.props.verifyPassword !== this.props.newUser.password\r\n                        && <p class=\"col-sm-4 errortext text-danger\">Passwords do not match</p>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label for=\"typeDropdown\"\r\n                        className=\"col-sm-2 col-form-label\">Type</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <select\r\n                            id=\"typeDropdown\"\r\n                            class=\"form-select\"\r\n                            aria-label=\"Default select example\"\r\n                            onChange={(event) => this.props.updateNewUser({ ...this.props.newUser, userType: event.target.value })}>\r\n                            <option value=\"creator\">Creator</option>\r\n                            <option selected value=\"follower\">Follower</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n                        {/* Sign Up */}\r\n                        {/* Need to disable button if \r\n                        username or password are empty,\r\n                        password and verify password don't match,\r\n                        username already exists*/}\r\n                        {\r\n                            !(this.props.isUsernameTaken ||\r\n                                this.props.newUser.username === \"\" ||\r\n                                this.props.newUser.password === \"\" ||\r\n                                this.props.newUser.password !== this.props.verifyPassword) &&\r\n                            <button type=\"button\"\r\n                                className=\"btn btn-outline-secondary btn-block\"\r\n                                onClick={() => this.props.createUser2({ ...this.props.newUser }, this.props.history)}>\r\n                                Sign Up\r\n                            </button>\r\n\r\n                        }\r\n                        {\r\n                            (this.props.isUsernameTaken ||\r\n                                this.props.newUser.username === \"\" ||\r\n                                this.props.newUser.password === \"\" ||\r\n                                this.props.newUser.password !== this.props.verifyPassword) &&\r\n                                <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-secondary btn-block\"\r\n                                disable>\r\n                                    Fix Errors to Sign Up\r\n                                </button>\r\n                        }\r\n                        {/* <button type=\"button\"\r\n                            className=\"btn btn-outline-secondary btn-block\"\r\n                            onClick={() => this.props.createUser2({ ...this.props.newUser }, this.props.history)}>\r\n                            Sign Up\r\n                        </button> */}\r\n                        {/* Login */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-10\">\r\n                                <Link to=\"/login\">Login</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    newUser: state.userReducer.newUser,\r\n    verifyPassword: state.userReducer.verifyPassword,\r\n    isUsernameTaken: state.userReducer.isUsernameTaken\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    updateNewUser: (newUser) => updateNewUser(dispatch, newUser),\r\n    updateUsername: (newUser) => updateUsername(dispatch, newUser),\r\n    updateVerifyPassword: (verifyPassword) => updateVerifyPassword(dispatch, verifyPassword),\r\n    createUser: (user) => createUser(dispatch, user),\r\n    createUser2: (newUser, history) => createUser2(dispatch, newUser, history),\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (Register)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    editUser,\r\n    updateUser,\r\n    updateVerifyPassword\r\n} from \"../actions/userActions\";\r\nimport { profile } from \"../actions/userActions\";\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        this.props.profile().then(() => {\r\n            debugger\r\n            if (this.props.user.id === \"\") {\r\n                this.props.history.push('/login')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    //TODO implement username edit\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"header-styling\">Edit Profile</h1>\r\n                    {/* Username */}\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n                            Username\r\n                        </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control\"\r\n                                id=\"username\"\r\n                                value={this.props.tempUser.username}\r\n                                onChange={(event) => this.props.editUser({ ...this.props.tempUser, username: event.target.value })} />\r\n                        </div>\r\n                    </div>\r\n                    {/* Password */}\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n                            Password </label>\r\n                        <div className=\"col-sm-8\">\r\n                            <input type=\"password\"\r\n                                className=\"form-control wbdv-field wbdv-password\"\r\n                                id=\"password\"\r\n                                placeholder=\"123qwe#$%\"\r\n                                value={this.props.tempUser.password}\r\n                                onChange={(event) => this.props.editUser({ ...this.props.tempUser, password: event.target.value })} />\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <button className=\"btn btn-outline-secondary\"\r\n                                onClick={() => this.props.updateUser(this.props.tempUser)}>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    tempUser: state.userReducer.tempUser,\r\n    user: state.userReducer.user\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    updateUser: (newUser) => updateUser(dispatch, newUser),\r\n    editUser: (newUser) => editUser(dispatch, newUser),\r\n    profile: () => profile(dispatch)\r\n\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (EditProfile)\r\n","// const url = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/courses2'\r\n// const dailyPlanUrl = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/modules'\r\nconst url = \"http://localhost:8080/api\";\r\nconst dailyPlanUrl = 'http://localhost:8080/api/dailyplans'\r\n\r\nexport const findDailyPlan = (dailyPlanId) =>\r\n    fetch(`${dailyPlanUrl}/${dailyPlanId}`)\r\n        .then(response => response.json())\r\n\r\n\r\nexport const findDailyPlansForMealPlan = (mealPlanId) => {\r\n    debugger\r\n    return fetch(`${url}/mealplans/${mealPlanId}/dailyplans`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const deleteDailyPlan = (dailyPlanId) => {\r\n    debugger\r\n    return fetch(`${dailyPlanUrl}/${dailyPlanId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => console.log(response))\r\n}\r\n\r\nexport const createDailyPlan = (mealPlanId, dailyPlan) => {\r\n    debugger\r\n    return fetch(`${url}/mealplans/${mealPlanId}/dailyplans`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(dailyPlan),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\nexport const updateDailyPlan = (dailyPlanId, dailyPlan) =>\r\n    fetch(`${dailyPlanUrl}/${dailyPlanId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(dailyPlan),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findDailyPlan,\r\n    findDailyPlansForMealPlan,\r\n    deleteDailyPlan,\r\n    createDailyPlan,\r\n    updateDailyPlan\r\n}\r\n","const url = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/modules'\r\nconst mealUrl = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/lessons'\r\n\r\nexport const findMeal = (mealId) =>\r\n    fetch(`${mealUrl}/${mealId}`).then(response => response.json())\r\n\r\n\r\nexport const findMealsForDailyPlan = (dailyPlanId) =>\r\n    fetch(`${url}/${dailyPlanId}/meals`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteMeal = (mealId) =>\r\n    fetch(`${mealUrl}/${mealId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const createMeal = (dailyPlanId, meal) =>\r\n\r\n    fetch(`${url}/${dailyPlanId}/meals`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(meal),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const updateMeal = (mealId, meal) =>\r\n    fetch(`${mealUrl}/${mealId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(meal),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findMeal,\r\n    findMealsForDailyPlan,\r\n    deleteMeal,\r\n    createMeal,\r\n    updateMeal\r\n}\r\n","import MealService from \"../services/MealService\"\r\n\r\nexport const DELETE_MEAL = \"DELETE_MEAL\"\r\nexport const CREATE_MEAL = \"CREATE_MEAL\"\r\nexport const UPDATE_MEAL = \"UPDATE_MEAL\"\r\nexport const FIND_MEALS_FOR_DAILY_PLAN = \"FIND_MEALS_FOR_DAILY_PLAN\"\r\nexport const FIND_MEAL = \"FIND_MEAL\"\r\n\r\n\r\n\r\nexport const deleteMeal = (dispatch, meal) =>\r\n    MealService.deleteMeal(meal._id)\r\n        .then(status =>\r\n            dispatch({\r\n                type: DELETE_MEAL,\r\n                meal\r\n            }))\r\n\r\nexport const createMeal = (dispatch, dailyPlanId, meal) =>\r\n    {\r\n        debugger\r\n        MealService.createMeal(dailyPlanId, meal)\r\n        .then(actualMeal =>\r\n            dispatch({\r\n                type: CREATE_MEAL,\r\n                meal: actualMeal\r\n            }))\r\n            \r\n        }\r\nexport const updateMeal = (dispatch, meal) =>\r\n    MealService.updateMeal(meal._id, meal)\r\n        .then(status =>\r\n            dispatch({\r\n                type: UPDATE_MEAL,\r\n                meal\r\n            }))\r\n\r\nexport const findMealsForDailyPlan = (dispatch, dailyPlanId) =>\r\n{\r\n    MealService.findMealsForDailyPlan(dailyPlanId)\r\n        .then(meals => dispatch({\r\n            type: FIND_MEALS_FOR_DAILY_PLAN,\r\n            meals,\r\n            dailyPlanId\r\n        }))\r\n    }\r\n\r\nexport const findMeal = (dispatch, mealId) =>\r\n    MealService.findMeal(mealId)\r\n        .then(meal => dispatch({\r\n            type: FIND_MEAL,\r\n            mealId\r\n        }))\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../css/Meals.css\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n    deleteMeal,\r\n    createMeal,\r\n    updateMeal\r\n} from \"../actions/mealActions\"\r\n\r\nconst Meals = ({ meals = [], dailyPlanId, mealPlan, deleteMeal, createMeal, updateMeal }) =>\r\n\r\n<div className=\"meals-container\">\r\n<h3>Meals</h3>\r\n<ul className=\"nav nav-tabs\">\r\n    {\r\n        meals.map(meal =>\r\n            <li className=\"nav-item\" key={meal._id}>\r\n                <button type=\"button\" className=\"btn btn-outline-danger inline \" onClick={() => deleteMeal(meal)}>\r\n                    <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                {meal.editing &&\r\n                    <span>\r\n                        <button type=\"button\" className=\"btn btn-outline-secondary inline\" onClick={() =>\r\n                            updateMeal({ ...meal, editing: false })}>\r\n                            Ok\r\n                     </button>\r\n\r\n                        <input\r\n                        className=\"form-control\"\r\n                            onChange={(event) =>\r\n                                updateMeal({ ...meal, title: event.target.value })}\r\n                            value={meal.title} />\r\n                    </span>}\r\n                {\r\n                    !meal.editing &&\r\n                    <label>\r\n                        <button type=\"button\" className=\"btn btn-outline-success inline\" onClick={() => updateMeal({ ...meal, editing: true })}>\r\n                            <i className=\"fa fa-edit\" />\r\n                        </button>\r\n                        <Link className=\"link\" to={`/edit/${mealPlan._id}/dailyPlans/${dailyPlanId}/meals/${meal._id}/recipesAndIngredients`}>{meal.title}</Link>\r\n                    </label>}\r\n            </li>)\r\n    }\r\n</ul>\r\n<button type=\"button\" className=\"btn btn-outline-secondary inline\" onClick={() =>\r\n    createMeal(dailyPlanId, { title: \"New Meal\" })}>Create Meal</button>\r\n</div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    meals: state.mealReducer.meals,\r\n    dailyPlanId: state.mealReducer.dailyPlanId,\r\n    mealPlan: state.mealPlanReducer.mealPlan\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteMeal: (meal) => deleteMeal(dispatch, meal),\r\n    createMeal: (dailyPlanId, meal) => createMeal(dispatch, dailyPlanId, meal),\r\n    updateMeal: (meal) => updateMeal(dispatch, meal)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (Meals)","import DailyPlanService from \"../services/DailyPlanService\"\r\n\r\nexport const DELETE_DAILY_PLAN = \"DELETE_DAILY_PLAN\"\r\nexport const CREATE_DAILY_PLAN = \"CREATE_DAILY_PLAN\"\r\nexport const UPDATE_DAILY_PLAN = \"UPDATE_DAILY_PLAN\"\r\nexport const FIND_DAILY_PLAN_FOR_MEAL_PLAN = \"FIND_DAILY_PLAN_FOR_MEAL_PLAN\"\r\nexport const FIND_DAILY_PLAN = \"FIND_DAILY_PLAN\"\r\n\r\nexport const findDailyPlan = (dispatch, dailyPlanId) =>\r\n    DailyPlanService.findDailyPlan(dailyPlanId)\r\n        .then(dailyPlan =>\r\n            dispatch({\r\n                type: FIND_DAILY_PLAN,\r\n                dailyPlanId\r\n            }))\r\n\r\nexport const deleteDailyPlan = (dispatch, dailyPlan) => \r\n    DailyPlanService.deleteDailyPlan(dailyPlan.id)\r\n        .then(status =>\r\n            dispatch({\r\n                type: DELETE_DAILY_PLAN,\r\n                dailyPlan\r\n            }))\r\n\r\nexport const createDailyPlan = (dispatch, mealPlan, dailyPlan) => \r\n    DailyPlanService.createDailyPlan(mealPlan.id, dailyPlan)\r\n        .then(actualDailyPlan =>\r\n            dispatch({\r\n                type: CREATE_DAILY_PLAN,\r\n                dailyPlan: actualDailyPlan\r\n            }))\r\n\r\nexport const updateDailyPlan = (dispatch, dailyPlan) =>\r\n    DailyPlanService.updateDailyPlan(dailyPlan.id, dailyPlan)\r\n        .then(status =>\r\n            dispatch({\r\n                type: UPDATE_DAILY_PLAN,\r\n                dailyPlan\r\n            }))\r\n\r\nexport const findDailyPlansForMealPlan = (dispatch, mealPlanId) =>\r\n    DailyPlanService.findDailyPlansForMealPlan(mealPlanId)\r\n        .then(dailyPlans => dispatch({\r\n            type: FIND_DAILY_PLAN_FOR_MEAL_PLAN,\r\n            dailyPlans\r\n        }))\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n  deleteDailyPlan,\r\n  createDailyPlan,\r\n  updateDailyPlan\r\n} from \"../actions/dailyPlanActions\"\r\nimport \"../css/DailyPlans.css\";\r\n\r\nconst DailyPlans = (\r\n  { mealPlan, dailyPlans = [],\r\n  deleteDailyPlan, createDailyPlan, updateDailyPlan}) =>\r\n  <div>\r\n  <h3 className=\"daily-plans-header\">Daily Plans</h3>\r\n  <div className=\"modules\">\r\n  <ul className=\"list-group\">\r\n      {\r\n          dailyPlans.map(dailyPlan =>\r\n              <li className=\"list-group-item\" key={dailyPlan._id}>\r\n                  <button type=\"button\" className=\"btn btn-outline-danger inline\" onClick={() => deleteDailyPlan(dailyPlan)}>\r\n                      <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                  {dailyPlan.editing &&\r\n                      <span>\r\n                          <button type=\"button\" className=\"btn btn-outline-secondary inline\" onClick={() =>\r\n                              updateDailyPlan({ ...dailyPlan, editing: false })}>\r\n                              Ok\r\n                       </button>\r\n\r\n                          <input\r\n                          className=\"form-control\"\r\n                              onChange={(event) =>\r\n                                  updateDailyPlan({ ...dailyPlan, title: event.target.value })}\r\n                              value={dailyPlan.name} />\r\n\r\n                      </span>}\r\n                  {\r\n                      !dailyPlan.editing &&\r\n                      <label>\r\n                          <button type=\"button\" className=\"btn btn-outline-success inline\" onClick={() => updateDailyPlan({ ...dailyPlan, editing: true })}>\r\n                          <i className=\"fa fa-edit\" />\r\n                          </button>\r\n                          <Link className=\"link\" to={`/edit/${mealPlan.id}/dailyPlans/${dailyPlan.id}`}>{dailyPlan.name}</Link>\r\n                      </label>}\r\n\r\n              </li>\r\n\r\n          )\r\n      }\r\n  </ul>\r\n  <button type=\"button\" className=\"btn btn-outline-secondary inline create\" onClick={() => createDailyPlan(mealPlan, { name: \"New Daily Plan\" })}>\r\n      Create Daily Plan\r\n  </button>\r\n</div>\r\n</div>\r\n\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  dailyPlans: state.dailyPlanReducer.dailyPlans,\r\n  mealPlan: state.mealPlanReducer.mealPlan\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n  deleteDailyPlan: (dailyPlan) => deleteDailyPlan(dispatch, dailyPlan),\r\n  createDailyPlan: (mealPlan, dailyPlan) => createDailyPlan(dispatch, mealPlan, dailyPlan),\r\n  updateDailyPlan: (dailyPlan) => updateDailyPlan(dispatch, dailyPlan)\r\n})\r\n\r\nexport default connect\r\n  (stateToPropertyMapper,\r\n  propertyToDispatchMapper)\r\n  (DailyPlans)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\ndeleteIngredient, \r\ndeleteRecipe\r\n} from \"../actions/recipeAndIngredientActions\"\r\n\r\nimport \"../css/RecipesAndIngredients.css\";\r\n\r\n\r\nconst RecipesAndIngredients = (\r\n  { mealPlan, dailyPlanId, lessonId, recipes, ingredients, deleteIngredient, deleteRecipe }) =>\r\n    <div className=\"row recipes-ingredients\">\r\n      <div className=\"col-5\">\r\n      <h3>Recipes</h3>\r\n      <ul>\r\n      {\r\n        recipes.map(recipe => <li key={recipe.id}>{recipe.title}\r\n        <button className=\"btn btn-outline-danger delete\" onClick={() => deleteRecipe(recipe.id)}>\r\n        <i className=\"fas fa-minus\"></i>\r\n        </button>\r\n        </li>)\r\n      }\r\n      </ul>\r\n      <Link to=\"recipesAndIngredients/search/recipes\">\r\n      <button className=\"btn btn-outline-secondary\">\r\n        Search Recipes\r\n        </button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"col-4\">\r\n      <h3>Ingredients</h3>\r\n      <ul>\r\n      {\r\n        ingredients.map(ingredient => <li key={ingredient.id}>{ingredient.title}\r\n                <button className=\"btn btn-outline-danger delete\" onClick={() => deleteIngredient(ingredient.id)}>\r\n        <i className=\"fas fa-minus\"></i>\r\n        </button>\r\n        </li>)\r\n      }\r\n      </ul>\r\n      <Link to=\"recipesAndIngredients/search/ingredients\">\r\n      <button className=\"btn btn-outline-secondary\">\r\n        Search Ingredients\r\n        </button>\r\n      </Link>\r\n      </div>\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  topics: state.recipesAndIngredientsReducer.topics,\r\n  lessonId: state.recipesAndIngredientsReducer.lessonId,\r\n  dailyPlanId: state.mealReducer.dailyPlanId,\r\n  mealPlan: state.mealPlanReducer.mealPlan, \r\n  recipes: state.recipesAndIngredientsReducer.recipes,\r\n  ingredients: state.recipesAndIngredientsReducer.ingredients\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n  deleteIngredient: (ingredientId) => deleteIngredient(dispatch, ingredientId),\r\n  deleteRecipe: (recipeId) => deleteRecipe(dispatch, recipeId)\r\n})\r\n\r\nexport default connect\r\n  (stateToPropertyMapper,\r\n    propertyToDispatchMapper)\r\n  (RecipesAndIngredients)","import { buildQueries } from \"@testing-library/react\";\r\nimport \"../css/MealPlanEditor.css\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MealPlanService from \"../services/MealPlanService\";\r\nimport DailyPlanService from \"../services/DailyPlanService\";\r\nimport Meals from \"../components/Meals\";\r\nimport DailyPlans from \"../components/DailyPlans\";\r\nimport RecipesAndIngredients from \"../components/RecipesAndIngredients\";\r\nimport { findDailyPlansForMealPlan} from \"../actions/dailyPlanActions\";\r\nimport { findDailyPlan } from \"../actions/dailyPlanActions\";\r\nimport { findMealPlanById } from \"../actions/mealPlanActions\";\r\nimport { findMealsForDailyPlan } from \"../actions/mealActions\";\r\nimport { findMeal } from \"../actions/mealActions\"\r\n\r\nimport \"../App.css\";\r\n\r\n\r\nclass MealPlanEditor extends React.Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        const mealPlanId = this.props.match.params.mealPlanId\r\n        debugger\r\n        const dailyPlanId = this.props.match.params.dailyPlanId\r\n        const mealId = this.props.match.params.mealId\r\n        const topicId = this.props.match.params.topicId\r\n        this.props.findMealPlanById(mealPlanId)\r\n        this.props.findDailyPlansForMealPlan(mealPlanId)\r\n        if (dailyPlanId) {\r\n            this.props.findDailyPlan(dailyPlanId)\r\n            this.props.findMealsForDailyPlan(dailyPlanId)\r\n        }\r\n        if (mealId) {\r\n            this.props.findMeal(mealId)\r\n            //this.props.findTopicsForLesson(mealId)\r\n        }\r\n        if (topicId) {\r\n          //  this.props.findTopicById(topicId)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const dailyPlanId = this.props.match.params.dailyPlanId\r\n        const previousDailyPlanId = prevProps.match.params.dailyPlanId\r\n        if (dailyPlanId !== previousDailyPlanId) {\r\n            this.props.findMealsForDailyPlan(dailyPlanId)\r\n        }\r\n        const mealId = this.props.match.params.mealId\r\n        const previousMealId = prevProps.match.params.mealId\r\n        if (mealId !== previousMealId) {\r\n           // this.props.findTopicsForLesson(mealId)\r\n        }\r\n        //const topicId = this.props.match.params.topicId\r\n       // console.log(topicId);\r\n       // const previousTopicId = prevProps.match.params.topicId\r\n       // if (topicId !== previousTopicId) {\r\n          //  this.props.findWidgetsForTopic(topicId)\r\n        //}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fixed\">\r\n                <h2>\r\n                <a className=\"editor-header\" href=\"#\">Meal Plan Editor</a>\r\n                </h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                    <DailyPlans />\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <Meals />\r\n                        <RecipesAndIngredients />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findDailyPlansForMealPlan: (mealPlanId) => findDailyPlansForMealPlan(dispatch, mealPlanId),\r\n    findMealPlanById: (mealPlanId) => findMealPlanById(dispatch, mealPlanId),\r\n    findDailyPlan: (dailyPlanId) => findDailyPlan(dispatch, dailyPlanId),\r\n    findMealsForDailyPlan: (dailyPlanId) => findMealsForDailyPlan(dispatch, dailyPlanId),\r\n    findMeal: (mealId) => findMeal(dispatch, mealId),\r\n   // findTopicsForLesson: (mealId) => findTopicsForLesson(dispatch, mealId),\r\n    //findTopicById: (topicId) => findTopic(dispatch, topicId),\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (MealPlanEditor)\r\n","import React from \"react\";\r\nimport \"../css/MealPlanManager.css\"\r\nimport MealPlanRow from \"../components/MealPlanRow\";\r\nimport MealPlanTable from \"../components/MealPlanTable\";\r\nimport MealPlanGrid from \"../components/MealPlanGrid\";\r\nimport { findMealPlansByCreator, createMealPlan, enterTitle } from \"../actions/mealPlanActions\";\r\nimport { connect } from 'react-redux';\r\nimport { act } from \"react-dom/test-utils\";\r\nimport \"../App.css\";\r\nimport userReducer from \"../reducers/userReducer\";\r\nimport UserService from \"../services/UserService\";\r\nimport {\r\n    profile\r\n} from '../actions/userActions';\r\n\r\nclass MealPlanManager extends React.Component {\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        this.props.profile()\r\n        this.props.findMealPlansByCreator(this.props.creatorId)\r\n        debugger\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* navbar */}\r\n                <nav class=\"navbar sticky-top navbar-dark manager-nav-bar\">\r\n                    <a class=\"navbar-brand \"> <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>  Meal Plan Manager</a>\r\n                    <div class=\"input-group mb-3\">\r\n                        <input type=\"text\" value={this.props.title} onChange={(event) => this.props.enterTitle(event.target.value)} class=\"form-control\" placeholder=\"New Meal Plan Title\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"btn btn-outline-success\" onClick={() => this.props.createMealPlan(this.props.creatorId, {\r\n                                name: this.props.title,\r\n                                diet: 'vegan',\r\n                                time: new Date()\r\n                            })} type=\"button\"><i className=\"fa fa-plus-circle\"\r\n                                aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <MealPlanTable />\r\n                {/* {\r\n                    this.props.isTable &&\r\n                    <MealPlanTable />\r\n                } */}\r\n                {/* {\r\n                    !this.props.isTable &&\r\n                    <MealPlanGrid\r\n                        mealPlans={this.state.mealPlans}\r\n                        deleteMealPlan={this.deleteMealPlan}\r\n                        updateMealPlan={this.updateMealPlan}\r\n                        changeDisplay={this.changeDisplay}\r\n                        updateTitle={this.updateTitle} />\r\n                } */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    console.log(state)\r\n    debugger\r\n    return ({\r\n        creatorId: state.userReducer.user.id,\r\n        mealPlans: state.mealPlanReducer.mealPlans,\r\n        title: state.mealPlanReducer.title\r\n    })\r\n}\r\n\r\nconst propertyToDispatchMapper = (dispatch) => {\r\n    debugger\r\n    return ({\r\n        profile: () => profile(dispatch),\r\n        findMealPlansByCreator: (creatorId) => findMealPlansByCreator(dispatch, creatorId),\r\n        createMealPlan: (creatorId, newMealPlan) => createMealPlan(dispatch, creatorId, newMealPlan),\r\n        enterTitle: (newTitle) => enterTitle(dispatch, newTitle)\r\n    })\r\n}\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (MealPlanManager)","import {\r\n    DELETE_DAILY_PLAN,\r\n    CREATE_DAILY_PLAN,\r\n    UPDATE_DAILY_PLAN,\r\n    FIND_DAILY_PLAN,\r\n    FIND_DAILY_PLAN_FOR_MEAL_PLAN\r\n\r\n  } from \"../actions/dailyPlanActions\"\r\n\r\nconst initialState = {\r\n    dailyPlans: [],\r\n    dailyPlanId:{}\r\n}\r\n\r\n\r\nconst dailyPlanReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_DAILY_PLAN:\r\n            return {\r\n                ...state,\r\n                dailyPlans: [...state.dailyPlans, action.dailyPlan]\r\n            }\r\n        case FIND_DAILY_PLAN_FOR_MEAL_PLAN:\r\n            return {\r\n                ...state,\r\n                dailyPlans: action.dailyPlans\r\n            }\r\n        case FIND_DAILY_PLAN:\r\n            return {\r\n                ...state,\r\n                dailyPlanId: action.dailyPlan\r\n            }\r\n        case UPDATE_DAILY_PLAN:\r\n            return {\r\n                ...state,\r\n                dailyPlans: state.dailyPlans.map(dailyPlan =>\r\n                dailyPlan._id === action.dailyPlan._id ? action.dailyPlan : dailyPlan)\r\n            }\r\n        case DELETE_DAILY_PLAN:\r\n            return {\r\n                ...state,\r\n                dailyPlans: state.dailyPlans.filter(dailyPlan => dailyPlan.id !== action.dailyPlan.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dailyPlanReducer\r\n","import {\r\n    FIND_MEAL_PLAN_BY_ID,\r\n    FIND_MEAL_PLANS_BY_CREATOR,\r\n    FIND_ALL_MEAL_PLANS,\r\n    DELETE_MEAL_PLAN,\r\n    CREATE_MEAL_PLAN,\r\n    UPDATE_MEAL_PLAN,\r\n    CHANGE_DISPLAY,\r\n    ENTER_TITLE,\r\n    UPDATE_TITLE\r\n} from \"../actions/mealPlanActions\"\r\n\r\nconst initialState = {\r\n    mealPlans: [],\r\n    mealPlan: {},\r\n    title: \"\",\r\n    isTable: true\r\n}\r\n\r\nconst mealPlanReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_ALL_MEAL_PLANS:\r\n            return {\r\n                ...state,\r\n                mealPlans: action.mealPlans\r\n            }\r\n        case CREATE_MEAL_PLAN:\r\n            return {\r\n                ...state,\r\n                mealPlans: [...state.mealPlans, action.newMealPlan],\r\n                title: \"\"\r\n            }\r\n        case FIND_MEAL_PLANS_BY_CREATOR:\r\n            return {\r\n                ...state,\r\n                mealPlans: action.mealPlans\r\n            }\r\n        case FIND_MEAL_PLAN_BY_ID:\r\n            return {\r\n                ...state,\r\n                mealPlan: action.mealPlan\r\n            }\r\n        case UPDATE_MEAL_PLAN:\r\n            return {\r\n                ...state,\r\n                mealPlans: state.mealPlans.map(mealPlan =>\r\n                    mealPlan._id === action.mealPlanId ? action.mealPlan : mealPlan)\r\n            }\r\n        case DELETE_MEAL_PLAN:\r\n            return {\r\n                ...state,\r\n                mealPlans: state.mealPlans.filter(mealPlan => mealPlan._id !== action.mealPlanId)\r\n            }\r\n        case CHANGE_DISPLAY:\r\n            return {\r\n                ...state,\r\n                isTable: !state.isTable\r\n            }\r\n        case ENTER_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.newTitle\r\n            }\r\n        case UPDATE_TITLE:\r\n            const newMealPlans = {\r\n                ...state.mealPlans\r\n            }\r\n            newMealPlans[action.number] = action.mealPlan\r\n            return {\r\n                ...state,\r\n                mealPlans: newMealPlans\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default mealPlanReducer","import {\r\n    DELETE_MEAL,\r\n    CREATE_MEAL,\r\n    UPDATE_MEAL,\r\n    FIND_MEAL,\r\n    FIND_MEALS_FOR_DAILY_PLAN\r\n\r\n  } from \"../actions/mealActions\"\r\n\r\nconst initialState = {\r\n    meals: [],\r\n    mealId: {}\r\n}\r\n\r\n\r\nconst mealReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_MEAL:\r\n            return {\r\n                ...state,\r\n                meals: [...state.meals, action.meal]\r\n            }\r\n        case FIND_MEALS_FOR_DAILY_PLAN:\r\n            return {\r\n                ...state,\r\n                meals: action.meals,\r\n                dailyPlanId: action.dailyPlanId\r\n            }\r\n        case FIND_MEAL:\r\n            return {\r\n                ...state,\r\n                mealId: action.mealId\r\n            }\r\n        case UPDATE_MEAL:\r\n            return {\r\n                ...state,\r\n                meals: state.meals.map(meal => meal._id === action.meal._id ? action.meal : meal)\r\n            }\r\n        case DELETE_MEAL:\r\n            return {\r\n                ...state,\r\n                meals: state.meals.filter(meal => meal._id !== action.meal._id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mealReducer\r\n","import {\r\n    FIND_INGREDIENTS,\r\n    UPDATE_KEYWORD,\r\n    FIND_INGREDIENT_INFO_BY_ID\r\n} from \"../actions/ingredientActions\"\r\n\r\n\r\n\r\nconst initialState = {\r\n    ingredients: [],\r\n    ingredient: {\r\n        possibleUnits: []\r\n    },\r\n    keyword: \"\",\r\n}\r\n\r\nconst ingredientReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_INGREDIENTS: \r\n            debugger\r\n            console.log(action.ingredients.results)\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients.results\r\n            }\r\n        case UPDATE_KEYWORD:\r\n            return {\r\n                ...state,\r\n                keyword: action.keyword\r\n            }\r\n        case FIND_INGREDIENT_INFO_BY_ID:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                ingredient: action.ingredient\r\n            }\r\n            console.log(state.ingredient)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ingredientReducer","\r\nimport {\r\n    DELETE_INGREDIENT,\r\n    DELETE_RECIPE,\r\n    ADD_INGREDIENT_FOR_MEAL,\r\n    ADD_RECIPE_FOR_MEAL,\r\n    FIND_INGREDIENTS_FOR_MEAL,\r\n    FIND_RECIPES_FOR_MEAL\r\n} from \"../actions/recipeAndIngredientActions\"\r\n\r\nconst initialState = {\r\n\r\n    recipes: [\r\n        {id: \"123\", mealId: \"5fd2a5458508590017dc1dba\", title: \"mac and cheese\"},\r\n        {id: \"234\", mealId: \"5fd2a5458508590017dc1dba\", title: \"chicken salad\"},\r\n        {id: \"345\", mealId: \"5fd2eef98508590017dc1dbf\", title: \"sweet potato soup\"},\r\n    ],\r\n    ingredients: [\r\n        {id: \"456\", mealId: \"5fd2eef98508590017dc1dbf\", title: \"strawberries\"},\r\n        {id: \"567\", mealId: \"5fd2eef98508590017dc1dbf\", title: \"chocolate\"},\r\n        {id: \"678\", mealId: \"5fd2a5458508590017dc1dba\", title: \"yogurt\"},\r\n    ]\r\n}\r\n\r\n\r\nconst recipesAndIngredientsReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case DELETE_INGREDIENT: \r\n        debugger\r\n            return {\r\n                ...state,\r\n                ingredients: state.ingredients.filter(ingredient => ingredient.id !== action.ingredientId)\r\n            }\r\n        case DELETE_RECIPE: \r\n            return {\r\n                ...state, \r\n                recipes: state.recipes.filter(recipe => recipe.id !== action.recipeId)\r\n            }\r\n        case ADD_RECIPE_FOR_MEAL: \r\n            return {\r\n                ...state, \r\n                recipes: [...state.recipes, action.recipe]\r\n            }\r\n        case ADD_INGREDIENT_FOR_MEAL: \r\n            return {\r\n                ...state, \r\n                ingredients: [...state.ingredients, action.ingredient]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default recipesAndIngredientsReducer\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../css/Search.css\";\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                <div className=\"col-4\"></div>\r\n                <div className=\"col-6\">\r\n                <h1 className=\"search\">Search</h1>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-6\">\r\n                        <Link to=\"/search/recipes\">\r\n                            <button className=\"btn btn-outline-secondary recipes-button\">\r\n                            <h2>Recipes</h2>\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <Link to=\"/search/ingredients\">\r\n                        <button className=\"btn btn-outline-secondary ingredients-button\">\r\n                            <h2>Ingredients</h2>\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"@fortawesome/fontawesome-free/css/all.css\"\r\nimport './index.css';\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\n\r\nimport FavoriteMealPlans from \"./containers/FavoriteMealPlans\"\r\nimport RecipeSelector from \"./containers/RecipeSelector\";\r\nimport IngredientSelector from \"./containers/IngredientSelector\";\r\nimport recipeReducer from \"./reducers/recipeReducer\";\r\nimport RecipeDetails from \"./containers/RecipeDetails\";\r\nimport IngredientDetails from \"./containers/IngredientDetails\";\r\nimport OthersProfilePage from './containers/OthersProfilePage';\r\nimport HomePage from \"./containers/HomePage\";\r\nimport ProfilePage from \"./containers/ProfilePage\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport homeReducer from \"./reducers/homeReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport NavBar from './components/NavBar';\r\nimport LoginPage from './containers/LoginPage';\r\nimport Register from './containers/Register';\r\nimport EditProfile from \"./components/EditProfile\";\r\nimport MealPlanEditor from \"./containers/MealPlanEditor\";\r\nimport MealPlanManager from \"./containers/MealPlanManager\";\r\nimport dailyPlanReducer from \"./reducers/dailyPlanReducer\"\r\nimport mealPlanReducer from \"./reducers/mealPlanReducer\"\r\nimport mealReducer from \"./reducers/mealReducer\"\r\nimport ingredientReducer from \"./reducers/ingredientReducer\"\r\nimport recipesAndIngredientsReducer from \"./reducers/recipesAndIngredientsReducer\"\r\nimport Search from \"./containers/Search\"\r\n\r\nconst rootReducer = combineReducers({\r\n  recipeReducer, profileReducer, homeReducer, userReducer, mealPlanReducer, mealReducer, \r\n  dailyPlanReducer, recipesAndIngredientsReducer, ingredientReducer\r\n});\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Route path=\"/\" component={NavBar}/>\r\n      <Route exact path=\"/\" component={HomePage}/>\r\n      <Route path=\"/profile\" exact component={ProfilePage} />\r\n      <Route path=\"/profile/favorites\" exact component={FavoriteMealPlans}/>\r\n      <Route path=\"/profile/:userId\" exact component={OthersProfilePage} />\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/search/recipes\" exact component={RecipeSelector} />\r\n      <Route path=\"/search/ingredients\" exact component={IngredientSelector} />\r\n      <Route path=\"/recipes/:recipeId\" exact component={RecipeDetails}/>\r\n      <Route path=\"/ingredients/:ingredientId\" exact component={IngredientDetails}/>\r\n      <Route path=\"/login\" exact component={LoginPage}/>\r\n      <Route path=\"/register\" exact component={Register}/>\r\n      <Route path=\"/editprofile\" exact component={EditProfile} />\r\n      <Route path=\"/mealplans\" exact component={MealPlanManager} />\r\n      <Route path={[\"/edit/:mealPlanId\",\r\n      \"/edit/:mealPlanId/dailyPlans/:dailyPlanId\",\r\n      \"/edit/:mealPlanId/dailyPlans/:dailyPlanId/meals/:mealId\",\r\n      \"/edit/:mealPlanId/dailyPlans/:dailyPlanId/meals/:mealId/recipesAndIngredients\"]}\r\n        exact\r\n        component={MealPlanEditor} />\r\n      <Route path=\"/edit/:mealPlanId/dailyPlans/:dailyPlanId/meals/:mealId/recipesAndIngredients/search/ingredients\" \r\n      exact component={IngredientSelector}/>\r\n      <Route path=\"/edit/:mealPlanId/dailyPlans/:dailyPlanId/meals/:mealId/recipesAndIngredients/search/recipes\" \r\n      exact component={RecipeSelector}/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}